{"remainingRequest":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/src/views/task-details.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/src/views/task-details.vue","mtime":1606596474983},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB0YXNrUG9zdHMgZnJvbSAnQC9jbXBzL3Rhc2stcG9zdHMnCmltcG9ydCB0YXNrQWN0aXZpdGllcyBmcm9tICdAL2NtcHMvdGFzay1hY3Rpdml0aWVzJwpleHBvcnQgZGVmYXVsdCB7CiAgICBuYW1lOiAndGFzay1kZXRhaWxzJywKICAgIHByb3BzOiB7CiAgICAgICAgdGFzazogewogICAgICAgICAgICB0eXBlOiBPYmplY3QsCiAgICAgICAgfSwKICAgICAgICBncm91cElkOiB7CiAgICAgICAgICAgIHR5cGU6IFN0cmluZywKICAgICAgICB9LAogICAgfSwKICAgIG1ldGhvZHM6IHsKICAgICAgICBjbG9zZUJ0bigpIHsKICAgICAgICAgICAgdGhpcy4kZW1pdCgnY2xvc2UnKQogICAgICAgICAgICB0aGlzLiRyb3V0ZXIucHVzaChgL2JvYXJkLyR7dGhpcy4kcm91dGUucGFyYW1zLmJvYXJkSWR9YCkKICAgICAgICB9LAogICAgICAgIHVwZGF0ZVRhc2tUeHQoZXYpIHsKICAgICAgICAgICAgY29uc29sZS5sb2coJ3RoaXMgZ3JvdXAgaWQgdGFzayBkZXRhaWxzJywgdGhpcy5ncm91cElkKQogICAgICAgICAgICB0aGlzLnRhc2sudHh0ID0gZXYudGFyZ2V0LmlubmVyVGV4dAogICAgICAgICAgICBjb25zdCBncm91cElkeCA9IHRoaXMuZ2V0R3JvdXBJZHhCeUlkKCkKICAgICAgICAgICAgY29uc3QgZ3JvdXAgPSB0aGlzLmJvYXJkLmdyb3Vwc1tncm91cElkeF0KICAgICAgICAgICAgY29uc3QgdGFza0lkeCA9IGdyb3VwLnRhc2tzLmZpbmRJbmRleCgKICAgICAgICAgICAgICAgICh0YXNrKSA9PiB0YXNrLmlkID09PSB0aGlzLnRhc2suaWQKICAgICAgICAgICAgKQogICAgICAgICAgICBncm91cC50YXNrcy5zcGxpY2UodGFza0lkeCwgMSwgdGhpcy50YXNrKQogICAgICAgICAgICB0aGlzLiRzdG9yZS5kaXNwYXRjaCh7CiAgICAgICAgICAgICAgICB0eXBlOiAnc2F2ZUJvYXJkJywKICAgICAgICAgICAgICAgIGJvYXJkOiB0aGlzLmJvYXJkLAogICAgICAgICAgICB9KQogICAgICAgIH0sCiAgICAgICAgZ2V0R3JvdXBJZHhCeUlkKCkgewogICAgICAgICAgICBjb25zdCBpZHggPSB0aGlzLmJvYXJkLmdyb3Vwcy5maW5kSW5kZXgoCiAgICAgICAgICAgICAgICAoZ3JvdXApID0+IGdyb3VwLmlkID09PSB0aGlzLmdyb3VwSWQKICAgICAgICAgICAgKQogICAgICAgICAgICByZXR1cm4gaWR4CiAgICAgICAgfSwKICAgICAgICBnZXRUYXNrUGF0aCgpIHsKICAgICAgICAgICAgY29uc3QgZ3JvdXBJZHggPSB0aGlzLmdldEdyb3VwSWR4QnlJZCgpCiAgICAgICAgICAgIGNvbnN0IGdyb3VwID0gdGhpcy5ib2FyZC5ncm91cHNbZ3JvdXBJZHhdCiAgICAgICAgICAgIGNvbnN0IHRhc2tJZHggPSBncm91cC50YXNrcy5maW5kSW5kZXgoCiAgICAgICAgICAgICAgICAodGFzaykgPT4gdGFzay5pZCA9PT0gdGhpcy50YXNrLmlkCiAgICAgICAgICAgICkKICAgICAgICAgICAgY29uc3QgdGFzayA9IGdyb3VwLnRhc2tzW3Rhc2tJZHhdCiAgICAgICAgICAgIHJldHVybiB0YXNrCiAgICAgICAgfSwKICAgICAgICB1cGRhdGVQb3N0cyhwb3N0cykgewogICAgICAgICAgICBjb25zdCB0YXNrID0gdGhpcy5nZXRUYXNrUGF0aCgpCiAgICAgICAgICAgIHRhc2sucG9zdHMgPSBwb3N0cwogICAgICAgICAgICB0aGlzLiRzdG9yZS5kaXNwYXRjaCh7CiAgICAgICAgICAgICAgICB0eXBlOiAnc2F2ZUJvYXJkJywKICAgICAgICAgICAgICAgIGJvYXJkOiB0aGlzLmJvYXJkLAogICAgICAgICAgICB9KQogICAgICAgIH0sCiAgICAgICAgZ2V0VGFza0J5SWQoKSB7CiAgICAgICAgICAgIGxldCB0YXNrCiAgICAgICAgICAgIGNvbnN0IHRhc2tJZCA9IHRoaXMuJHJvdXRlLnBhcmFtcy50YXNrSWQKICAgICAgICAgICAgdGhpcy5ib2FyZC5ncm91cHMuZm9yRWFjaCgoZ3JvdXApID0+IHsKICAgICAgICAgICAgICAgICgKICAgICAgICAgICAgICAgIHRhc2sgPSBncm91cC50YXNrcy5maW5kKCh0YXNrKSA9PiB0YXNrLmlkID09PSB0YXNrSWQpCiAgICAgICAgICAgIH0pCiAgICAgICAgICAgIHJldHVybiB0YXNrCiAgICAgICAgfSwKICAgIH0sCiAgICBjb21wdXRlZDogewogICAgICAgIGJvYXJkKCkgewogICAgICAgICAgICByZXR1cm4gdGhpcy4kc3RvcmUuZ2V0dGVycy5ib2FyZAogICAgICAgIH0sCiAgICAgICAgbG9nZ2VkSW5Vc2VyKCkgewogICAgICAgICAgICByZXR1cm4gdGhpcy4kc3RvcmUuZ2V0dGVycy5sb2dnZWRJblVzZXIKICAgICAgICB9LAogICAgfSwKICAgIC8vIHdhdGNoOiB7CiAgICAvLyAgICAgJyRyb3V0ZS5wYXJhbXMudGFza0lkJygpIHsKICAgIC8vICAgICAgICAgY29uc29sZS5sb2codGhpcy4kcm91dGUucGFyYW1zLnRhc2tJZCkKICAgIC8vICAgICAgICAgY29uc3QgdGFzayA9IHRoaXMuZ2V0VGFza0J5SWQoKQogICAgLy8gICAgICAgICBjb25zb2xlLmxvZygndGFzaycsIHRhc2spCiAgICAvLyAgICAgfSwKICAgIC8vIH0sCiAgICBjb21wb25lbnRzOiB7CiAgICAgICAgdGFza1Bvc3RzLAogICAgICAgIHRhc2tBY3Rpdml0aWVzLAogICAgfSwKfQo="},{"version":3,"sources":["task-details.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAyBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"task-details.vue","sourceRoot":"src/views","sourcesContent":["<template>\n    <section class=\"task-details-section\">\n        <div class=\"top-bar\">\n            <i @click.stop=\"closeBtn\" class=\"fas fa-times\"></i>\n            <h1\n                @blur.stop=\"updateTaskTxt\"\n                @keyup.enter=\"updateTaskTxt\"\n                contenteditable\n            >\n                {{ task.txt }}\n            </h1>\n        </div>\n        <el-tabs>\n            <el-tab-pane label=\"Task posts\">\n                <task-posts @updatePosts=\"updatePosts\" :posts=\"task.posts\" />\n            </el-tab-pane>\n            <el-tab-pane label=\"Task activities\">\n                <task-activities :activities=\"task.activities\" />\n            </el-tab-pane>\n        </el-tabs>\n        <!-- <h1>{{ task }}</h1> -->\n    </section>\n</template>\n\n<script>\nimport taskPosts from '@/cmps/task-posts'\nimport taskActivities from '@/cmps/task-activities'\nexport default {\n    name: 'task-details',\n    props: {\n        task: {\n            type: Object,\n        },\n        groupId: {\n            type: String,\n        },\n    },\n    methods: {\n        closeBtn() {\n            this.$emit('close')\n            this.$router.push(`/board/${this.$route.params.boardId}`)\n        },\n        updateTaskTxt(ev) {\n            console.log('this group id task details', this.groupId)\n            this.task.txt = ev.target.innerText\n            const groupIdx = this.getGroupIdxById()\n            const group = this.board.groups[groupIdx]\n            const taskIdx = group.tasks.findIndex(\n                (task) => task.id === this.task.id\n            )\n            group.tasks.splice(taskIdx, 1, this.task)\n            this.$store.dispatch({\n                type: 'saveBoard',\n                board: this.board,\n            })\n        },\n        getGroupIdxById() {\n            const idx = this.board.groups.findIndex(\n                (group) => group.id === this.groupId\n            )\n            return idx\n        },\n        getTaskPath() {\n            const groupIdx = this.getGroupIdxById()\n            const group = this.board.groups[groupIdx]\n            const taskIdx = group.tasks.findIndex(\n                (task) => task.id === this.task.id\n            )\n            const task = group.tasks[taskIdx]\n            return task\n        },\n        updatePosts(posts) {\n            const task = this.getTaskPath()\n            task.posts = posts\n            this.$store.dispatch({\n                type: 'saveBoard',\n                board: this.board,\n            })\n        },\n        getTaskById() {\n            let task\n            const taskId = this.$route.params.taskId\n            this.board.groups.forEach((group) => {\n                (\n                task = group.tasks.find((task) => task.id === taskId)\n            })\n            return task\n        },\n    },\n    computed: {\n        board() {\n            return this.$store.getters.board\n        },\n        loggedInUser() {\n            return this.$store.getters.loggedInUser\n        },\n    },\n    // watch: {\n    //     '$route.params.taskId'() {\n    //         console.log(this.$route.params.taskId)\n    //         const task = this.getTaskById()\n    //         console.log('task', task)\n    //     },\n    // },\n    components: {\n        taskPosts,\n        taskActivities,\n    },\n}\n</script>\n"]}]}