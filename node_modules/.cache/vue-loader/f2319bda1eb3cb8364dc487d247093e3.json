{"remainingRequest":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/src/views/task-details.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/src/views/task-details.vue","mtime":1607175842084},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBzaWRlQmFyIGZyb20gJ0AvY21wcy9zaWRlYmFyLnZ1ZScKaW1wb3J0IHRhc2tQb3N0cyBmcm9tICdAL2NtcHMvdGFzay1wb3N0cycKaW1wb3J0IHRhc2tBY3Rpdml0aWVzIGZyb20gJ0AvY21wcy90YXNrLWFjdGl2aXRpZXMnCmltcG9ydCB7IGV2ZW50QnVzIH0gZnJvbSAnQC9zZXJ2aWNlcy9ldmVudC1idXMuc2VydmljZScKCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAndGFzay1kZXRhaWxzJywKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgdGFzazogbnVsbCwKICAgICAgZ3JvdXBJZDogbnVsbCwKICAgICAgY29tcG9uZW50S2V5OiAwLAogICAgICBuZXdQb3N0OiBudWxsLAogICAgfQogIH0sCiAgY3JlYXRlZCgpIHsKICAgIGNvbnN0IHRhc2tJbmZvID0gdGhpcy5nZXRUYXNrSW5mb0J5SWQoKQogICAgdGhpcy50YXNrID0gdGFza0luZm8udGFzawogICAgdGhpcy5ncm91cElkID0gdGFza0luZm8uZ3JvdXBJZAogIH0sCiAgbWV0aG9kczogewogICAgY2xvc2VCdG4oKSB7CiAgICAgIHRoaXMuJHJvdXRlci5wdXNoKGAvYm9hcmQvJHt0aGlzLiRyb3V0ZS5wYXJhbXMuYm9hcmRJZH1gKQogICAgfSwKICAgIGdldFRhc2tzUGF0aCgpIHsKICAgICAgY29uc3QgZ3JvdXBJZHggPSB0aGlzLmJvYXJkLmdyb3Vwcy5maW5kSW5kZXgoCiAgICAgICAgKGdyb3VwKSA9PiBncm91cC5pZCA9PT0gdGhpcy5ncm91cElkCiAgICAgICkKICAgICAgY29uc3QgdGFza3MgPSB0aGlzLmJvYXJkLmdyb3Vwc1tncm91cElkeF0udGFza3MKICAgICAgcmV0dXJuIHRhc2tzCiAgICB9LAogICAgdXBkYXRlVGFza1R4dChldikgewogICAgICBldi50YXJnZXQuYmx1cigpCiAgICAgIGlmIChldi50YXJnZXQuaW5uZXJUZXh0ID09PSB0aGlzLnRhc2sudHh0KSByZXR1cm4KICAgICAgZWxzZSB7CiAgICAgICAgdGhpcy50YXNrLnR4dCA9IGV2LnRhcmdldC5pbm5lclRleHQKICAgICAgICBjb25zdCB0YXNrcyA9IHRoaXMuZ2V0VGFza3NQYXRoKCkKICAgICAgICBjb25zdCB0YXNrSWR4ID0gdGFza3MuZmluZEluZGV4KCh0YXNrKSA9PiB0YXNrLmlkID09PSB0aGlzLnRhc2suaWQpCiAgICAgICAgdGFza3Muc3BsaWNlKHRhc2tJZHgsIDEsIHRoaXMudGFzaykKICAgICAgICB0aGlzLiRzdG9yZS5kaXNwYXRjaCh7CiAgICAgICAgICB0eXBlOiAnc2F2ZUJvYXJkJywKICAgICAgICAgIGJvYXJkOiB0aGlzLmJvYXJkLAogICAgICAgIH0pCiAgICAgICAgdGhpcy4kc3RvcmUuZGlzcGF0Y2goeyB0eXBlOiAndXBkYXRlQm9hcmQnLCBib2FyZDogdGhpcy5ib2FyZCB9KQogICAgICAgIGV2ZW50QnVzLiRlbWl0KCd1cGRhdGVUYXNrUHJldmlldycsIHRoaXMudGFzaykKICAgICAgfQogICAgfSwKICAgIHVwZGF0ZVBvc3RzKHBvc3RzLCBhY3Rpdml0eSkgewogICAgICBjb25zdCB0YXNrcyA9IHRoaXMuZ2V0VGFza3NQYXRoKCkKICAgICAgY29uc3QgdGFza0lkeCA9IHRhc2tzLmZpbmRJbmRleCgodGFzaykgPT4gdGFzay5pZCA9PT0gdGhpcy50YXNrLmlkKQogICAgICB0YXNrc1t0YXNrSWR4XS5wb3N0cyA9IHBvc3RzCiAgICAgIHRoaXMuYm9hcmQuYWN0aXZpdGllcy51bnNoaWZ0KGFjdGl2aXR5KQogICAgICB0aGlzLiRzdG9yZS5kaXNwYXRjaCh7CiAgICAgICAgdHlwZTogJ3NhdmVCb2FyZCcsCiAgICAgICAgYm9hcmQ6IHRoaXMuYm9hcmQsCiAgICAgIH0pCiAgICAgIHRoaXMuJHN0b3JlLmRpc3BhdGNoKHsgdHlwZTogJ3VwZGF0ZUJvYXJkJywgYm9hcmQ6IHRoaXMuYm9hcmQgfSkKCiAgICAgIGV2ZW50QnVzLiRlbWl0KCd1cGRhdGVUYXNrUHJldmlldycsIHRoaXMudGFzaykKICAgIH0sCiAgICBnZXRUYXNrSW5mb0J5SWQoKSB7CiAgICAgIGxldCB0YXNrSW5mbyA9IHt9CiAgICAgIGNvbnN0IHRhc2tJZCA9IHRoaXMuJHJvdXRlLnBhcmFtcy50YXNrSWQKICAgICAgY29uc3QgZ3JvdXAgPSB0aGlzLmJvYXJkLmdyb3Vwcy5maW5kKChncm91cCkgPT4KICAgICAgICBncm91cC50YXNrcy5maW5kKCh0YXNrKSA9PiB0YXNrLmlkID09PSB0YXNrSWQpCiAgICAgICkKICAgICAgdGFza0luZm8udGFzayA9IGdyb3VwLnRhc2tzLmZpbmQoKHRhc2spID0+IHRhc2suaWQgPT09IHRhc2tJZCkKICAgICAgdGFza0luZm8uZ3JvdXBJZCA9IGdyb3VwLmlkCiAgICAgIHJldHVybiB0YXNrSW5mbwogICAgfSwKICAgIGZvcmNlUmVyZW5kZXIoKSB7CiAgICAgIHRoaXMuY29tcG9uZW50S2V5ICs9IDEKICAgIH0sCgogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIGJvYXJkKCkgewogICAgICByZXR1cm4gdGhpcy4kc3RvcmUuZ2V0dGVycy5ib2FyZAogICAgfSwKICAgIHVzZXIoKSB7CiAgICAgIHJldHVybiB0aGlzLiRzdG9yZS5nZXR0ZXJzLnVzZXIKICAgIH0sCiAgICBwb3N0cygpIHsKICAgICAgcmV0dXJuIHRoaXMudGFzay5wb3N0cwogICAgfSwKICAgIHRhc2tBY3Rpdml0aWVzKCkgewogICAgICBsZXQgdGFza0FjdGl2aXRpZXMgPSBbXQogICAgICBjb25zdCBib2FyZEFjdGl2aXRpZXMgPSBKU09OLnBhcnNlKAogICAgICAgIEpTT04uc3RyaW5naWZ5KHRoaXMuJHN0b3JlLmdldHRlcnMuYm9hcmRBY3Rpdml0aWVzKQogICAgICApCiAgICAgIGNvbnN0IHRhc2tJZCA9IHRoaXMuJHJvdXRlLnBhcmFtcy50YXNrSWQKICAgICAgYm9hcmRBY3Rpdml0aWVzLmZvckVhY2goKGFjdGl2aXR5KSA9PiB7CiAgICAgICAgaWYgKGFjdGl2aXR5LnRhc2tJZCA9PT0gdGFza0lkKSB0YXNrQWN0aXZpdGllcy5wdXNoKGFjdGl2aXR5KQogICAgICB9KQogICAgICByZXR1cm4gdGFza0FjdGl2aXRpZXMKICAgIH0sCiAgfSwKICB3YXRjaDogewogICAgJyRyb3V0ZS5wYXJhbXMudGFza0lkJygpIHsKICAgICAgY29uc3QgdGFza0luZm8gPSB0aGlzLmdldFRhc2tJbmZvQnlJZCgpCiAgICAgIHRoaXMuZ3JvdXBJZCA9IHRhc2tJbmZvLmdyb3VwSWQKICAgICAgdGhpcy50YXNrID0gSlNPTi5wYXJzZShKU09OLnN0cmluZ2lmeSh0YXNrSW5mby50YXNrKSkKICAgIH0sCiAgfSwKICBkZXN0cm95ZWQoKSB7CiAgICBjb25zb2xlLmxvZygndGhpcy50YXNrIGRlc3Rvcnk6JywgdGhpcy50YXNrKQogICAgZXZlbnRCdXMuJGVtaXQoJ3VwZGF0ZVRhc2tQcmV2aWV3RGVzdG9yeScsIHRoaXMudGFzaykKICB9LAogIGNvbXBvbmVudHM6IHsKICAgIHRhc2tQb3N0cywKICAgIHRhc2tBY3Rpdml0aWVzLAogICAgc2lkZUJhciwKICB9LAp9Cg=="},{"version":3,"sources":["task-details.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmCA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"task-details.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <side-bar @closeBtn=\"closeBtn\">\n    <section v-if=\"task\" class=\"task-details-section\">\n      <div class=\"task-title-container\">\n        <h2\n          class=\"task-title editable\"\n          spellcheck=\"false\"\n          @blur.stop=\"updateTaskTxt\"\n          @keyup.enter=\"updateTaskTxt\"\n          contenteditable\n        >\n          {{ task.txt }}\n        </h2>\n      </div>\n      <el-tabs>\n        <el-tab-pane label=\"Task Posts\">\n          <task-posts\n            v-if=\"posts\"\n           \n            @updatePosts=\"updatePosts\"\n            :task=\"task\"\n            :posts=\"posts\"\n          />\n        </el-tab-pane>\n        <el-tab-pane label=\"Task Activities\">\n          <task-activities\n            v-if=\"taskActivities && taskActivities.length\"\n            :activities=\"taskActivities\"\n          />\n        </el-tab-pane>\n      </el-tabs>\n    </section>\n  </side-bar>\n</template>\n<script>\nimport sideBar from '@/cmps/sidebar.vue'\nimport taskPosts from '@/cmps/task-posts'\nimport taskActivities from '@/cmps/task-activities'\nimport { eventBus } from '@/services/event-bus.service'\n\nexport default {\n  name: 'task-details',\n  data() {\n    return {\n      task: null,\n      groupId: null,\n      componentKey: 0,\n      newPost: null,\n    }\n  },\n  created() {\n    const taskInfo = this.getTaskInfoById()\n    this.task = taskInfo.task\n    this.groupId = taskInfo.groupId\n  },\n  methods: {\n    closeBtn() {\n      this.$router.push(`/board/${this.$route.params.boardId}`)\n    },\n    getTasksPath() {\n      const groupIdx = this.board.groups.findIndex(\n        (group) => group.id === this.groupId\n      )\n      const tasks = this.board.groups[groupIdx].tasks\n      return tasks\n    },\n    updateTaskTxt(ev) {\n      ev.target.blur()\n      if (ev.target.innerText === this.task.txt) return\n      else {\n        this.task.txt = ev.target.innerText\n        const tasks = this.getTasksPath()\n        const taskIdx = tasks.findIndex((task) => task.id === this.task.id)\n        tasks.splice(taskIdx, 1, this.task)\n        this.$store.dispatch({\n          type: 'saveBoard',\n          board: this.board,\n        })\n        this.$store.dispatch({ type: 'updateBoard', board: this.board })\n        eventBus.$emit('updateTaskPreview', this.task)\n      }\n    },\n    updatePosts(posts, activity) {\n      const tasks = this.getTasksPath()\n      const taskIdx = tasks.findIndex((task) => task.id === this.task.id)\n      tasks[taskIdx].posts = posts\n      this.board.activities.unshift(activity)\n      this.$store.dispatch({\n        type: 'saveBoard',\n        board: this.board,\n      })\n      this.$store.dispatch({ type: 'updateBoard', board: this.board })\n\n      eventBus.$emit('updateTaskPreview', this.task)\n    },\n    getTaskInfoById() {\n      let taskInfo = {}\n      const taskId = this.$route.params.taskId\n      const group = this.board.groups.find((group) =>\n        group.tasks.find((task) => task.id === taskId)\n      )\n      taskInfo.task = group.tasks.find((task) => task.id === taskId)\n      taskInfo.groupId = group.id\n      return taskInfo\n    },\n    forceRerender() {\n      this.componentKey += 1\n    },\n\n  },\n  computed: {\n    board() {\n      return this.$store.getters.board\n    },\n    user() {\n      return this.$store.getters.user\n    },\n    posts() {\n      return this.task.posts\n    },\n    taskActivities() {\n      let taskActivities = []\n      const boardActivities = JSON.parse(\n        JSON.stringify(this.$store.getters.boardActivities)\n      )\n      const taskId = this.$route.params.taskId\n      boardActivities.forEach((activity) => {\n        if (activity.taskId === taskId) taskActivities.push(activity)\n      })\n      return taskActivities\n    },\n  },\n  watch: {\n    '$route.params.taskId'() {\n      const taskInfo = this.getTaskInfoById()\n      this.groupId = taskInfo.groupId\n      this.task = JSON.parse(JSON.stringify(taskInfo.task))\n    },\n  },\n  destroyed() {\n    console.log('this.task destory:', this.task)\n    eventBus.$emit('updateTaskPreviewDestory', this.task)\n  },\n  components: {\n    taskPosts,\n    taskActivities,\n    sideBar,\n  },\n}\n</script>\n"]}]}