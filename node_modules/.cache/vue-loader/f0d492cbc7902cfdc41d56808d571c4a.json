{"remainingRequest":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/src/cmps/Trello/trello-mode.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/src/cmps/Trello/trello-mode.vue","mtime":1607357296421},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCi8vIGltcG9ydCB7IGJvYXJkU2VydmljZSB9IGZyb20gJy4uLy4uL3NlcnZpY2VzL2JvYXJkLnNlcnZpY2UnCmltcG9ydCBzdGF0dXNMaXN0IGZyb20gJy4vc3RhdHVzLWxpc3QnCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnVHJlbGxvLW1vZGUnLAogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBncm91cDogbnVsbAogICAgfQogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIHRhc2tzQnlTdGF0dWVzKCkgewogICAgICByZXR1cm4gSlNPTi5wYXJzZShKU09OLnN0cmluZ2lmeSh0aGlzLiRzdG9yZS5nZXR0ZXJzLnRhc2tzQnlTdGF0dWVzKSkKICAgIH0sCiAgICBib2FyZCgpIHsKICAgICAgcmV0dXJuIHRoaXMuJHN0b3JlLmdldHRlcnMuYm9hcmQKICAgIH0KICB9LAogIGNvbXBvbmVudHM6IHsKICAgIHN0YXR1c0xpc3QKICB9LAogIGNyZWF0ZWQoKSB7CgogICAgbGV0IGdyb3VwID0gdGhpcy5ib2FyZC5ncm91cHNbdGhpcy5ib2FyZC5ncm91cHMubGVuZ3RoLTFdCiAgICB0aGlzLmdyb3VwID0gZ3JvdXAKICB9Cn0K"},{"version":3,"sources":["trello-mode.vue"],"names":[],"mappings":";;;;;;;;;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"trello-mode.vue","sourceRoot":"src/cmps/Trello","sourcesContent":["<template>\n  <section class=\"trello flex wrap align-center\">\n    <div class=\"status-container\">\n      <status-list :statuses=\"tasksByStatues\" :group=\"group\" />\n    </div>\n  </section>\n</template>\n\n<script>\n// import { boardService } from '../../services/board.service'\nimport statusList from './status-list'\nexport default {\n  name: 'Trello-mode',\n  data() {\n    return {\n      group: null\n    }\n  },\n  computed: {\n    tasksByStatues() {\n      return JSON.parse(JSON.stringify(this.$store.getters.tasksByStatues))\n    },\n    board() {\n      return this.$store.getters.board\n    }\n  },\n  components: {\n    statusList\n  },\n  created() {\n\n    let group = this.board.groups[this.board.groups.length-1]\n    this.group = group\n  }\n}\n</script>\n"]}]}