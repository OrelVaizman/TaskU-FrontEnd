{"remainingRequest":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/src/views/task-details.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/src/views/task-details.vue","mtime":1606808749410},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB0YXNrUG9zdHMgZnJvbSAnQC9jbXBzL3Rhc2stcG9zdHMnCmltcG9ydCB0YXNrQWN0aXZpdGllcyBmcm9tICdAL2NtcHMvdGFzay1hY3Rpdml0aWVzJwppbXBvcnQgeyBldmVudEJ1cyB9IGZyb20gJ0Avc2VydmljZXMvZXZlbnQtYnVzLnNlcnZpY2UnCmltcG9ydCB7Ym9hcmRTZXJ2aWNlfSBmcm9tICdAL3NlcnZpY2VzL2JvYXJkLnNlcnZpY2UnCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAndGFzay1kZXRhaWxzJywKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgdGFzazogbnVsbCwKICAgICAgZ3JvdXBJZDogbnVsbCwKICAgICAgY29tcG9uZW50S2V5OiAwLAogICAgICBuZXdQb3N0OiBudWxsCiAgICB9CiAgfSwKICBjcmVhdGVkKCkgewogICAgY29uc3QgdGFza0luZm8gPSB0aGlzLmdldFRhc2tJbmZvQnlJZCgpCiAgICB0aGlzLnRhc2sgPSB0YXNrSW5mby50YXNrCiAgICB0aGlzLmdyb3VwSWQgPSB0YXNrSW5mby5ncm91cElkCiAgfSwKICBtZXRob2RzOiB7CiAgICBjbG9zZUJ0bigpIHsKICAgICAgdGhpcy4kZW1pdCgnY2xvc2UnKQogICAgICB0aGlzLiRyb3V0ZXIucHVzaChgL2JvYXJkLyR7dGhpcy4kcm91dGUucGFyYW1zLmJvYXJkSWR9YCkKICAgIH0sCiAgICBnZXRUYXNrc1BhdGgoKSB7CiAgICAgIGNvbnN0IGdyb3VwSWR4ID0gdGhpcy5ib2FyZC5ncm91cHMuZmluZEluZGV4KAogICAgICAgIGdyb3VwID0+IGdyb3VwLmlkID09PSB0aGlzLmdyb3VwSWQKICAgICAgKQogICAgICBjb25zdCB0YXNrcyA9IHRoaXMuYm9hcmQuZ3JvdXBzW2dyb3VwSWR4XS50YXNrcwogICAgICByZXR1cm4gdGFza3MKICAgIH0sCiAgICB1cGRhdGVUYXNrVHh0KGV2KSB7CiAgICAgIHRoaXMudGFzay50eHQgPSBldi50YXJnZXQuaW5uZXJUZXh0CiAgICAgIGNvbnN0IHRhc2tzID0gdGhpcy5nZXRUYXNrc1BhdGgoKQogICAgICBjb25zdCB0YXNrSWR4ID0gdGFza3MuZmluZEluZGV4KHRhc2sgPT4gdGFzay5pZCA9PT0gdGhpcy50YXNrLmlkKQogICAgICB0YXNrcy5zcGxpY2UodGFza0lkeCwgMSwgdGhpcy50YXNrKQogICAgICB0aGlzLiRzdG9yZS5kaXNwYXRjaCh7CiAgICAgICAgdHlwZTogJ3NhdmVCb2FyZCcsCiAgICAgICAgYm9hcmQ6IHRoaXMuYm9hcmQKICAgICAgfSkKICAgICAgCiAgICB9LAogICAgdXBkYXRlUG9zdHMocG9zdHMpIHsKICAgICAgY29uc3QgdGFza3MgPSB0aGlzLmdldFRhc2tzUGF0aCgpCiAgICAgIGNvbnN0IHRhc2tJZHggPSB0YXNrcy5maW5kSW5kZXgodGFzayA9PiB0YXNrLmlkID09PSB0aGlzLnRhc2suaWQpCiAgICAgIHRhc2tzW3Rhc2tJZHhdLnBvc3RzID0gcG9zdHMKICAgICAgICAgIGNvbnN0IHR4dCA9IGAke3RoaXMudXNlci5mdWxsTmFtZX0gYWRkIG5ldyBwb3N0YAogICAgICBsZXQgbmV3QWN0aXZpdHkgPSBib2FyZFNlcnZpY2UuZ2V0RW1wdHlBY3Rpdml0eSh0eHQsIHRoaXMudXNlcikKICAgICAgIHRoaXMuYm9hcmQuYWN0aXZpdGllcy5wdXNoKG5ld0FjdGl2aXR5KQogICAgICB0aGlzLiRzdG9yZS5kaXNwYXRjaCh7CiAgICAgICAgdHlwZTogJ3NhdmVCb2FyZCcsCiAgICAgICAgYm9hcmQ6IHRoaXMuYm9hcmQKICAgICAgfSkKICAKICAgICAgZXZlbnRCdXMuJGVtaXQoJ3VwZGF0ZVRhc2tQcmV2aWV3JywgdGhpcy50YXNrKQogICAgfSwKICAgIGdldFRhc2tJbmZvQnlJZCgpIHsKICAgICAgbGV0IHRhc2tJbmZvID0ge30KICAgICAgY29uc3QgdGFza0lkID0gdGhpcy4kcm91dGUucGFyYW1zLnRhc2tJZAogICAgICBjb25zdCBncm91cCA9IHRoaXMuYm9hcmQuZ3JvdXBzLmZpbmQoZ3JvdXAgPT4KICAgICAgICBncm91cC50YXNrcy5maW5kKHRhc2sgPT4gdGFzay5pZCA9PT0gdGFza0lkKQogICAgICApCiAgICAgIHRhc2tJbmZvLnRhc2sgPSBncm91cC50YXNrcy5maW5kKHRhc2sgPT4gdGFzay5pZCA9PT0gdGFza0lkKQogICAgICB0YXNrSW5mby5ncm91cElkID0gZ3JvdXAuaWQKICAgICAgcmV0dXJuIHRhc2tJbmZvCiAgICB9LAogICAgZm9yY2VSZXJlbmRlcigpIHsKICAgICAgdGhpcy5jb21wb25lbnRLZXkgKz0gMQogICAgfQogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIGJvYXJkKCkgewogICAgICByZXR1cm4gdGhpcy4kc3RvcmUuZ2V0dGVycy5ib2FyZAogICAgfSwKICAgIHVzZXIoKSB7CiAgICAgIHJldHVybiB0aGlzLiRzdG9yZS5nZXR0ZXJzLnVzZXIKICAgIH0sCiAgICBwb3N0cygpIHsKICAgICAgcmV0dXJuIHRoaXMudGFzay5wb3N0cwogICAgfQogIH0sCiAgd2F0Y2g6IHsKICAgICckcm91dGUucGFyYW1zLnRhc2tJZCcoKSB7CiAgICAgIGNvbnN0IHRhc2tJbmZvID0gdGhpcy5nZXRUYXNrSW5mb0J5SWQoKQogICAgICB0aGlzLmdyb3VwSWQgPSB0YXNrSW5mby5ncm91cElkCiAgICAgIHRoaXMudGFzayA9IEpTT04ucGFyc2UoSlNPTi5zdHJpbmdpZnkodGFza0luZm8udGFzaykpCiAgICB9CiAgfSwKICBjb21wb25lbnRzOiB7CiAgICB0YXNrUG9zdHMsCiAgICB0YXNrQWN0aXZpdGllcwogIH0KfQo="},{"version":3,"sources":["task-details.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAuBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"task-details.vue","sourceRoot":"src/views","sourcesContent":["<template>\n    <section v-if=\"task\" class=\"task-details-section\">\n        <div class=\"top-bar\">\n            <button v-tooltip.top=\"'Close Task Details'\" class=\"cls-btn\"><i @click.stop=\"closeBtn\" class=\"fas fa-times\"></i></button>\n            <h1 class=\"task-title editable\"\n                @blur.stop=\"updateTaskTxt\"\n                @keyup.enter=\"updateTaskTxt\"\n                contenteditable\n            >\n                {{ task.txt }}\n            </h1>\n        </div>\n        <el-tabs>\n            <el-tab-pane label=\"Task Posts\">\n                <task-posts @updatePosts=\"updatePosts\" :posts=\"posts\" />\n            </el-tab-pane>\n            <el-tab-pane label=\"Task Activities\">\n                <task-activities :activities=\"task.activities\" />\n            </el-tab-pane>\n        </el-tabs>\n    </section>\n</template>\n<script>\nimport taskPosts from '@/cmps/task-posts'\nimport taskActivities from '@/cmps/task-activities'\nimport { eventBus } from '@/services/event-bus.service'\nimport {boardService} from '@/services/board.service'\nexport default {\n  name: 'task-details',\n  data() {\n    return {\n      task: null,\n      groupId: null,\n      componentKey: 0,\n      newPost: null\n    }\n  },\n  created() {\n    const taskInfo = this.getTaskInfoById()\n    this.task = taskInfo.task\n    this.groupId = taskInfo.groupId\n  },\n  methods: {\n    closeBtn() {\n      this.$emit('close')\n      this.$router.push(`/board/${this.$route.params.boardId}`)\n    },\n    getTasksPath() {\n      const groupIdx = this.board.groups.findIndex(\n        group => group.id === this.groupId\n      )\n      const tasks = this.board.groups[groupIdx].tasks\n      return tasks\n    },\n    updateTaskTxt(ev) {\n      this.task.txt = ev.target.innerText\n      const tasks = this.getTasksPath()\n      const taskIdx = tasks.findIndex(task => task.id === this.task.id)\n      tasks.splice(taskIdx, 1, this.task)\n      this.$store.dispatch({\n        type: 'saveBoard',\n        board: this.board\n      })\n      \n    },\n    updatePosts(posts) {\n      const tasks = this.getTasksPath()\n      const taskIdx = tasks.findIndex(task => task.id === this.task.id)\n      tasks[taskIdx].posts = posts\n          const txt = `${this.user.fullName} add new post`\n      let newActivity = boardService.getEmptyActivity(txt, this.user)\n       this.board.activities.push(newActivity)\n      this.$store.dispatch({\n        type: 'saveBoard',\n        board: this.board\n      })\n  \n      eventBus.$emit('updateTaskPreview', this.task)\n    },\n    getTaskInfoById() {\n      let taskInfo = {}\n      const taskId = this.$route.params.taskId\n      const group = this.board.groups.find(group =>\n        group.tasks.find(task => task.id === taskId)\n      )\n      taskInfo.task = group.tasks.find(task => task.id === taskId)\n      taskInfo.groupId = group.id\n      return taskInfo\n    },\n    forceRerender() {\n      this.componentKey += 1\n    }\n  },\n  computed: {\n    board() {\n      return this.$store.getters.board\n    },\n    user() {\n      return this.$store.getters.user\n    },\n    posts() {\n      return this.task.posts\n    }\n  },\n  watch: {\n    '$route.params.taskId'() {\n      const taskInfo = this.getTaskInfoById()\n      this.groupId = taskInfo.groupId\n      this.task = JSON.parse(JSON.stringify(taskInfo.task))\n    }\n  },\n  components: {\n    taskPosts,\n    taskActivities\n  }\n}\n</script>\n"]}]}