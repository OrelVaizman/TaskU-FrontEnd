{"remainingRequest":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/src/views/board-app.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/src/views/board-app.vue","mtime":1606808749409},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["board-app.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"board-app.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <section v-if=\"!isLoading\" class=\"board-app flex\">\n    <board-list\n      :isExpanded=\"isListExpanded\"\n      @removeBoard=\"removeCurrBoard\"\n      @addNewBoard=\"addBoard\"\n      :boards=\"boards\"\n      title=\"Boards\"\n    >\n      <button\n        slot=\"expand-btn\"\n        @click=\"toggleExpandList\"\n        @mouseover=\"expandList\"\n        :style=\"expendStyle\"\n        :class=\"{ 'expand-list-btn': true, notExpanded: !isListExpanded }\"\n      >\n        <i v-tooltip.right=\"'Expend/Hide List'\" :class=\"expendBtnStyle\"></i>\n      </button>\n\n      <board-search @searchBoard=\"setSearch\" slot=\"search\" />\n    </board-list>\n\n    <div class=\"board-app-container width100\">\n      <board-header\n        :updateBoardName=\"updateBoardName\"\n        :updateBoardDesc=\"updateBoardDesc\"\n        :board=\"board\"\n        :addGroup=\"addGroup\"\n        :forceRerender=\"forceRerender\"\n      />\n      <group-list\n        v-if=\"board\"\n        :key=\"componentKey\"\n        :groups=\"board.groups\"\n        :boardName=\"board.name\"\n        @deleteGroup=\"deleteGroup\"\n        @updateGroup=\"updateGroup\"\n        @updateGroups=\"updateGroups\"\n        @duplicateGroup=\"duplicateGroup\"\n        @forceRender=\"forceRerender\"\n      />\n    </div>\n    <div v-if=\"isTaskDetailsHover\" class=\"backdrop-layer\"></div>\n\n    <task-details\n      v-if=\"this.$route.params.taskId\"\n      @close=\"isTaskDetailsHover = false\"\n      @mouseover.native=\"isTaskDetailsHover = true\"\n      @mouseleave.native=\"isTaskDetailsHover = false\"\n    />\n    <div v-tooltip.top=\"'Chat Board'\" v-show=\"isChatingBtnShown\" class=\"chat-icon-btn-container flex align-center justify-center\">\n\n    <i  @click=\"toggleChat\" class=\"fas chat-icon fa-comments\"></i>\n    </div>\n  <chat-app @closeChat=\"toggleChat\" v-if=\"isChating\" />\n  </section>\n  <div v-else class=\"flex justify-center align-center\">\n    <img src=\"@/assets/imgs/loader.gif\" class=\"loader-app\" />\n  </div>\n</template>\n<script>\nimport {eventBus} from '@/services/event-bus.service';\nimport chatApp from '@/cmps/board-chat'\n// import addMembers from '@/cmps/add-members'\nimport groupList from '@/cmps/group-list'\nimport boardList from '@/cmps/board-list.vue'\nimport taskDetails from '../views/task-details'\nimport { boardService } from '@/services/board.service'\n// import boardFilter from '@/cmps/board-filter.vue'\nimport boardSearch from '@/cmps/board-search'\nimport { utilService } from '@/services/util.service'\nimport boardHeader from '../cmps/board-header.vue'\n\nexport default {\n  name: 'board-app',\n  data() {\n    return {\n      isChatingBtnShown:true,\n      isChating:false,\n      isListExpanded: true,\n      isMembersShowen: false,\n      currTaskDetails: null,\n      isTaskDetailsHover: false,\n      componentKey: 0\n    }\n  },\n  computed: {\n    chatControl(){\n      return this.isChatingBtnShown ? 'Hide Chat' : 'Show Chat'\n    },\n    expendStyle() {\n      return this.isListExpanded\n        ? { borderLeft: 1 + 'px' + ' solid ' + 'rgb(228, 228, 228)' }\n        : { marginLeft: 15 + 'px' }\n    },\n    expendBtnStyle() {\n      return this.isListExpanded\n        ? 'expend-btn fas fa-chevron-left'\n        : 'expend-btn fas fa-chevron-right'\n    },\n    isLoading() {\n      return this.$store.getters.isLoading\n    },\n    user(){\n      return this.$store.getters.user\n    },\n    board() {\n      return this.$store.getters.board\n    },\n    boards() {\n      return this.$store.getters.boards\n    }\n  },\n  methods: {\n    toogleChatBtn(){\n      this.isChatingBtnShown = !this.isChatingBtnShown\n    },\n    expandList() {\n      this.isListExpanded = true\n    },\n    toggleExpandList() {\n      this.isListExpanded = !this.isListExpanded\n    },\n    toggleChat(){\n      this.isChating=!this.isChating\n    },\n    duplicateGroup(group) {\n      group.id = utilService.makeId()\n      this.board.groups.push(group)\n          const txt = `${this.user.fullName} duplicated group the group ${group.txt} `\n           let newActivity = boardService.getEmptyActivity(txt, this.user)\n        this.board.activities.push(newActivity)\n      this.$store.dispatch({ type: 'saveBoard', board: this.board })\n        this.$notify({\n            message: 'Duplicated group was added',\n            position: 'bottom-left',\n            duration:2000,\n          });\n      this.forceRerender()},\n\n    updateBoardName(ev) {\n      this.board.name = ev.target.innerText\n       const txt = `${this.user.fullName} update Board name`\n           let newActivity = boardService.getEmptyActivity(txt, this.user)\n      this.board.activities.push(newActivity)\n\n      this.$store.dispatch({ type: 'saveBoard', board: this.board })\n        this.$notify({\n            message: 'Board name updated ',\n            position: 'bottom-left',\n            duration:2000,\n          });\n      this.forceRerender()\n    },\n    updateBoardDesc(ev) {\n      this.board.description = ev.target.innerText\n       const txt = `${this.user.fullName} update Board description`\n       let newActivity = boardService.getEmptyActivity(txt, this.user)\n      this.board.activities.push(newActivity)\n      this.$store.dispatch({ type: 'saveBoard', board: this.board })\n     this.$notify({\n            message: 'Board description updeated',\n            position: 'bottom-left',\n            duration:2000,\n          });\n      this.forceRerender()\n    },\n    forceRerender() {\n      this.componentKey += 1\n    },\n    addBoardMember(user) {\n      console.log('user:', user)\n      this.board.members.unshift(user)\n      const txt = `${this.user.fullName} add ${user.fullName}  to board`\n     let newActivity = boardService.getEmptyActivity(txt, this.user)\n      this.board.activities.push(newActivity)\n      this.$store.dispatch({ type: 'saveBoard', board: this.board })\n     this.$notify({\n            message: 'Add new member to board',\n            position: 'bottom-left',\n            duration:2000,\n          });\n    },\n    removeBoardMember(userId) {\n      const idx = this.board.members.findIndex(\n        bMember => bMember._id === userId\n      )\n      this.board.members.splice(idx, 1)\n       const txt = `${this.user.fullName} remove  group`\n       let newActivity = boardService.getEmptyActivity(txt, this.user)\n      this.board.activities.push(newActivity)\n      this.$store.dispatch({ type: 'saveBoard', board: this.board })\n     this.$notify({\n            message: 'The member has been removed from the board',\n            position: 'bottom-left',\n            duration:2000,\n          });\n    },\n    setSearch(searchBoard) {\n      this.$store.commit({ type: 'setSearch', searchBoard })\n      this.$store.dispatch({ type: 'loadBoards' })\n    },\n    removeCurrBoard(boardId) {\n        const txt = `${this.user.fullName} remove Board`\n       let newActivity = boardService.getEmptyActivity(txt, this.user)\n      this.board.activities.push(newActivity)\n      this.$store.dispatch({ type: 'removeBoard', boardId })\n     this.$notify({\n            message: 'The board has been deleted',\n            position: 'bottom-left',\n            duration:2000,\n          });\n    },\n    addBoard() {\n           this.$prompt('Please enter a name to your board', 'Add New Board', {\n          confirmButtonText: 'OK',\n          cancelButtonText: 'Cancel',\n        }).then(({ value }) => {\n            const board = boardService.getEmptyBoard()\n          board.name = value\n          board.creator=this.user\n    this.$store.dispatch({ type: 'saveBoard', board })\n          this.$message({\n            type: 'success',\n            message: 'Your Board:' + value + ' add '\n          });\n        }).catch(() => {\n          this.$message({\n            type: 'info',\n            message: 'Your action  canceled'\n          });       \n        });\n    },\n    loadBoard() {\n      this.$store.dispatch({\n        type: 'loadBoard',\n        boardId: this.$route.params.boardId\n      })\n    },\n    addGroup() {\n      const newGroup = boardService.getEmptyGroup()\n      this.board.groups.push(newGroup)\n       const txt = `${this.user.fullName} add new group`\n       let newActivity = boardService.getEmptyActivity(txt, this.user)\n      this.board.activities.push(newActivity)\n      this.$store.dispatch({\n        type: 'saveBoard',\n        board: this.board\n      })\n           this.$notify({\n                  message: 'A new group was added',\n                  position: 'bottom-left',\n                  duration:2000,\n                });\n      this.forceRerender()\n    },\n    deleteGroup(groupId) {\n      const idx = this.board.groups.findIndex(group => group.id === groupId)\n      this.board.groups.splice(idx, 1)\n         const txt = `${this.user.fullName} Deleted Group`\n         let newActivity = boardService.getEmptyActivity(txt, this.user)\n        this.board.activities.push(newActivity)\n      this.$store.dispatch({\n        type: 'saveBoard',\n        board: this.board\n      })\n      this.$notify({\n          message: 'The group has been deleted',\n          position: 'bottom-left',\n          duration:2000,\n        });\n      this.forceRerender()\n    },\n    updateGroup(updatedGroup) {\n      const idx = this.board.groups.findIndex(\n        group => group.id === updatedGroup.id\n      )\n      this.board.groups.splice(idx, 1, updatedGroup)\n        const txt = `${this.user.fullName} updated  group`\n   let newActivity = boardService.getEmptyActivity(txt, this.user)\n  this.board.activities.push(newActivity)\n      this.$store.dispatch({\n        type: 'saveBoard',\n        board: this.board\n      })\n   this.$notify({\n          message: 'Group has been updated',\n          position: 'bottom-left',\n          duration:2000,\n        });\n      this.forceRerender()\n    },\n    updateBoardActivity(activity){\n      this.board.activities.unshift(activity)\n       console.log('this.board.activities:', this.board.activities)\n       this.$store.dispatch({\n        type: 'saveBoard',\n        board: this.board\n      })\n    },\n    updateGroups(groups) {\n      this.board.groups = groups\n        const txt = `${this.user.fullName} updated the groups`\n       let newActivity = boardService.getEmptyActivity(txt, this.user)\n      this.board.activities.push(newActivity)\n      this.$store.dispatch({\n        type: 'saveBoard',\n        board: this.board\n      })\n           this.$notify({\n                  message: 'The Groups has been saved',\n                  position: 'bottom-left',\n                  duration:2000,\n                });\n      this.forceRerender()\n    }\n  },\n  watch: {\n    '$route.params.boardId'(val) {\n      if (val) {\n        this.loadBoard()\n        this.forceRerender()\n      }\n    }\n  },\n  created() {\n    eventBus.$on('addMember', this.addBoardMember)\n    eventBus.$on('removeMember', this.removeBoardMember)\n    eventBus.$on('updateBoardActivity', this.updateBoardActivity)\n    this.$store.dispatch({ type: 'loadUsers' })\n    this.$store.dispatch({ type: 'loadUser', userId: '301' })\n    this.$store.dispatch({ type: 'loadBoards' })\n    this.loadBoard()\n  },\n  components: {\n    groupList,\n    boardList,\n    // boardFilter,\n    // addMembers,\n    taskDetails,\n    boardSearch,\n    chatApp,\n    boardHeader\n  }\n}\n</script>\n"]}]}