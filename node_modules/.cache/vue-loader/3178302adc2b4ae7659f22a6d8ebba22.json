{"remainingRequest":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/src/cmps/task-preview.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/src/cmps/task-preview.vue","mtime":1606465487377},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IGV2ZW50QnVzIH0gZnJvbSAnQC9zZXJ2aWNlcy9ldmVudC1idXMuc2VydmljZScKaW1wb3J0IGxhYmVsUGlja2VyIGZyb20gJy4vbGFiZWwtcGlja2VyJwpleHBvcnQgZGVmYXVsdCB7CiAgY29tcG9uZW50czogeyBsYWJlbFBpY2tlciB9LAogIG5hbWU6ICd0YXNrLXByZXZpZXcnLAogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICB0YXNrQ29weTogbnVsbCwKICAgICAgaXNTdGF0dXNlc1Nob3dlbjogZmFsc2UsCiAgICAgIGlzUHJpb3JzU2hvd2VuOiBmYWxzZQogICAgfQogIH0sCiAgcHJvcHM6IHsKICAgIHRhc2s6IE9iamVjdCwKICAgIHN0YXR1c2VzOiBBcnJheSwKICAgIHByaW9yaXRpZXM6IEFycmF5CiAgfSwKICBtZXRob2RzOiB7CiAgICBnZXRTdHlsZVN0cihjb2xvclN0cikgewogICAgICByZXR1cm4gYGJhY2tncm91bmRDb2xvcjoke2NvbG9yU3RyfWAKICAgIH0sCiAgICB0b2dnbGVTdGF0dXNlcygpIHsKICAgICAgdGhpcy5pc1N0YXR1c2VzU2hvd2VuID0gIXRoaXMuaXNTdGF0dXNlc1Nob3dlbgogICAgfSwKICAgIG1ldGhvZHM6IHsKICAgICAgICB0b2dnbGVTdGF0dXNlcygpIHsKICAgICAgICAgICAgdGhpcy5pc1N0YXR1c2VzU2hvd2VuID0gIXRoaXMuaXNTdGF0dXNlc1Nob3dlbgogICAgICAgIH0sCiAgICAgICAgdG9nZ2xlUHJpb3JzKCkgewogICAgICAgICAgICB0aGlzLmlzUHJpb3JzU2hvd2VuID0gIXRoaXMuaXNQcmlvcnNTaG93ZW4KICAgICAgICB9LAogICAgICAgIGRlbGV0ZVRhc2soKSB7CiAgICAgICAgICAgIHRoaXMuJGVtaXQoJ2RlbGV0ZVRhc2snLCB0aGlzLnRhc2suaWQpCiAgICAgICAgfSwKICAgICAgICB1cGRhdGVUYXNrVHh0KGV2KSB7CiAgICAgICAgICAgIGNvbnNvbGUubG9nKGV2LnRhcmdldC5pbm5lclRleHQpCiAgICAgICAgICAgIHRoaXMudGFza0NvcHkudHh0ID0gZXYudGFyZ2V0LmlubmVyVGV4dAogICAgICAgICAgICB0aGlzLnVwZGF0ZVRhc2soKQogICAgICAgIH0sCiAgICAgICAgdXBkYXRlVGFzaygpIHsKICAgICAgICAgICAgdGhpcy4kZW1pdCgndXBkYXRlVGFzaycsIHRoaXMudGFza0NvcHkpCiAgICAgICAgfSwKICAgICAgICBzZW5kVG9UYXNrRGV0YWlscygpIHsKICAgICAgICAgICAgaWYgKAogICAgICAgICAgICAgICAgdGhpcy4kcm91dGUucGFyYW1zLnRhc2tJZCAmJgogICAgICAgICAgICAgICAgdGhpcy4kcm91dGUucGFyYW1zLnRhc2tJZCA9PT0gdGhpcy50YXNrLmlkCiAgICAgICAgICAgICkgewogICAgICAgICAgICAgICAgcmV0dXJuCiAgICAgICAgICAgIH0KICAgICAgICAgICAgZXZlbnRCdXMuJGVtaXQoJ3Rhc2tEZXRhaWxzJywgdGhpcy50YXNrKQogICAgICAgICAgICB0aGlzLiRyb3V0ZXIucHVzaCgKICAgICAgICAgICAgICAgIGAvYm9hcmQvdGFzay8ke3RoaXMudGFzay5pZH1gCiAgICAgICAgICAgICkKICAgICAgICB9LAogICAgfSwKICAgIGRlbGV0ZVRhc2soKSB7CiAgICAgIHRoaXMuJGVtaXQoJ2RlbGV0ZVRhc2snLCB0aGlzLnRhc2suaWQpCiAgICB9LAogICAgdXBkYXRlVGFza1ByaW9yaXR5KG9wdCkgewogICAgICB0aGlzLnRhc2tDb3B5LnByaW9yaXR5ID0gb3B0CiAgICAgIHRoaXMudXBkYXRlVGFzaygpCiAgICB9LAogICAgdXBkYXRlVGFza1N0YXR1cyhvcHQpIHsKICAgICAgdGhpcy50YXNrQ29weS5zdGF0dXMgPSBvcHQKICAgICAgdGhpcy51cGRhdGVUYXNrKCkKICAgIH0sCiAgICB1cGRhdGVUYXNrVHh0KGV2KSB7CiAgICAgIGNvbnNvbGUubG9nKGV2LnRhcmdldC5pbm5lclRleHQpCiAgICAgIHRoaXMudGFza0NvcHkudHh0ID0gZXYudGFyZ2V0LmlubmVyVGV4dAogICAgICB0aGlzLnVwZGF0ZVRhc2soKQogICAgfSwKICAgIHVwZGF0ZVRhc2soKSB7CiAgICAgIHRoaXMuJGVtaXQoJ3VwZGF0ZVRhc2snLCB0aGlzLnRhc2tDb3B5KQogICAgfSwKICAgIHNlbmRUb1Rhc2tEZXRhaWxzKCkgewogICAgICBpZiAoCiAgICAgICAgdGhpcy4kcm91dGUucGFyYW1zLnRhc2tJZCAmJgogICAgICAgIHRoaXMuJHJvdXRlLnBhcmFtcy50YXNrSWQgPT09IHRoaXMudGFzay5pZAogICAgICApIHsKICAgICAgICByZXR1cm4KICAgICAgfQogICAgICBldmVudEJ1cy4kZW1pdCgndGFza0RldGFpbHMnLCB0aGlzLnRhc2spCiAgICAgIHRoaXMuJHJvdXRlci5wdXNoKGAvYm9hcmQvJHt0aGlzLiRyb3V0ZS5wYXJhbXMuYm9hcmRJZH0vJHt0aGlzLnRhc2suaWR9YCkKICAgIH0KICB9LAogIGNyZWF0ZWQoKSB7CiAgICB0aGlzLnRhc2tDb3B5ID0gdGhpcy50YXNrCiAgfQp9Cg=="},{"version":3,"sources":["task-preview.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"task-preview.vue","sourceRoot":"src/cmps","sourcesContent":["<template>\n  <li\n    v-if=\"taskCopy\"\n    class=\"task-preview flex space-between align-center width100\"\n  >\n    <!-- <button @click=\"deleteTask\">X</button> -->\n    <span class=\"task-txt\" @blur=\"updateTaskTxt\"  @keyup.enter=\"updateTaskTxt\" contenteditable>{{\n      taskCopy.txt\n    }}</span>\n    <div class=\"task-details flex\">\n      <span @click=\"sendToTaskDetails\"\n        ><i class=\"far fa-comment fa-icon\"></i\n      ></span>\n      <div class=\"headers flex\">\n        <span><i class=\"far fa-user-circle fa-icon\"></i></span>\n        <span\n          @click=\"toggleStatuses\"\n          class=\"status relative\"\n          :style=\"getStyleStr(taskCopy.status.color)\"\n          >{{ taskCopy.status.txt }}\n          <label-picker\n            v-if=\"isStatusesShowen\"\n            :opts=\"statuses\"\n            type=\"status\"\n            @updateTaskStatus=\"updateTaskStatus\"\n        /></span>\n        <span\n          @click=\"togglePriors\"\n          class=\"priority relative\"\n          :style=\"getStyleStr(taskCopy.priority.color)\"\n          >{{ taskCopy.priority.txt }}\n          <label-picker\n            v-if=\"isPriorsShowen\"\n            :opts=\"priorities\"\n            type=\"priority\"\n            @updateTaskPriority=\"updateTaskPriority\"\n        /></span>\n        <label class=\"date-label\" for=\"date\">\n          <input\n            @change=\"updateTask\"\n            id=\"date\"\n            class=\"date-input\"\n            name=\"date\"\n            type=\"date\"\n            v-model=\"taskCopy.dueDate\"\n          />\n        </label>\n      </div>\n    </div>\n  </li>\n</template>\n\n<script>\nimport { eventBus } from '@/services/event-bus.service'\nimport labelPicker from './label-picker'\nexport default {\n  components: { labelPicker },\n  name: 'task-preview',\n  data() {\n    return {\n      taskCopy: null,\n      isStatusesShowen: false,\n      isPriorsShowen: false\n    }\n  },\n  props: {\n    task: Object,\n    statuses: Array,\n    priorities: Array\n  },\n  methods: {\n    getStyleStr(colorStr) {\n      return `backgroundColor:${colorStr}`\n    },\n    toggleStatuses() {\n      this.isStatusesShowen = !this.isStatusesShowen\n    },\n    methods: {\n        toggleStatuses() {\n            this.isStatusesShowen = !this.isStatusesShowen\n        },\n        togglePriors() {\n            this.isPriorsShowen = !this.isPriorsShowen\n        },\n        deleteTask() {\n            this.$emit('deleteTask', this.task.id)\n        },\n        updateTaskTxt(ev) {\n            console.log(ev.target.innerText)\n            this.taskCopy.txt = ev.target.innerText\n            this.updateTask()\n        },\n        updateTask() {\n            this.$emit('updateTask', this.taskCopy)\n        },\n        sendToTaskDetails() {\n            if (\n                this.$route.params.taskId &&\n                this.$route.params.taskId === this.task.id\n            ) {\n                return\n            }\n            eventBus.$emit('taskDetails', this.task)\n            this.$router.push(\n                `/board/task/${this.task.id}`\n            )\n        },\n    },\n    deleteTask() {\n      this.$emit('deleteTask', this.task.id)\n    },\n    updateTaskPriority(opt) {\n      this.taskCopy.priority = opt\n      this.updateTask()\n    },\n    updateTaskStatus(opt) {\n      this.taskCopy.status = opt\n      this.updateTask()\n    },\n    updateTaskTxt(ev) {\n      console.log(ev.target.innerText)\n      this.taskCopy.txt = ev.target.innerText\n      this.updateTask()\n    },\n    updateTask() {\n      this.$emit('updateTask', this.taskCopy)\n    },\n    sendToTaskDetails() {\n      if (\n        this.$route.params.taskId &&\n        this.$route.params.taskId === this.task.id\n      ) {\n        return\n      }\n      eventBus.$emit('taskDetails', this.task)\n      this.$router.push(`/board/${this.$route.params.boardId}/${this.task.id}`)\n    }\n  },\n  created() {\n    this.taskCopy = this.task\n  }\n}\n</script>\n"]}]}