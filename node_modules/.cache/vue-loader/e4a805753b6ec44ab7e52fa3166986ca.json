{"remainingRequest":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/src/views/task-details.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/src/views/task-details.vue","mtime":1606776852233},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB0YXNrUG9zdHMgZnJvbSAnQC9jbXBzL3Rhc2stcG9zdHMnCmltcG9ydCB0YXNrQWN0aXZpdGllcyBmcm9tICdAL2NtcHMvdGFzay1hY3Rpdml0aWVzJwppbXBvcnQgeyBldmVudEJ1cyB9IGZyb20gJ0Avc2VydmljZXMvZXZlbnQtYnVzLnNlcnZpY2UnCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAndGFzay1kZXRhaWxzJywKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgdGFzazogbnVsbCwKICAgICAgZ3JvdXBJZDogbnVsbCwKICAgICAgY29tcG9uZW50S2V5OiAwLAogICAgICBuZXdQb3N0OiBudWxsCiAgICB9CiAgfSwKICBjcmVhdGVkKCkgewogICAgY29uc3QgdGFza0luZm8gPSB0aGlzLmdldFRhc2tJbmZvQnlJZCgpCiAgICB0aGlzLnRhc2sgPSB0YXNrSW5mby50YXNrCiAgICB0aGlzLmdyb3VwSWQgPSB0YXNrSW5mby5ncm91cElkCiAgfSwKICBtZXRob2RzOiB7CiAgICBjbG9zZUJ0bigpIHsKICAgICAgdGhpcy4kZW1pdCgnY2xvc2UnKQogICAgICB0aGlzLiRyb3V0ZXIucHVzaChgL2JvYXJkLyR7dGhpcy4kcm91dGUucGFyYW1zLmJvYXJkSWR9YCkKICAgIH0sCiAgICBnZXRUYXNrc1BhdGgoKSB7CiAgICAgIGNvbnNvbGUubG9nKCdncm91cElkJywgdGhpcy5ncm91cElkKQogICAgICBjb25zdCBncm91cElkeCA9IHRoaXMuYm9hcmQuZ3JvdXBzLmZpbmRJbmRleCgKICAgICAgICBncm91cCA9PiBncm91cC5pZCA9PT0gdGhpcy5ncm91cElkCiAgICAgICkKICAgICAgY29uc3QgdGFza3MgPSB0aGlzLmJvYXJkLmdyb3Vwc1tncm91cElkeF0udGFza3MKICAgICAgcmV0dXJuIHRhc2tzCiAgICB9LAogICAgdXBkYXRlVGFza1R4dChldikgewogICAgICB0aGlzLnRhc2sudHh0ID0gZXYudGFyZ2V0LmlubmVyVGV4dAogICAgICBjb25zdCB0YXNrcyA9IHRoaXMuZ2V0VGFza3NQYXRoKCkKICAgICAgY29uc3QgdGFza0lkeCA9IHRhc2tzLmZpbmRJbmRleCh0YXNrID0+IHRhc2suaWQgPT09IHRoaXMudGFzay5pZCkKICAgICAgdGFza3Muc3BsaWNlKHRhc2tJZHgsIDEsIHRoaXMudGFzaykKICAgICAgdGhpcy4kc3RvcmUuZGlzcGF0Y2goewogICAgICAgIHR5cGU6ICdzYXZlQm9hcmQnLAogICAgICAgIGJvYXJkOiB0aGlzLmJvYXJkCiAgICAgIH0pCiAgICAgIGV2ZW50QnVzLiRlbWl0KCd1cGRhdGVUYXNrUHJldmlldycsIHRoaXMudGFzaykKICAgIH0sCiAgICB1cGRhdGVQb3N0cyhwb3N0cykgewogICAgICBjb25zdCB0YXNrcyA9IHRoaXMuZ2V0VGFza3NQYXRoKCkKICAgICAgY29uc3QgdGFza0lkeCA9IHRhc2tzLmZpbmRJbmRleCh0YXNrID0+IHRhc2suaWQgPT09IHRoaXMudGFzay5pZCkKICAgICAgdGFza3NbdGFza0lkeF0ucG9zdHMgPSBwb3N0cwogICAgICB0aGlzLiRzdG9yZS5kaXNwYXRjaCh7CiAgICAgICAgdHlwZTogJ3NhdmVCb2FyZCcsCiAgICAgICAgYm9hcmQ6IHRoaXMuYm9hcmQKICAgICAgfSkKICAgICAgZXZlbnRCdXMuJGVtaXQoJ3VwZGF0ZVRhc2tQcmV2aWV3JywgdGhpcy50YXNrKQogICAgfSwKICAgIGdldFRhc2tJbmZvQnlJZCgpIHsKICAgICAgbGV0IHRhc2tJbmZvID0ge30KICAgICAgY29uc3QgdGFza0lkID0gdGhpcy4kcm91dGUucGFyYW1zLnRhc2tJZAogICAgICBjb25zdCBncm91cCA9IHRoaXMuYm9hcmQuZ3JvdXBzLmZpbmQoZ3JvdXAgPT4KICAgICAgICBncm91cC50YXNrcy5maW5kKHRhc2sgPT4gdGFzay5pZCA9PT0gdGFza0lkKQogICAgICApCiAgICAgIHRhc2tJbmZvLnRhc2sgPSBncm91cC50YXNrcy5maW5kKHRhc2sgPT4gdGFzay5pZCA9PT0gdGFza0lkKQogICAgICB0YXNrSW5mby5ncm91cElkID0gZ3JvdXAuaWQKICAgICAgcmV0dXJuIHRhc2tJbmZvCiAgICB9LAogICAgZm9yY2VSZXJlbmRlcigpIHsKICAgICAgdGhpcy5jb21wb25lbnRLZXkgKz0gMQogICAgfQogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIGJvYXJkKCkgewogICAgICByZXR1cm4gdGhpcy4kc3RvcmUuZ2V0dGVycy5ib2FyZAogICAgfSwKICAgIGxvZ2dlZEluVXNlcigpIHsKICAgICAgcmV0dXJuIHRoaXMuJHN0b3JlLmdldHRlcnMubG9nZ2VkSW5Vc2VyCiAgICB9LAogICAgcG9zdHMoKSB7CiAgICAgIHJldHVybiB0aGlzLnRhc2sucG9zdHMKICAgIH0KICB9LAogIHdhdGNoOiB7CiAgICAnJHJvdXRlLnBhcmFtcy50YXNrSWQnKCkgewogICAgICBjb25zdCB0YXNrSW5mbyA9IHRoaXMuZ2V0VGFza0luZm9CeUlkKCkKICAgICAgdGhpcy5ncm91cElkID0gdGFza0luZm8uZ3JvdXBJZAogICAgICB0aGlzLnRhc2sgPSBKU09OLnBhcnNlKEpTT04uc3RyaW5naWZ5KHRhc2tJbmZvLnRhc2spKQogICAgICBjb25zb2xlLmxvZygndGFzaycsIHRoaXMudGFzaykKICAgIH0KICB9LAogIGNvbXBvbmVudHM6IHsKICAgIHRhc2tQb3N0cywKICAgIHRhc2tBY3Rpdml0aWVzCiAgfQp9Cg=="},{"version":3,"sources":["task-details.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAuBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"task-details.vue","sourceRoot":"src/views","sourcesContent":["<template>\n    <section v-if=\"task\" class=\"task-details-section\">\n        <div class=\"top-bar\">\n            <button v-tooltip.top=\"'Close Task Details'\" class=\"cls-btn\"><i @click.stop=\"closeBtn\" class=\"fas fa-times\"></i></button>\n            <h1 class=\"task-title editable\"\n                @blur.stop=\"updateTaskTxt\"\n                @keyup.enter=\"updateTaskTxt\"\n                contenteditable\n            >\n                {{ task.txt }}\n            </h1>\n        </div>\n        <el-tabs>\n            <el-tab-pane label=\"Task Posts\">\n                <task-posts @updatePosts=\"updatePosts\" :posts=\"posts\" />\n            </el-tab-pane>\n            <el-tab-pane label=\"Task Activities\">\n                <task-activities :activities=\"task.activities\" />\n            </el-tab-pane>\n        </el-tabs>\n    </section>\n</template>\n<script>\nimport taskPosts from '@/cmps/task-posts'\nimport taskActivities from '@/cmps/task-activities'\nimport { eventBus } from '@/services/event-bus.service'\nexport default {\n  name: 'task-details',\n  data() {\n    return {\n      task: null,\n      groupId: null,\n      componentKey: 0,\n      newPost: null\n    }\n  },\n  created() {\n    const taskInfo = this.getTaskInfoById()\n    this.task = taskInfo.task\n    this.groupId = taskInfo.groupId\n  },\n  methods: {\n    closeBtn() {\n      this.$emit('close')\n      this.$router.push(`/board/${this.$route.params.boardId}`)\n    },\n    getTasksPath() {\n      console.log('groupId', this.groupId)\n      const groupIdx = this.board.groups.findIndex(\n        group => group.id === this.groupId\n      )\n      const tasks = this.board.groups[groupIdx].tasks\n      return tasks\n    },\n    updateTaskTxt(ev) {\n      this.task.txt = ev.target.innerText\n      const tasks = this.getTasksPath()\n      const taskIdx = tasks.findIndex(task => task.id === this.task.id)\n      tasks.splice(taskIdx, 1, this.task)\n      this.$store.dispatch({\n        type: 'saveBoard',\n        board: this.board\n      })\n      eventBus.$emit('updateTaskPreview', this.task)\n    },\n    updatePosts(posts) {\n      const tasks = this.getTasksPath()\n      const taskIdx = tasks.findIndex(task => task.id === this.task.id)\n      tasks[taskIdx].posts = posts\n      this.$store.dispatch({\n        type: 'saveBoard',\n        board: this.board\n      })\n      eventBus.$emit('updateTaskPreview', this.task)\n    },\n    getTaskInfoById() {\n      let taskInfo = {}\n      const taskId = this.$route.params.taskId\n      const group = this.board.groups.find(group =>\n        group.tasks.find(task => task.id === taskId)\n      )\n      taskInfo.task = group.tasks.find(task => task.id === taskId)\n      taskInfo.groupId = group.id\n      return taskInfo\n    },\n    forceRerender() {\n      this.componentKey += 1\n    }\n  },\n  computed: {\n    board() {\n      return this.$store.getters.board\n    },\n    loggedInUser() {\n      return this.$store.getters.loggedInUser\n    },\n    posts() {\n      return this.task.posts\n    }\n  },\n  watch: {\n    '$route.params.taskId'() {\n      const taskInfo = this.getTaskInfoById()\n      this.groupId = taskInfo.groupId\n      this.task = JSON.parse(JSON.stringify(taskInfo.task))\n      console.log('task', this.task)\n    }\n  },\n  components: {\n    taskPosts,\n    taskActivities\n  }\n}\n</script>\n"]}]}