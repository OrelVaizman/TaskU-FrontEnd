{"remainingRequest":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/src/cmps/Trello/trello-mode.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/src/cmps/Trello/trello-mode.vue","mtime":1607175842061},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCi8vIGltcG9ydCB7IGJvYXJkU2VydmljZSB9IGZyb20gJy4uLy4uL3NlcnZpY2VzL2JvYXJkLnNlcnZpY2UnCmltcG9ydCBzdGF0dXNMaXN0IGZyb20gJy4vc3RhdHVzLWxpc3QnCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnVHJlbGxvLW1vZGUnLAogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBncm91cDogbnVsbAogICAgfQogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIHRhc2tzQnlTdGF0dWVzKCkgewogICAgICByZXR1cm4gdGhpcy4kc3RvcmUuZ2V0dGVycy50YXNrc0J5U3RhdHVlcwogICAgfSwKICAgIGJvYXJkKCkgewogICAgICByZXR1cm4gdGhpcy4kc3RvcmUuZ2V0dGVycy5ib2FyZAogICAgfQogIH0sCiAgY29tcG9uZW50czogewogICAgc3RhdHVzTGlzdAogIH0sCiAgY3JlYXRlZCgpIHsKICAgIC8vIGxldCBuZXdHcm91cCA9IGJvYXJkU2VydmljZS5nZXRFbXB0eUdyb3VwKCkKICAgIC8vIGRlbGV0ZSBuZXdHcm91cC50YXNrcwogICAgLy8gbmV3R3JvdXAudGFza3MgPSBbXQogICAgLy8gdGhpcy5ncm91cCA9IG5ld0dyb3VwCiAgICAvLyB0aGlzLmJvYXJkLmdyb3Vwcy51bnNoaWZ0KHRoaXMuZ3JvdXApCiAgICAvLyB0aGlzLiRzdG9yZS5kaXNwYXRjaCh7CiAgICAvLyAgIHR5cGU6ICdzYXZlQm9hcmQnLAogICAgLy8gICBib2FyZDogdGhpcy5ib2FyZAogICAgLy8gfSkKICAgIGxldCBncm91cCA9IHRoaXMuYm9hcmQuZ3JvdXBzW3RoaXMuYm9hcmQuZ3JvdXBzLmxlbmd0aC0xXQogICAgdGhpcy5ncm91cCA9IGdyb3VwCiAgfQp9Cg=="},{"version":3,"sources":["trello-mode.vue"],"names":[],"mappings":";;;;;;;;;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"trello-mode.vue","sourceRoot":"src/cmps/Trello","sourcesContent":["<template>\n  <section class=\"trello flex wrap align-center justify-center\">\n    <div class=\"status-container\">\n      <status-list :statuses=\"tasksByStatues\" :group=\"group\" />\n    </div>\n  </section>\n</template>\n\n<script>\n// import { boardService } from '../../services/board.service'\nimport statusList from './status-list'\nexport default {\n  name: 'Trello-mode',\n  data() {\n    return {\n      group: null\n    }\n  },\n  computed: {\n    tasksByStatues() {\n      return this.$store.getters.tasksByStatues\n    },\n    board() {\n      return this.$store.getters.board\n    }\n  },\n  components: {\n    statusList\n  },\n  created() {\n    // let newGroup = boardService.getEmptyGroup()\n    // delete newGroup.tasks\n    // newGroup.tasks = []\n    // this.group = newGroup\n    // this.board.groups.unshift(this.group)\n    // this.$store.dispatch({\n    //   type: 'saveBoard',\n    //   board: this.board\n    // })\n    let group = this.board.groups[this.board.groups.length-1]\n    this.group = group\n  }\n}\n</script>\n"]}]}