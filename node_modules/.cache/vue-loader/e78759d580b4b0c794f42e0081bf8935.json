{"remainingRequest":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/src/views/board-app.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/src/views/board-app.vue","mtime":1606841189766},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IGV2ZW50QnVzIH0gZnJvbSAnQC9zZXJ2aWNlcy9ldmVudC1idXMuc2VydmljZScKaW1wb3J0IGNoYXRBcHAgZnJvbSAnQC9jbXBzL2JvYXJkLWNoYXQnCi8vIGltcG9ydCBhZGRNZW1iZXJzIGZyb20gJ0AvY21wcy9hZGQtbWVtYmVycycKaW1wb3J0IGdyb3VwTGlzdCBmcm9tICdAL2NtcHMvZ3JvdXAtbGlzdCcKaW1wb3J0IGJvYXJkTGlzdCBmcm9tICdAL2NtcHMvYm9hcmQtbGlzdC52dWUnCmltcG9ydCB0YXNrRGV0YWlscyBmcm9tICcuLi92aWV3cy90YXNrLWRldGFpbHMnCmltcG9ydCB7IGJvYXJkU2VydmljZSB9IGZyb20gJ0Avc2VydmljZXMvYm9hcmQuc2VydmljZScKLy8gaW1wb3J0IGJvYXJkRmlsdGVyIGZyb20gJ0AvY21wcy9ib2FyZC1maWx0ZXIudnVlJwppbXBvcnQgYm9hcmRTZWFyY2ggZnJvbSAnQC9jbXBzL2JvYXJkLXNlYXJjaCcKaW1wb3J0IHsgdXRpbFNlcnZpY2UgfSBmcm9tICdAL3NlcnZpY2VzL3V0aWwuc2VydmljZScKaW1wb3J0IGJvYXJkSGVhZGVyIGZyb20gJy4uL2NtcHMvYm9hcmQtaGVhZGVyLnZ1ZScKCmV4cG9ydCBkZWZhdWx0IHsKICAgIG5hbWU6ICdib2FyZC1hcHAnLAogICAgZGF0YSgpIHsKICAgICAgICByZXR1cm4gewogICAgICAgICAgICBpc0NoYXRpbmdCdG5TaG93bjogdHJ1ZSwKICAgICAgICAgICAgaXNDaGF0aW5nOiBmYWxzZSwKICAgICAgICAgICAgaXNMaXN0RXhwYW5kZWQ6IHRydWUsCiAgICAgICAgICAgIGlzTWVtYmVyc1Nob3dlbjogZmFsc2UsCiAgICAgICAgICAgIGN1cnJUYXNrRGV0YWlsczogbnVsbCwKICAgICAgICAgICAgaXNUYXNrRGV0YWlsc0hvdmVyOiBmYWxzZSwKICAgICAgICAgICAgY29tcG9uZW50S2V5OiAwLAogICAgICAgIH0KICAgIH0sCiAgICBjb21wdXRlZDogewogICAgICAgIGNoYXRDb250cm9sKCkgewogICAgICAgICAgICByZXR1cm4gdGhpcy5pc0NoYXRpbmdCdG5TaG93biA/ICdIaWRlIENoYXQnIDogJ1Nob3cgQ2hhdCcKICAgICAgICB9LAogICAgICAgIGV4cGVuZFN0eWxlKCkgewogICAgICAgICAgICByZXR1cm4gdGhpcy5pc0xpc3RFeHBhbmRlZAogICAgICAgICAgICAgICAgPyB7IGJvcmRlckxlZnQ6IDEgKyAncHgnICsgJyBzb2xpZCAnICsgJ3JnYigyMjgsIDIyOCwgMjI4KScgfQogICAgICAgICAgICAgICAgOiB7IG1hcmdpbkxlZnQ6IDE1ICsgJ3B4JyB9CiAgICAgICAgfSwKICAgICAgICBleHBlbmRCdG5TdHlsZSgpIHsKICAgICAgICAgICAgcmV0dXJuIHRoaXMuaXNMaXN0RXhwYW5kZWQKICAgICAgICAgICAgICAgID8gJ2V4cGVuZC1idG4gZmFzIGZhLWNoZXZyb24tbGVmdCcKICAgICAgICAgICAgICAgIDogJ2V4cGVuZC1idG4gZmFzIGZhLWNoZXZyb24tcmlnaHQnCiAgICAgICAgfSwKICAgICAgICBpc0xvYWRpbmcoKSB7CiAgICAgICAgICAgIGNvbnNvbGUubG9nKAogICAgICAgICAgICAgICAgJ3RoaXMuJHN0b3JlLmdldHRlcnMuaXNMb2FkaW5nOicsCiAgICAgICAgICAgICAgICB0aGlzLiRzdG9yZS5nZXR0ZXJzLmlzTG9hZGluZwogICAgICAgICAgICApCiAgICAgICAgICAgIHJldHVybiB0aGlzLiRzdG9yZS5nZXR0ZXJzLmlzTG9hZGluZwogICAgICAgIH0sCiAgICAgICAgdXNlcigpIHsKICAgICAgICAgICAgcmV0dXJuIHRoaXMuJHN0b3JlLmdldHRlcnMudXNlcgogICAgICAgIH0sCiAgICAgICAgYm9hcmQoKSB7CiAgICAgICAgICAgIHJldHVybiB0aGlzLiRzdG9yZS5nZXR0ZXJzLmJvYXJkCiAgICAgICAgfSwKICAgICAgICBib2FyZHMoKSB7CiAgICAgICAgICAgIHJldHVybiB0aGlzLiRzdG9yZS5nZXR0ZXJzLmJvYXJkcwogICAgICAgIH0sCiAgICB9LAogICAgbWV0aG9kczogewogICAgICAgIHRvb2dsZUNoYXRCdG4oKSB7CiAgICAgICAgICAgIHRoaXMuaXNDaGF0aW5nQnRuU2hvd24gPSAhdGhpcy5pc0NoYXRpbmdCdG5TaG93bgogICAgICAgIH0sCiAgICAgICAgZXhwYW5kTGlzdCgpIHsKICAgICAgICAgICAgdGhpcy5pc0xpc3RFeHBhbmRlZCA9IHRydWUKICAgICAgICB9LAogICAgICAgIHRvZ2dsZUV4cGFuZExpc3QoKSB7CiAgICAgICAgICAgIHRoaXMuaXNMaXN0RXhwYW5kZWQgPSAhdGhpcy5pc0xpc3RFeHBhbmRlZAogICAgICAgIH0sCiAgICAgICAgdG9nZ2xlQ2hhdCgpIHsKICAgICAgICAgICAgdGhpcy5pc0NoYXRpbmcgPSAhdGhpcy5pc0NoYXRpbmcKICAgICAgICB9LAogICAgICAgIGR1cGxpY2F0ZUdyb3VwKGdyb3VwKSB7CiAgICAgICAgICAgIGdyb3VwLmlkID0gdXRpbFNlcnZpY2UubWFrZUlkKCkKICAgICAgICAgICAgdGhpcy5ib2FyZC5ncm91cHMucHVzaChncm91cCkKICAgICAgICAgICAgY29uc3QgdHh0ID0gYCR7dGhpcy51c2VyLmZ1bGxOYW1lfSBkdXBsaWNhdGVkIGdyb3VwIHRoZSBncm91cCAke2dyb3VwLnR4dH0gYAogICAgICAgICAgICBsZXQgbmV3QWN0aXZpdHkgPSBib2FyZFNlcnZpY2UuZ2V0RW1wdHlBY3Rpdml0eSh0eHQsIHRoaXMudXNlcikKICAgICAgICAgICAgdGhpcy5ib2FyZC5hY3Rpdml0aWVzLnB1c2gobmV3QWN0aXZpdHkpCiAgICAgICAgICAgIHRoaXMuJHN0b3JlLmRpc3BhdGNoKHsgdHlwZTogJ3NhdmVCb2FyZCcsIGJvYXJkOiB0aGlzLmJvYXJkIH0pCiAgICAgICAgICAgIHRoaXMuJG5vdGlmeSh7CiAgICAgICAgICAgICAgICBtZXNzYWdlOiAnRHVwbGljYXRlZCBncm91cCB3YXMgYWRkZWQnLAogICAgICAgICAgICAgICAgcG9zaXRpb246ICdib3R0b20tbGVmdCcsCiAgICAgICAgICAgICAgICBkdXJhdGlvbjogMjAwMCwKICAgICAgICAgICAgfSkKICAgICAgICAgICAgdGhpcy5mb3JjZVJlcmVuZGVyKCkKICAgICAgICB9LAoKICAgICAgICB1cGRhdGVCb2FyZE5hbWUoZXYpIHsKICAgICAgICAgICAgdGhpcy5ib2FyZC5uYW1lID0gZXYudGFyZ2V0LmlubmVyVGV4dAogICAgICAgICAgICBjb25zdCB0eHQgPSBgJHt0aGlzLnVzZXIuZnVsbE5hbWV9IHVwZGF0ZSBCb2FyZCBuYW1lYAogICAgICAgICAgICBsZXQgbmV3QWN0aXZpdHkgPSBib2FyZFNlcnZpY2UuZ2V0RW1wdHlBY3Rpdml0eSh0eHQsIHRoaXMudXNlcikKICAgICAgICAgICAgdGhpcy5ib2FyZC5hY3Rpdml0aWVzLnB1c2gobmV3QWN0aXZpdHkpCgogICAgICAgICAgICB0aGlzLiRzdG9yZS5kaXNwYXRjaCh7IHR5cGU6ICdzYXZlQm9hcmQnLCBib2FyZDogdGhpcy5ib2FyZCB9KQogICAgICAgICAgICB0aGlzLiRub3RpZnkoewogICAgICAgICAgICAgICAgbWVzc2FnZTogJ0JvYXJkIG5hbWUgdXBkYXRlZCAnLAogICAgICAgICAgICAgICAgcG9zaXRpb246ICdib3R0b20tbGVmdCcsCiAgICAgICAgICAgICAgICBkdXJhdGlvbjogMjAwMCwKICAgICAgICAgICAgfSkKICAgICAgICAgICAgdGhpcy5mb3JjZVJlcmVuZGVyKCkKICAgICAgICB9LAogICAgICAgIHVwZGF0ZUJvYXJkRGVzYyhldikgewogICAgICAgICAgICB0aGlzLmJvYXJkLmRlc2NyaXB0aW9uID0gZXYudGFyZ2V0LmlubmVyVGV4dAogICAgICAgICAgICBjb25zdCB0eHQgPSBgJHt0aGlzLnVzZXIuZnVsbE5hbWV9IHVwZGF0ZSBCb2FyZCBkZXNjcmlwdGlvbmAKICAgICAgICAgICAgbGV0IG5ld0FjdGl2aXR5ID0gYm9hcmRTZXJ2aWNlLmdldEVtcHR5QWN0aXZpdHkodHh0LCB0aGlzLnVzZXIpCiAgICAgICAgICAgIHRoaXMuYm9hcmQuYWN0aXZpdGllcy5wdXNoKG5ld0FjdGl2aXR5KQogICAgICAgICAgICB0aGlzLiRzdG9yZS5kaXNwYXRjaCh7IHR5cGU6ICdzYXZlQm9hcmQnLCBib2FyZDogdGhpcy5ib2FyZCB9KQogICAgICAgICAgICB0aGlzLiRub3RpZnkoewogICAgICAgICAgICAgICAgbWVzc2FnZTogJ0JvYXJkIGRlc2NyaXB0aW9uIHVwZGVhdGVkJywKICAgICAgICAgICAgICAgIHBvc2l0aW9uOiAnYm90dG9tLWxlZnQnLAogICAgICAgICAgICAgICAgZHVyYXRpb246IDIwMDAsCiAgICAgICAgICAgIH0pCiAgICAgICAgICAgIHRoaXMuZm9yY2VSZXJlbmRlcigpCiAgICAgICAgfSwKICAgICAgICBmb3JjZVJlcmVuZGVyKCkgewogICAgICAgICAgICB0aGlzLmNvbXBvbmVudEtleSArPSAxCiAgICAgICAgfSwKICAgICAgICBhZGRCb2FyZE1lbWJlcih1c2VyKSB7CiAgICAgICAgICAgIGNvbnNvbGUubG9nKCd1c2VyOicsIHVzZXIpCiAgICAgICAgICAgIHRoaXMuYm9hcmQubWVtYmVycy51bnNoaWZ0KHVzZXIpCiAgICAgICAgICAgIGNvbnN0IHR4dCA9IGAke3RoaXMudXNlci5mdWxsTmFtZX0gYWRkICR7dXNlci5mdWxsTmFtZX0gIHRvIGJvYXJkYAogICAgICAgICAgICBsZXQgbmV3QWN0aXZpdHkgPSBib2FyZFNlcnZpY2UuZ2V0RW1wdHlBY3Rpdml0eSh0eHQsIHRoaXMudXNlcikKICAgICAgICAgICAgdGhpcy5ib2FyZC5hY3Rpdml0aWVzLnB1c2gobmV3QWN0aXZpdHkpCiAgICAgICAgICAgIHRoaXMuJHN0b3JlLmRpc3BhdGNoKHsgdHlwZTogJ3NhdmVCb2FyZCcsIGJvYXJkOiB0aGlzLmJvYXJkIH0pCiAgICAgICAgICAgIHRoaXMuJG5vdGlmeSh7CiAgICAgICAgICAgICAgICBtZXNzYWdlOiAnQWRkIG5ldyBtZW1iZXIgdG8gYm9hcmQnLAogICAgICAgICAgICAgICAgcG9zaXRpb246ICdib3R0b20tbGVmdCcsCiAgICAgICAgICAgICAgICBkdXJhdGlvbjogMjAwMCwKICAgICAgICAgICAgfSkKICAgICAgICB9LAogICAgICAgIHJlbW92ZUJvYXJkTWVtYmVyKG1lbWJlcikgewogICAgICAgICAgICBjb25zdCBpZHggPSB0aGlzLmJvYXJkLm1lbWJlcnMuZmluZEluZGV4KAogICAgICAgICAgICAgICAgKGJNZW1iZXIpID0+IGJNZW1iZXIuX2lkID09PSBtZW1iZXIuX2lkCiAgICAgICAgICAgICkKICAgICAgICAgICAgdGhpcy5ib2FyZC5tZW1iZXJzLnNwbGljZShpZHgsIDEpCiAgICAgICAgICAgIGNvbnN0IHR4dCA9IGAke3RoaXMudXNlci5mdWxsTmFtZX0gcmVtb3ZlICBncm91cGAKICAgICAgICAgICAgbGV0IG5ld0FjdGl2aXR5ID0gYm9hcmRTZXJ2aWNlLmdldEVtcHR5QWN0aXZpdHkodHh0LCB0aGlzLnVzZXIpCiAgICAgICAgICAgIHRoaXMuYm9hcmQuYWN0aXZpdGllcy5wdXNoKG5ld0FjdGl2aXR5KQogICAgICAgICAgICB0aGlzLiRzdG9yZS5kaXNwYXRjaCh7IHR5cGU6ICdzYXZlQm9hcmQnLCBib2FyZDogdGhpcy5ib2FyZCB9KQogICAgICAgICAgICB0aGlzLiRub3RpZnkoewogICAgICAgICAgICAgICAgbWVzc2FnZTogJ1RoZSBtZW1iZXIgaGFzIGJlZW4gcmVtb3ZlZCBmcm9tIHRoZSBib2FyZCcsCiAgICAgICAgICAgICAgICBwb3NpdGlvbjogJ2JvdHRvbS1sZWZ0JywKICAgICAgICAgICAgICAgIGR1cmF0aW9uOiAyMDAwLAogICAgICAgICAgICB9KQogICAgICAgIH0sCiAgICAgICAgc2V0U2VhcmNoKHNlYXJjaEJvYXJkKSB7CiAgICAgICAgICAgIHRoaXMuJHN0b3JlLmNvbW1pdCh7IHR5cGU6ICdzZXRTZWFyY2gnLCBzZWFyY2hCb2FyZCB9KQogICAgICAgICAgICB0aGlzLiRzdG9yZS5kaXNwYXRjaCh7IHR5cGU6ICdsb2FkQm9hcmRzJyB9KQogICAgICAgIH0sCiAgICAgICAgcmVtb3ZlQ3VyckJvYXJkKGJvYXJkSWQpIHsKICAgICAgICAgICAgY29uc3QgdHh0ID0gYCR7dGhpcy51c2VyLmZ1bGxOYW1lfSByZW1vdmUgQm9hcmRgCiAgICAgICAgICAgIGxldCBuZXdBY3Rpdml0eSA9IGJvYXJkU2VydmljZS5nZXRFbXB0eUFjdGl2aXR5KHR4dCwgdGhpcy51c2VyKQogICAgICAgICAgICB0aGlzLmJvYXJkLmFjdGl2aXRpZXMucHVzaChuZXdBY3Rpdml0eSkKICAgICAgICAgICAgdGhpcy4kc3RvcmUuZGlzcGF0Y2goeyB0eXBlOiAncmVtb3ZlQm9hcmQnLCBib2FyZElkIH0pCiAgICAgICAgICAgIHRoaXMuJG5vdGlmeSh7CiAgICAgICAgICAgICAgICBtZXNzYWdlOiAnVGhlIGJvYXJkIGhhcyBiZWVuIGRlbGV0ZWQnLAogICAgICAgICAgICAgICAgcG9zaXRpb246ICdib3R0b20tbGVmdCcsCiAgICAgICAgICAgICAgICBkdXJhdGlvbjogMjAwMCwKICAgICAgICAgICAgfSkKICAgICAgICB9LAogICAgICAgIGFkZEJvYXJkKCkgewogICAgICAgICAgICB0aGlzLiRwcm9tcHQoJ1BsZWFzZSBlbnRlciBhIG5hbWUgdG8geW91ciBib2FyZCcsICdBZGQgTmV3IEJvYXJkJywgewogICAgICAgICAgICAgICAgY29uZmlybUJ1dHRvblRleHQ6ICdPSycsCiAgICAgICAgICAgICAgICBjYW5jZWxCdXR0b25UZXh0OiAnQ2FuY2VsJywKICAgICAgICAgICAgfSkKICAgICAgICAgICAgICAgIC50aGVuKCh7IHZhbHVlIH0pID0+IHsKICAgICAgICAgICAgICAgICAgICBjb25zdCBib2FyZCA9IGJvYXJkU2VydmljZS5nZXRFbXB0eUJvYXJkKCkKICAgICAgICAgICAgICAgICAgICBib2FyZC5uYW1lID0gdmFsdWUKICAgICAgICAgICAgICAgICAgICBib2FyZC5jcmVhdG9yID0gdGhpcy51c2VyCiAgICAgICAgICAgICAgICAgICAgYm9hcmQubWVtYmVycy5wdXNoKHRoaXMudXNlcikKICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygKICAgICAgICAgICAgICAgICAgICAgICAgJ0kgZ290IHRoYXQgYm9hcmQgYmVmb3JlIHNlbmRpbmcgdG8gc3RvcmUnLAogICAgICAgICAgICAgICAgICAgICAgICBib2FyZAogICAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgICAgICB0aGlzLiRzdG9yZS5kaXNwYXRjaCh7IHR5cGU6ICdzYXZlQm9hcmQnLCBib2FyZCB9KQogICAgICAgICAgICAgICAgICAgIHRoaXMuJG1lc3NhZ2UoewogICAgICAgICAgICAgICAgICAgICAgICB0eXBlOiAnc3VjY2VzcycsCiAgICAgICAgICAgICAgICAgICAgICAgIG1lc3NhZ2U6ICdZb3VyIEJvYXJkOicgKyB2YWx1ZSArICcgYWRkICcsCiAgICAgICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgICAgICAuY2F0Y2goKCkgPT4gewogICAgICAgICAgICAgICAgICAgIHRoaXMuJG1lc3NhZ2UoewogICAgICAgICAgICAgICAgICAgICAgICB0eXBlOiAnaW5mbycsCiAgICAgICAgICAgICAgICAgICAgICAgIG1lc3NhZ2U6ICdZb3VyIGFjdGlvbiAgY2FuY2VsZWQnLAogICAgICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgICAgICB9KQogICAgICAgIH0sCiAgICAgICAgbG9hZEJvYXJkKCkgewogICAgICAgICAgICB0aGlzLiRzdG9yZS5kaXNwYXRjaCh7CiAgICAgICAgICAgICAgICB0eXBlOiAnbG9hZEJvYXJkJywKICAgICAgICAgICAgICAgIGJvYXJkSWQ6IHRoaXMuJHJvdXRlLnBhcmFtcy5ib2FyZElkLAogICAgICAgICAgICB9KQogICAgICAgIH0sCiAgICAgICAgYWRkR3JvdXAoKSB7CiAgICAgICAgICAgIGNvbnN0IG5ld0dyb3VwID0gYm9hcmRTZXJ2aWNlLmdldEVtcHR5R3JvdXAoKQogICAgICAgICAgICB0aGlzLmJvYXJkLmdyb3Vwcy5wdXNoKG5ld0dyb3VwKQogICAgICAgICAgICBjb25zdCB0eHQgPSBgJHt0aGlzLnVzZXIuZnVsbE5hbWV9IGhhcyBhZGRlZCBhIG5ldyBncm91cCFgCiAgICAgICAgICAgIGxldCBuZXdBY3Rpdml0eSA9IGJvYXJkU2VydmljZS5nZXRFbXB0eUFjdGl2aXR5KHR4dCwgdGhpcy51c2VyKQogICAgICAgICAgICB0aGlzLmJvYXJkLmFjdGl2aXRpZXMucHVzaChuZXdBY3Rpdml0eSkKICAgICAgICAgICAgdGhpcy4kc3RvcmUuZGlzcGF0Y2goewogICAgICAgICAgICAgICAgdHlwZTogJ3NhdmVCb2FyZCcsCiAgICAgICAgICAgICAgICBib2FyZDogdGhpcy5ib2FyZCwKICAgICAgICAgICAgfSkKICAgICAgICAgICAgdGhpcy4kbm90aWZ5KHsKICAgICAgICAgICAgICAgIG1lc3NhZ2U6ICdBIG5ldyBncm91cCB3YXMgYWRkZWQnLAogICAgICAgICAgICAgICAgcG9zaXRpb246ICdib3R0b20tbGVmdCcsCiAgICAgICAgICAgICAgICBkdXJhdGlvbjogMjAwMCwKICAgICAgICAgICAgfSkKICAgICAgICAgICAgdGhpcy5mb3JjZVJlcmVuZGVyKCkKICAgICAgICB9LAogICAgICAgIGRlbGV0ZUdyb3VwKGdyb3VwSWQpIHsKICAgICAgICAgICAgY29uc3QgaWR4ID0gdGhpcy5ib2FyZC5ncm91cHMuZmluZEluZGV4KAogICAgICAgICAgICAgICAgKGdyb3VwKSA9PiBncm91cC5pZCA9PT0gZ3JvdXBJZAogICAgICAgICAgICApCiAgICAgICAgICAgIHRoaXMuYm9hcmQuZ3JvdXBzLnNwbGljZShpZHgsIDEpCiAgICAgICAgICAgIGNvbnN0IHR4dCA9IGAke3RoaXMudXNlci5mdWxsTmFtZX0gZGVsZXRlZCBncm91cGAKICAgICAgICAgICAgbGV0IG5ld0FjdGl2aXR5ID0gYm9hcmRTZXJ2aWNlLmdldEVtcHR5QWN0aXZpdHkodHh0LCB0aGlzLnVzZXIpCiAgICAgICAgICAgIHRoaXMuYm9hcmQuYWN0aXZpdGllcy5wdXNoKG5ld0FjdGl2aXR5KQogICAgICAgICAgICB0aGlzLiRzdG9yZS5kaXNwYXRjaCh7CiAgICAgICAgICAgICAgICB0eXBlOiAnc2F2ZUJvYXJkJywKICAgICAgICAgICAgICAgIGJvYXJkOiB0aGlzLmJvYXJkLAogICAgICAgICAgICB9KQogICAgICAgICAgICB0aGlzLiRub3RpZnkoewogICAgICAgICAgICAgICAgbWVzc2FnZTogJ1RoZSBncm91cCBoYXMgYmVlbiBkZWxldGVkJywKICAgICAgICAgICAgICAgIHBvc2l0aW9uOiAnYm90dG9tLWxlZnQnLAogICAgICAgICAgICAgICAgZHVyYXRpb246IDIwMDAsCiAgICAgICAgICAgIH0pCiAgICAgICAgICAgIHRoaXMuZm9yY2VSZXJlbmRlcigpCiAgICAgICAgfSwKICAgICAgICB1cGRhdGVHcm91cCh1cGRhdGVkR3JvdXApIHsKICAgICAgICAgICAgY29uc3QgaWR4ID0gdGhpcy5ib2FyZC5ncm91cHMuZmluZEluZGV4KAogICAgICAgICAgICAgICAgKGdyb3VwKSA9PiBncm91cC5pZCA9PT0gdXBkYXRlZEdyb3VwLmlkCiAgICAgICAgICAgICkKICAgICAgICAgICAgdGhpcy5ib2FyZC5ncm91cHMuc3BsaWNlKGlkeCwgMSwgdXBkYXRlZEdyb3VwKQogICAgICAgICAgICBjb25zdCB0eHQgPSBgJHt0aGlzLnVzZXIuZnVsbE5hbWV9IHVwZGF0ZWQgIGdyb3VwYAogICAgICAgICAgICBsZXQgbmV3QWN0aXZpdHkgPSBib2FyZFNlcnZpY2UuZ2V0RW1wdHlBY3Rpdml0eSh0eHQsIHRoaXMudXNlcikKICAgICAgICAgICAgdGhpcy5ib2FyZC5hY3Rpdml0aWVzLnB1c2gobmV3QWN0aXZpdHkpCiAgICAgICAgICAgIHRoaXMuJHN0b3JlLmRpc3BhdGNoKHsKICAgICAgICAgICAgICAgIHR5cGU6ICdzYXZlQm9hcmQnLAogICAgICAgICAgICAgICAgYm9hcmQ6IHRoaXMuYm9hcmQsCiAgICAgICAgICAgIH0pCiAgICAgICAgICAgIHRoaXMuJG5vdGlmeSh7CiAgICAgICAgICAgICAgICBtZXNzYWdlOiAnR3JvdXAgaGFzIGJlZW4gdXBkYXRlZCcsCiAgICAgICAgICAgICAgICBwb3NpdGlvbjogJ2JvdHRvbS1sZWZ0JywKICAgICAgICAgICAgICAgIGR1cmF0aW9uOiAyMDAwLAogICAgICAgICAgICB9KQogICAgICAgICAgICB0aGlzLmZvcmNlUmVyZW5kZXIoKQogICAgICAgIH0sCiAgICAgICAgdXBkYXRlQm9hcmRBY3Rpdml0eShhY3Rpdml0eSkgewogICAgICAgICAgICB0aGlzLmJvYXJkLmFjdGl2aXRpZXMudW5zaGlmdChhY3Rpdml0eSkKICAgICAgICAgICAgY29uc29sZS5sb2coJ3RoaXMuYm9hcmQuYWN0aXZpdGllczonLCB0aGlzLmJvYXJkLmFjdGl2aXRpZXMpCiAgICAgICAgICAgIHRoaXMuJHN0b3JlLmRpc3BhdGNoKHsKICAgICAgICAgICAgICAgIHR5cGU6ICdzYXZlQm9hcmQnLAogICAgICAgICAgICAgICAgYm9hcmQ6IHRoaXMuYm9hcmQsCiAgICAgICAgICAgIH0pCiAgICAgICAgfSwKICAgICAgICB1cGRhdGVHcm91cHMoZ3JvdXBzKSB7CiAgICAgICAgICAgIHRoaXMuYm9hcmQuZ3JvdXBzID0gZ3JvdXBzCiAgICAgICAgICAgIGNvbnN0IHR4dCA9IGAke3RoaXMudXNlci5mdWxsTmFtZX0gdXBkYXRlZCB0aGUgZ3JvdXBzYAogICAgICAgICAgICBsZXQgbmV3QWN0aXZpdHkgPSBib2FyZFNlcnZpY2UuZ2V0RW1wdHlBY3Rpdml0eSh0eHQsIHRoaXMudXNlcikKICAgICAgICAgICAgdGhpcy5ib2FyZC5hY3Rpdml0aWVzLnB1c2gobmV3QWN0aXZpdHkpCiAgICAgICAgICAgIHRoaXMuJHN0b3JlLmRpc3BhdGNoKHsKICAgICAgICAgICAgICAgIHR5cGU6ICdzYXZlQm9hcmQnLAogICAgICAgICAgICAgICAgYm9hcmQ6IHRoaXMuYm9hcmQsCiAgICAgICAgICAgIH0pCiAgICAgICAgICAgIHRoaXMuJG5vdGlmeSh7CiAgICAgICAgICAgICAgICBtZXNzYWdlOiAnVGhlIEdyb3VwcyBoYXMgYmVlbiBzYXZlZCcsCiAgICAgICAgICAgICAgICBwb3NpdGlvbjogJ2JvdHRvbS1sZWZ0JywKICAgICAgICAgICAgICAgIGR1cmF0aW9uOiAyMDAwLAogICAgICAgICAgICB9KQogICAgICAgICAgICB0aGlzLmZvcmNlUmVyZW5kZXIoKQogICAgICAgIH0sCiAgICB9LAogICAgd2F0Y2g6IHsKICAgICAgICBhc3luYyAnJHJvdXRlLnBhcmFtcy5ib2FyZElkJygpIHsKICAgICAgICAgICAgYXdhaXQgdGhpcy5sb2FkQm9hcmQoKQogICAgICAgICAgICB0aGlzLmZvcmNlUmVyZW5kZXIoKQogICAgICAgIH0sCiAgICB9LAogICAgYXN5bmMgY3JlYXRlZCgpIHsKICAgICAgICBldmVudEJ1cy4kb24oJ3VwZGF0ZUJvYXJkQWN0aXZpdHknLCB0aGlzLnVwZGF0ZUJvYXJkQWN0aXZpdHkpCiAgICAgICAgYXdhaXQgdGhpcy4kc3RvcmUuZGlzcGF0Y2goeyB0eXBlOiAnbG9hZFVzZXJzJyB9KQogICAgICAgIGF3YWl0IHRoaXMuJHN0b3JlLmRpc3BhdGNoKHsgdHlwZTogJ2xvYWRCb2FyZHMnIH0pCiAgICAgICAgdGhpcy5sb2FkQm9hcmQoKQogICAgfSwKICAgIGNvbXBvbmVudHM6IHsKICAgICAgICBncm91cExpc3QsCiAgICAgICAgYm9hcmRMaXN0LAogICAgICAgIC8vIGJvYXJkRmlsdGVyLAogICAgICAgIC8vIGFkZE1lbWJlcnMsCiAgICAgICAgdGFza0RldGFpbHMsCiAgICAgICAgYm9hcmRTZWFyY2gsCiAgICAgICAgY2hhdEFwcCwKICAgICAgICBib2FyZEhlYWRlciwKICAgIH0sCn0K"},{"version":3,"sources":["board-app.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwfile":"board-app.vue","sourceRoot":"src/views","sourcesContent":["<template>\n    <section v-if=\"!isLoading\" class=\"board-app flex\">\n        <board-list\n            :isExpanded=\"isListExpanded\"\n            @removeBoard=\"removeCurrBoard\"\n            @addNewBoard=\"addBoard\"\n            :boards=\"boards\"\n            title=\"Boards\"\n        >\n            <button\n                slot=\"expand-btn\"\n                @click=\"toggleExpandList\"\n                @mouseover=\"expandList\"\n                :style=\"expendStyle\"\n                :class=\"{\n                    'expand-list-btn': true,\n                    notExpanded: !isListExpanded,\n                }\"\n            >\n                <i\n                    v-tooltip.right=\"'Expend/Hide List'\"\n                    :class=\"expendBtnStyle\"\n                ></i>\n            </button>\n\n            <board-search @searchBoard=\"setSearch\" slot=\"search\" />\n        </board-list>\n\n        <div class=\"board-app-container width100\">\n            <board-header\n                :updateBoardName=\"updateBoardName\"\n                :updateBoardDesc=\"updateBoardDesc\"\n                :board=\"board\"\n                :addGroup=\"addGroup\"\n                @removeMember=\"removeBoardMember\"\n                @addMember=\"addBoardMember\"\n                :forceRerender=\"forceRerender\"\n            />\n            <group-list\n                v-if=\"board\"\n                :key=\"componentKey\"\n                :groups=\"board.groups\"\n                :boardName=\"board.name\"\n                @deleteGroup=\"deleteGroup\"\n                @updateGroup=\"updateGroup\"\n                @updateGroups=\"updateGroups\"\n                @duplicateGroup=\"duplicateGroup\"\n                @forceRender=\"forceRerender\"\n            />\n        </div>\n        <div v-if=\"isTaskDetailsHover\" class=\"backdrop-layer\"></div>\n\n        <task-details\n            v-if=\"this.$route.params.taskId\"\n            @close=\"isTaskDetailsHover = false\"\n            @mouseover.native=\"isTaskDetailsHover = true\"\n            @mouseleave.native=\"isTaskDetailsHover = false\"\n        />\n        <div\n            v-tooltip.top=\"'Chat Board'\"\n            v-show=\"isChatingBtnShown\"\n            class=\"chat-icon-btn-container flex align-center justify-center\"\n        >\n            <i @click=\"toggleChat\" class=\"fas chat-icon fa-comments\"></i>\n        </div>\n        <chat-app @closeChat=\"toggleChat\" v-if=\"isChating\" />\n    </section>\n    <div v-else class=\"flex justify-center align-center\">\n        <img src=\"@/assets/imgs/loader.gif\" class=\"loader-app\" />\n    </div>\n</template>\n<script>\nimport { eventBus } from '@/services/event-bus.service'\nimport chatApp from '@/cmps/board-chat'\n// import addMembers from '@/cmps/add-members'\nimport groupList from '@/cmps/group-list'\nimport boardList from '@/cmps/board-list.vue'\nimport taskDetails from '../views/task-details'\nimport { boardService } from '@/services/board.service'\n// import boardFilter from '@/cmps/board-filter.vue'\nimport boardSearch from '@/cmps/board-search'\nimport { utilService } from '@/services/util.service'\nimport boardHeader from '../cmps/board-header.vue'\n\nexport default {\n    name: 'board-app',\n    data() {\n        return {\n            isChatingBtnShown: true,\n            isChating: false,\n            isListExpanded: true,\n            isMembersShowen: false,\n            currTaskDetails: null,\n            isTaskDetailsHover: false,\n            componentKey: 0,\n        }\n    },\n    computed: {\n        chatControl() {\n            return this.isChatingBtnShown ? 'Hide Chat' : 'Show Chat'\n        },\n        expendStyle() {\n            return this.isListExpanded\n                ? { borderLeft: 1 + 'px' + ' solid ' + 'rgb(228, 228, 228)' }\n                : { marginLeft: 15 + 'px' }\n        },\n        expendBtnStyle() {\n            return this.isListExpanded\n                ? 'expend-btn fas fa-chevron-left'\n                : 'expend-btn fas fa-chevron-right'\n        },\n        isLoading() {\n            console.log(\n                'this.$store.getters.isLoading:',\n                this.$store.getters.isLoading\n            )\n            return this.$store.getters.isLoading\n        },\n        user() {\n            return this.$store.getters.user\n        },\n        board() {\n            return this.$store.getters.board\n        },\n        boards() {\n            return this.$store.getters.boards\n        },\n    },\n    methods: {\n        toogleChatBtn() {\n            this.isChatingBtnShown = !this.isChatingBtnShown\n        },\n        expandList() {\n            this.isListExpanded = true\n        },\n        toggleExpandList() {\n            this.isListExpanded = !this.isListExpanded\n        },\n        toggleChat() {\n            this.isChating = !this.isChating\n        },\n        duplicateGroup(group) {\n            group.id = utilService.makeId()\n            this.board.groups.push(group)\n            const txt = `${this.user.fullName} duplicated group the group ${group.txt} `\n            let newActivity = boardService.getEmptyActivity(txt, this.user)\n            this.board.activities.push(newActivity)\n            this.$store.dispatch({ type: 'saveBoard', board: this.board })\n            this.$notify({\n                message: 'Duplicated group was added',\n                position: 'bottom-left',\n                duration: 2000,\n            })\n            this.forceRerender()\n        },\n\n        updateBoardName(ev) {\n            this.board.name = ev.target.innerText\n            const txt = `${this.user.fullName} update Board name`\n            let newActivity = boardService.getEmptyActivity(txt, this.user)\n            this.board.activities.push(newActivity)\n\n            this.$store.dispatch({ type: 'saveBoard', board: this.board })\n            this.$notify({\n                message: 'Board name updated ',\n                position: 'bottom-left',\n                duration: 2000,\n            })\n            this.forceRerender()\n        },\n        updateBoardDesc(ev) {\n            this.board.description = ev.target.innerText\n            const txt = `${this.user.fullName} update Board description`\n            let newActivity = boardService.getEmptyActivity(txt, this.user)\n            this.board.activities.push(newActivity)\n            this.$store.dispatch({ type: 'saveBoard', board: this.board })\n            this.$notify({\n                message: 'Board description updeated',\n                position: 'bottom-left',\n                duration: 2000,\n            })\n            this.forceRerender()\n        },\n        forceRerender() {\n            this.componentKey += 1\n        },\n        addBoardMember(user) {\n            console.log('user:', user)\n            this.board.members.unshift(user)\n            const txt = `${this.user.fullName} add ${user.fullName}  to board`\n            let newActivity = boardService.getEmptyActivity(txt, this.user)\n            this.board.activities.push(newActivity)\n            this.$store.dispatch({ type: 'saveBoard', board: this.board })\n            this.$notify({\n                message: 'Add new member to board',\n                position: 'bottom-left',\n                duration: 2000,\n            })\n        },\n        removeBoardMember(member) {\n            const idx = this.board.members.findIndex(\n                (bMember) => bMember._id === member._id\n            )\n            this.board.members.splice(idx, 1)\n            const txt = `${this.user.fullName} remove  group`\n            let newActivity = boardService.getEmptyActivity(txt, this.user)\n            this.board.activities.push(newActivity)\n            this.$store.dispatch({ type: 'saveBoard', board: this.board })\n            this.$notify({\n                message: 'The member has been removed from the board',\n                position: 'bottom-left',\n                duration: 2000,\n            })\n        },\n        setSearch(searchBoard) {\n            this.$store.commit({ type: 'setSearch', searchBoard })\n            this.$store.dispatch({ type: 'loadBoards' })\n        },\n        removeCurrBoard(boardId) {\n            const txt = `${this.user.fullName} remove Board`\n            let newActivity = boardService.getEmptyActivity(txt, this.user)\n            this.board.activities.push(newActivity)\n            this.$store.dispatch({ type: 'removeBoard', boardId })\n            this.$notify({\n                message: 'The board has been deleted',\n                position: 'bottom-left',\n                duration: 2000,\n            })\n        },\n        addBoard() {\n            this.$prompt('Please enter a name to your board', 'Add New Board', {\n                confirmButtonText: 'OK',\n                cancelButtonText: 'Cancel',\n            })\n                .then(({ value }) => {\n                    const board = boardService.getEmptyBoard()\n                    board.name = value\n                    board.creator = this.user\n                    board.members.push(this.user)\n                    console.log(\n                        'I got that board before sending to store',\n                        board\n                    )\n                    this.$store.dispatch({ type: 'saveBoard', board })\n                    this.$message({\n                        type: 'success',\n                        message: 'Your Board:' + value + ' add ',\n                    })\n                })\n                .catch(() => {\n                    this.$message({\n                        type: 'info',\n                        message: 'Your action  canceled',\n                    })\n                })\n        },\n        loadBoard() {\n            this.$store.dispatch({\n                type: 'loadBoard',\n                boardId: this.$route.params.boardId,\n            })\n        },\n        addGroup() {\n            const newGroup = boardService.getEmptyGroup()\n            this.board.groups.push(newGroup)\n            const txt = `${this.user.fullName} has added a new group!`\n            let newActivity = boardService.getEmptyActivity(txt, this.user)\n            this.board.activities.push(newActivity)\n            this.$store.dispatch({\n                type: 'saveBoard',\n                board: this.board,\n            })\n            this.$notify({\n                message: 'A new group was added',\n                position: 'bottom-left',\n                duration: 2000,\n            })\n            this.forceRerender()\n        },\n        deleteGroup(groupId) {\n            const idx = this.board.groups.findIndex(\n                (group) => group.id === groupId\n            )\n            this.board.groups.splice(idx, 1)\n            const txt = `${this.user.fullName} deleted group`\n            let newActivity = boardService.getEmptyActivity(txt, this.user)\n            this.board.activities.push(newActivity)\n            this.$store.dispatch({\n                type: 'saveBoard',\n                board: this.board,\n            })\n            this.$notify({\n                message: 'The group has been deleted',\n                position: 'bottom-left',\n                duration: 2000,\n            })\n            this.forceRerender()\n        },\n        updateGroup(updatedGroup) {\n            const idx = this.board.groups.findIndex(\n                (group) => group.id === updatedGroup.id\n            )\n            this.board.groups.splice(idx, 1, updatedGroup)\n            const txt = `${this.user.fullName} updated  group`\n            let newActivity = boardService.getEmptyActivity(txt, this.user)\n            this.board.activities.push(newActivity)\n            this.$store.dispatch({\n                type: 'saveBoard',\n                board: this.board,\n            })\n            this.$notify({\n                message: 'Group has been updated',\n                position: 'bottom-left',\n                duration: 2000,\n            })\n            this.forceRerender()\n        },\n        updateBoardActivity(activity) {\n            this.board.activities.unshift(activity)\n            console.log('this.board.activities:', this.board.activities)\n            this.$store.dispatch({\n                type: 'saveBoard',\n                board: this.board,\n            })\n        },\n        updateGroups(groups) {\n            this.board.groups = groups\n            const txt = `${this.user.fullName} updated the groups`\n            let newActivity = boardService.getEmptyActivity(txt, this.user)\n            this.board.activities.push(newActivity)\n            this.$store.dispatch({\n                type: 'saveBoard',\n                board: this.board,\n            })\n            this.$notify({\n                message: 'The Groups has been saved',\n                position: 'bottom-left',\n                duration: 2000,\n            })\n            this.forceRerender()\n        },\n    },\n    watch: {\n        async '$route.params.boardId'() {\n            await this.loadBoard()\n            this.forceRerender()\n        },\n    },\n    async created() {\n        eventBus.$on('updateBoardActivity', this.updateBoardActivity)\n        await this.$store.dispatch({ type: 'loadUsers' })\n        await this.$store.dispatch({ type: 'loadBoards' })\n        this.loadBoard()\n    },\n    components: {\n        groupList,\n        boardList,\n        // boardFilter,\n        // addMembers,\n        taskDetails,\n        boardSearch,\n        chatApp,\n        boardHeader,\n    },\n}\n</script>\n"]}]}