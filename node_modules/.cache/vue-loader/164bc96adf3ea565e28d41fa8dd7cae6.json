{"remainingRequest":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/src/cmps/upload-img.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/src/cmps/upload-img.vue","mtime":1607357296427},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IGltZ1VwbG9hZCB9IGZyb20gJ0Avc2VydmljZXMvaW1nLXVwbG9hZC5zZXJ2aWNlJwpleHBvcnQgZGVmYXVsdCB7CiAgcHJvcHM6IHsKICAgIGlzVXNlckRldGFpbHM6IEJvb2xlYW4KICB9LAogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBpc0xvYWRpbmc6IGZhbHNlLAogICAgICBpbWdVcmw6IG51bGwKICAgIH0KICB9LAoKICBtZXRob2RzOiB7CiAgICBhc3luYyBvblVwbG9hZEltZyhldikgewogICAgICB0aGlzLmlzTG9hZGluZyA9IHRydWUKICAgICAgY29uc3QgcmVzID0gYXdhaXQgaW1nVXBsb2FkKGV2KQogICAgICB0aGlzLmltZ1VybCA9IHJlcy51cmwKICAgICAgdGhpcy4kZW1pdCgnc2VuZEltZ1VybCcsIHRoaXMuaW1nVXJsKQogICAgICB0aGlzLmlzTG9hZGluZyA9IGZhbHNlCiAgICB9CiAgfQp9Cg=="},{"version":3,"sources":["upload-img.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"upload-img.vue","sourceRoot":"src/cmps","sourcesContent":["<template>\n  <section\n    :class=\"{ 'upload-image-container': true, 'user-editor': isUserDetails }\"\n  >\n    <div\n      :class=\"{\n        'container-img flex column': true,\n        'user-editor': isUserDetails\n      }\"\n      v-if=\"!isLoading\"\n    >\n      <label\n        :class=\"{ 'label-img': true, 'user-editor': isUserDetails }\"\n        for=\"imgUploader\"\n      >\n        <div class=\"white btn-upload-container\">\n          <slot name=\"btn-upload\">\n            <i\n              v-tooltip.top=\"'Upload Image'\"\n              :class=\"{\n                'fad fa-upload upload-icon': true,\n                'user-editor': isUserDetails\n              }\"\n            ></i>\n          </slot>\n        </div>\n        <input @change=\"onUploadImg\" type=\"file\" id=\"imgUploader\" />\n      </label>\n      <slot name=\"imgUrl\">\n        <img class=\"img-uploaded\" v-if=\"imgUrl\" :src=\"imgUrl\" alt=\"image\" />\n      </slot>\n    </div>\n    <img v-else src=\"@/assets/imgs/loader.gif\" class=\"img-loader\" />\n  </section>\n</template>\n\n<script>\nimport { imgUpload } from '@/services/img-upload.service'\nexport default {\n  props: {\n    isUserDetails: Boolean\n  },\n  data() {\n    return {\n      isLoading: false,\n      imgUrl: null\n    }\n  },\n\n  methods: {\n    async onUploadImg(ev) {\n      this.isLoading = true\n      const res = await imgUpload(ev)\n      this.imgUrl = res.url\n      this.$emit('sendImgUrl', this.imgUrl)\n      this.isLoading = false\n    }\n  }\n}\n</script>\n\n<style></style>\n"]}]}