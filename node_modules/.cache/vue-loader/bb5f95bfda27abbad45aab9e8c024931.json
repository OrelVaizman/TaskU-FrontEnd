{"remainingRequest":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/src/cmps/board-chat.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/src/cmps/board-chat.vue","mtime":1606808749391},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCi8vIEV2ZXJ5IGxpbmUgd2l0aCBAQCBuZWVkIHRvIGJlIHdpdGhvdXQgYSBjb21tZW50CmltcG9ydCBBdmF0YXIgZnJvbSAndnVlLWF2YXRhcicKLy8gaW1wb3J0IHtzb2NrZXRTZXJ2aWNlfSBmcm9tICdAL3NlcnZpY2VzL3NvY2tldC1zZXJ2aWNlLmpzJyBAQCAKCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnYm9hcmQtY2hhdCcsCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIG1zZ3M6IFtdLAogICAgICBtc2c6IHtmcm9tOidndXknLHR4dDonJ30sIC8vIGNoYW5nZSB0byBsb2dpbiB1c2VyCiAgICAgIHRvcGljOm51bGwsCiAgICAgICBpc1R5cGVpbmc6ZmFsc2UsCiAgICAgIG1zZ1R5cGluZzonJywKICAgIH0KICB9LApjb21wdXRlZDp7CiAgdG9waWNOYW1lKCl7CiAgICByZXR1cm4gdGhpcy4kc3RvcmUuZ2V0dGVycy5ib2FyZC5uYW1lCiAgfQp9LAogIG1ldGhvZHM6IHsKICAgIGVtaXRDbG9zZSgpIHsKICAgICAgdGhpcy4kZW1pdCgnY2xvc2VDaGF0JykKICAgIH0sCiAgICAKICAgICB1c2VyVHlwaW5nKCl7CiAgICAgIHZhciB0aW1lciA9IG51bGwKICAgICAgICAvLyBzb2NrZXRTZXJ2aWNlLmVtaXQoJ3R5cGluZycsdGhpcy5tc2cuZnJvbSkgQEAKICAgICAgY2xlYXJUaW1lb3V0KHRpbWVyKTsgCiAgICAgICB0aW1lciA9IHNldFRpbWVvdXQoKCk9PnsKICAgICAgICAgIC8vIHNvY2tldFNlcnZpY2UuZW1pdCgncmVzZXQgaXMgdHlwaW5nJykgQEAKICAgICAgICB9LDI1MDApCiAgICB9LAogICAgYWRkTXNnKG1zZyl7CiAgICAgIHRoaXMubXNncy5wdXNoKG1zZykKICAgIH0sCiAgICBzZW5kTXNnKCkgewogICAgICBpZiAoIXRoaXMubXNnLnR4dCkgcmV0dXJuOwogICAgICB0aGlzLmFkZE1zZyhKU09OLnBhcnNlKEpTT04uc3RyaW5naWZ5KHRoaXMubXNnKSkpIC8vIFJlbW92ZSEhICoqKioKICAgICAgLy8gc29ja2V0U2VydmljZS5lbWl0KCdyZXNldCBpcyB0eXBpbmcnKSAgQEAKICAgICAgLy8gc29ja2V0U2VydmljZS5lbWl0KCdjaGF0IG5ld01zZycsIHRoaXMubXNnKSBAQAogICAgICB0aGlzLm1zZy50eHQ9JycKICAgIH0sCiAgICB1cGRhdGVUb3BpYygpewpjb25zdCB7IGJvYXJkSWQgfSA9IHRoaXMuJHJvdXRlLnBhcmFtczsKICAgIHRoaXMudG9waWMgPSBib2FyZElkCiAgICBjb25zb2xlLmxvZygndG9waWM6Jyx0aGlzLnRvcGljKTsKICAgIH0KICB9LAogIGNyZWF0ZWQoKXsKICAgIC8vIEBAQEBAQEAKICAgIC8vIHRoaXMubXNnLmZyb20gPSB0aGlzLiRzdG9yZS5nZXR0ZXJzLmxvZ2dlZGluVXNlciAKICAgIC8vIHRoaXMudXBkYXRlVG9waWMoKTsKICAgIC8vIHNvY2tldFNlcnZpY2Uuc2V0dXAoKTsKICAgIC8vIHNvY2tldFNlcnZpY2UuZW1pdCgnY2hhdCB0b3BpYycsIHRoaXMudG9waWMpCiAgICAvLyBzb2NrZXRTZXJ2aWNlLm9uKCdoaXN0b3J5IG1zZycsbXNncz0+dGhpcy5tc2dzID0gbXNncykKICAgIC8vIHNvY2tldFNlcnZpY2Uub24oJ2NoYXQgYWRkTXNnJywgdGhpcy5hZGRNc2cpCiAgICAvLyBzb2NrZXRTZXJ2aWNlLm9uKCdpc1R5cGluZycsKGJvb2xlbik9PnRoaXMuaXNUeXBlaW5nPWJvb2xlbikKICAgIC8vIHNvY2tldFNlcnZpY2Uub24oJ21zZycsKG1zZyk9PnRoaXMubXNnVHlwaW5nPW1zZykKICB9LAogICAgZGVzdHJveWVkKCkgewogICAgICAvLyBAQEBAQAogICAgLy8gdGhpcy5tc2dzID0gW10KICAgIC8vIHNvY2tldFNlcnZpY2Uub2ZmKCdjaGF0IGFkZE1zZycsIHRoaXMuYWRkTXNnKQogICAgLy8gc29ja2V0U2VydmljZS50ZXJtaW5hdGUoKTsKICB9LAogIHdhdGNoOnsKICAgICAgLy8gQEBAQEAKICAgIC8vICAnJHJvdXRlLnBhcmFtcy5ib2FyZElkJygpewogICAgLy8gIHRoaXMudXBkYXRlVG9waWMoKTsKCiAgICAvLyAgfQogIH0sCiAgY29tcG9uZW50czp7CiAgICBBdmF0YXIKCiAgfQp9Cg=="},{"version":3,"sources":["board-chat.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsCA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA","file":"board-chat.vue","sourceRoot":"src/cmps","sourcesContent":["<template>\n  <section class=\"board-chat\">\n    <section class=\"chat-container flex column\">\n      <div class=\"header-chat flex space-between align-center\">\n        {{topicName}} Chat\n        <button v-tooltip.top=\"'Close Chat'\" class=\"btn-close\">\n          <i @click=\"emitClose\" class=\"fas fa-times\"></i>\n        </button>\n      </div>\n      <div class=\"msg-container grow flex column\">\n        <template v-if=\"msgs\">\n          <div class=\"chat-msg flex \" v-for=\"(msg, idx) in msgs\" :key=\"idx\">\n               <avatar\n            class=\"profile-img\"\n            :size=\"20\"\n            \n            :username=\"msg.from\"\n          ></avatar>\n            <strong class=\"from-msg\">{{ msg.from }}:</strong><span>{{ msg.txt }} </span> \n           <!-- <div v-show=\"isTypeing\">\n  {{msgTyping}}\n  </div> -->\n          </div>\n        </template>\n      </div>\n      <div class=\"footer-chat flex align-center\">\n        <input\n          type=\"text\" @keydown.enter=\"sendMsg\"\n          v-model=\"msg.txt\"\n          placeholder=\"Write a massage...\"\n          name=\"\"\n          id=\"\"\n        /><i v-tooltip.top=\"'Send Msg'\" @click=\"sendMsg\" class=\"send-btn fas fa-paper-plane\"></i>\n      </div>\n    </section>\n  </section>\n</template>\n<script>\n// Every line with @@ need to be without a comment\nimport Avatar from 'vue-avatar'\n// import {socketService} from '@/services/socket-service.js' @@ \n\nexport default {\n  name: 'board-chat',\n  data() {\n    return {\n      msgs: [],\n      msg: {from:'guy',txt:''}, // change to login user\n      topic:null,\n       isTypeing:false,\n      msgTyping:'',\n    }\n  },\ncomputed:{\n  topicName(){\n    return this.$store.getters.board.name\n  }\n},\n  methods: {\n    emitClose() {\n      this.$emit('closeChat')\n    },\n    \n     userTyping(){\n      var timer = null\n        // socketService.emit('typing',this.msg.from) @@\n      clearTimeout(timer); \n       timer = setTimeout(()=>{\n          // socketService.emit('reset is typing') @@\n        },2500)\n    },\n    addMsg(msg){\n      this.msgs.push(msg)\n    },\n    sendMsg() {\n      if (!this.msg.txt) return;\n      this.addMsg(JSON.parse(JSON.stringify(this.msg))) // Remove!! ****\n      // socketService.emit('reset is typing')  @@\n      // socketService.emit('chat newMsg', this.msg) @@\n      this.msg.txt=''\n    },\n    updateTopic(){\nconst { boardId } = this.$route.params;\n    this.topic = boardId\n    console.log('topic:',this.topic);\n    }\n  },\n  created(){\n    // @@@@@@@\n    // this.msg.from = this.$store.getters.loggedinUser \n    // this.updateTopic();\n    // socketService.setup();\n    // socketService.emit('chat topic', this.topic)\n    // socketService.on('history msg',msgs=>this.msgs = msgs)\n    // socketService.on('chat addMsg', this.addMsg)\n    // socketService.on('isTyping',(boolen)=>this.isTypeing=boolen)\n    // socketService.on('msg',(msg)=>this.msgTyping=msg)\n  },\n    destroyed() {\n      // @@@@@\n    // this.msgs = []\n    // socketService.off('chat addMsg', this.addMsg)\n    // socketService.terminate();\n  },\n  watch:{\n      // @@@@@\n    //  '$route.params.boardId'(){\n    //  this.updateTopic();\n\n    //  }\n  },\n  components:{\n    Avatar\n\n  }\n}\n</script>\n "]}]}