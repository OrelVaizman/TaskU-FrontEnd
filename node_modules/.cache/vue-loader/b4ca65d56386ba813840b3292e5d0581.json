{"remainingRequest":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/src/cmps/task-activities.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/src/cmps/task-activities.vue","mtime":1607418824549},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBBdmF0YXIgZnJvbSAnQC9jbXBzL3VzZXItYXZhdGFyLnZ1ZScKCmltcG9ydCBtb21lbnQgZnJvbSAnbW9tZW50JwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ3Rhc2stYWN0aXZpdGllcycsCiAgcHJvcHM6IHsKICAgIGFjdGl2aXRpZXM6IHsKICAgICAgdHlwZTogQXJyYXkKICAgIH0KICB9LAogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBpc0hvdmVyaW5nOiBmYWxzZSwKICAgICAgaXNBY3RIb3ZlcmluZzogZmFsc2UsCiAgICAgIGhvdmVyZWRBY3RJZDogbnVsbAogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgZ2V0VGltZSh0aW1lKSB7CiAgICAgIHJldHVybiBtb21lbnQodGltZSkuZnJvbU5vdygpCiAgICB9LAogICAgZGVsZXRlQWN0aXZpdHkoYWN0aXZpdHlJZCkgewogICAgICB0aGlzLiRlbWl0KCdkZWxldGVBY3Rpdml0eScsIGFjdGl2aXR5SWQpCiAgICB9LAogICAgc2V0SG92ZXJlZEFjdGl2aXR5KGFjdElkKSB7CiAgICAgIHRoaXMuaXNBY3RIb3ZlcmluZyA9IHRydWUKICAgICAgdGhpcy5ob3ZlcmVkQWN0SWQgPSBhY3RJZAogICAgfQogIH0sCiAgY29tcG9uZW50czogewogICAgQXZhdGFyCiAgfSwKICBjcmVhdGVkKCkge30KfQo="},{"version":3,"sources":["task-activities.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyCA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"task-activities.vue","sourceRoot":"src/cmps","sourcesContent":["<template>\n  <ul v-if=\"activities && activities.length\" class=\"task-activities\">\n    <li\n      class=\"activity flex space-between align-center relative\"\n      @mouseover=\"setHoveredActivity(activity.id)\"\n      @mouseleave=\"isActHovering = false\"\n      v-for=\"activity in activities\"\n      :key=\"activity.id\"\n    >\n      <button\n        class=\"delete-activity-btn\"\n        @click=\"deleteActivity(activity.id)\"\n        v-if=\"isActHovering && hoveredActId === activity.id\"\n      >\n        X\n      </button>\n      <section class=\"activity-details flex align-center\">\n        <div\n          class=\"user-avatar\"\n          v-if=\"activity.byUser\"\n          @mouseenter=\"isHovering = true\"\n          @mouseleave=\"isHovering = false\"\n        >\n          <avatar :user=\"activity.byUser\" />\n\n          <!-- <transition name=\"fade\">\n            <span class=\"username\" v-show=\"isHovering\">{{\n              activity.byUser.fullName\n            }}</span>\n          </transition> -->\n        </div>\n        <span class=\"activity-txt\"> {{ activity.txt }}</span>\n      </section>\n      <div class=\"activity-date flex end\">\n        <h6><i class=\"far fa-clock\"></i> {{ getTime(activity.createdAt) }}</h6>\n      </div>\n    </li>\n  </ul>\n</template>\n\n<script>\nimport Avatar from '@/cmps/user-avatar.vue'\n\nimport moment from 'moment'\nexport default {\n  name: 'task-activities',\n  props: {\n    activities: {\n      type: Array\n    }\n  },\n  data() {\n    return {\n      isHovering: false,\n      isActHovering: false,\n      hoveredActId: null\n    }\n  },\n  methods: {\n    getTime(time) {\n      return moment(time).fromNow()\n    },\n    deleteActivity(activityId) {\n      this.$emit('deleteActivity', activityId)\n    },\n    setHoveredActivity(actId) {\n      this.isActHovering = true\n      this.hoveredActId = actId\n    }\n  },\n  components: {\n    Avatar\n  },\n  created() {}\n}\n</script>\n\n<style></style>\n"]}]}