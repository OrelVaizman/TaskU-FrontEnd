{"remainingRequest":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/src/cmps/task-list.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/src/cmps/task-list.vue","mtime":1606776852215},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB0YXNrUHJldmlldyBmcm9tICcuL3Rhc2stcHJldmlldycKaW1wb3J0IHsgYm9hcmRTZXJ2aWNlIH0gZnJvbSAnQC9zZXJ2aWNlcy9ib2FyZC5zZXJ2aWNlJwppbXBvcnQgZHJhZ2dhYmxlIGZyb20gJ3Z1ZWRyYWdnYWJsZScKaW1wb3J0IHsgZXZlbnRCdXMgfSBmcm9tICdAL3NlcnZpY2VzL2V2ZW50LWJ1cy5zZXJ2aWNlJwoKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICd0YXNrLWxpc3QnLAogIHByb3BzOiB7CiAgICB0YXNrczogQXJyYXksCiAgICBncm91cElkOiBTdHJpbmcsCiAgICB0YXNrQ29sb3I6IFN0cmluZwogIH0sCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHR4dDogJycsCiAgICAgIGlzQWRkQnRuU2hvd2VuOiBmYWxzZSwKICAgICAgY2xvbmVkVGFza3M6IG51bGwKICAgIH0KICB9LAoKICBjb21wdXRlZDogewogICAgYm9hcmQoKSB7CiAgICAgIHJldHVybiB0aGlzLiRzdG9yZS5nZXR0ZXJzLmJvYXJkCiAgICB9LAogICAgbG9nZ2VkSW5Vc2VyKCkgewogICAgICByZXR1cm4gdGhpcy4kc3RvcmUuZ2V0dGVycy5sb2dnZWRJblVzZXIKICAgIH0sCiAgICB0YXNrQmdjKCkgewogICAgICByZXR1cm4geyBiYWNrZ3JvdW5kQ29sb3I6IHRoaXMudGFza0NvbG9yIH0KICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIGFkZEVtcHR5VGFzayhncm91cElkKSB7CiAgICAgIGlmICh0aGlzLmdyb3VwSWQgIT09IGdyb3VwSWQpIHJldHVybgogICAgICBjb25zdCBuZXdUYXNrID0gYm9hcmRTZXJ2aWNlLmdldEVtcHR5VGFzaygpCiAgICAgIGNvbnN0IGdyb3VwSWR4ID0gdGhpcy5ib2FyZC5ncm91cHMuZmluZEluZGV4KAogICAgICAgIGdyb3VwID0+IGdyb3VwLmlkID09PSBncm91cElkCiAgICAgICkKICAgICAgdGhpcy5ib2FyZC5ncm91cHNbZ3JvdXBJZHhdLnRhc2tzLnB1c2gobmV3VGFzaykKICAgICAgdGhpcy4kc3RvcmUuZGlzcGF0Y2goewogICAgICAgIHR5cGU6ICdzYXZlQm9hcmQnLAogICAgICAgIGJvYXJkOiB0aGlzLmJvYXJkCiAgICAgIH0pCiAgICAgIHRoaXMuJGVtaXQoJ2ZvcmNlUmVuZGVyJykKICAgIH0sCiAgICBzaG93QWRkQnRuKCkgewogICAgICB0aGlzLmlzQWRkQnRuU2hvd2VuID0gdHJ1ZQogICAgfSwKICAgIGdldEdyb3VwQnlJZCgpIHsKICAgICAgY29uc3QgaWR4ID0gdGhpcy5ib2FyZC5ncm91cHMuZmluZEluZGV4KAogICAgICAgIGdyb3VwID0+IGdyb3VwLmlkID09PSB0aGlzLmdyb3VwSWQKICAgICAgKQogICAgICByZXR1cm4gdGhpcy5ib2FyZC5ncm91cHNbaWR4XQogICAgfSwKICAgIGFkZFRhc2soKSB7CiAgICAgIGNvbnN0IG5ld1Rhc2sgPSBib2FyZFNlcnZpY2UuZ2V0RW1wdHlUYXNrKCkKICAgICAgbmV3VGFzay50eHQgPSB0aGlzLnR4dAogICAgICBjb25zdCB0eHQgPSBgVGFzayAnJHtuZXdUYXNrLnR4dH0nIGFkZGVkYAogICAgICBsZXQgbmV3QWN0aXZpdHkgPSBib2FyZFNlcnZpY2UuZ2V0RW1wdHlBY3Rpdml0eSh0eHQsIHRoaXMubG9nZ2VkSW5Vc2VyKQogICAgICBuZXdUYXNrLmFjdGl2aXRpZXMucHVzaChuZXdBY3Rpdml0eSkKICAgICAgY29uc3QgZ3JvdXAgPSB0aGlzLmdldEdyb3VwQnlJZCgpCiAgICAgIGdyb3VwLnRhc2tzLnB1c2gobmV3VGFzaykKICAgICAgdGhpcy4kc3RvcmUuZGlzcGF0Y2goewogICAgICAgIHR5cGU6ICdzYXZlQm9hcmQnLAogICAgICAgIGJvYXJkOiB0aGlzLmJvYXJkCiAgICAgIH0pCiAgICAgIHRoaXMudHh0ID0gJycKICAgICAgdGhpcy5pc0FkZEJ0blNob3dlbiA9IGZhbHNlCiAgICAgIHRoaXMuJGVtaXQoJ2ZvcmNlUmVuZGVyJykKICAgIH0sCiAgICBkZWxldGVUYXNrKHRhc2tJZCkgewogICAgICBjb25zdCBncm91cCA9IHRoaXMuZ2V0R3JvdXBCeUlkKCkKICAgICAgY29uc3QgdGFza0lkeCA9IGdyb3VwLnRhc2tzLmZpbmRJbmRleCh0YXNrID0+IHRhc2suaWQgPT09IHRhc2tJZCkKICAgICAgZ3JvdXAudGFza3Muc3BsaWNlKHRhc2tJZHgsIDEpCiAgICAgIHRoaXMuJHN0b3JlLmRpc3BhdGNoKHsKICAgICAgICB0eXBlOiAnc2F2ZUJvYXJkJywKICAgICAgICBib2FyZDogdGhpcy5ib2FyZAogICAgICB9KQogICAgICB0aGlzLiRlbWl0KCdmb3JjZVJlbmRlcicpCiAgICB9LAogICAgdXBkYXRlVGFzayhuZXdUYXNrKSB7CiAgICAgIGNvbnN0IGdyb3VwID0gdGhpcy5nZXRHcm91cEJ5SWQoKQogICAgICBjb25zdCB0YXNrSWR4ID0gZ3JvdXAudGFza3MuZmluZEluZGV4KHRhc2sgPT4gdGFzay5pZCA9PT0gbmV3VGFzay5pZCkKICAgICAgZ3JvdXAudGFza3Muc3BsaWNlKHRhc2tJZHgsIDEsIG5ld1Rhc2spCiAgICAgIHRoaXMuJHN0b3JlLmRpc3BhdGNoKHsKICAgICAgICB0eXBlOiAnc2F2ZUJvYXJkJywKICAgICAgICBib2FyZDogdGhpcy5ib2FyZAogICAgICB9KQogICAgICB0aGlzLiRlbWl0KCdmb3JjZVJlbmRlcicpCiAgICB9LAogICAgdXBkYXRlVGFza3MoKSB7CiAgICAgIGNvbnN0IGdyb3VwID0gdGhpcy5nZXRHcm91cEJ5SWQoKQogICAgICBjb25zb2xlLmxvZygnZ3JvdXA6JywgZ3JvdXApCiAgICAgIGNvbnNvbGUubG9nKCdjbG9uZWRUYXNrczonLCB0aGlzLmNsb25lZFRhc2tzKQogICAgICBncm91cC50YXNrcyA9IHRoaXMuY2xvbmVkVGFza3MKICAgICAgdGhpcy4kc3RvcmUuZGlzcGF0Y2goewogICAgICAgIHR5cGU6ICdzYXZlQm9hcmQnLAogICAgICAgIGJvYXJkOiB0aGlzLmJvYXJkCiAgICAgIH0pCiAgICAgIHRoaXMuJGVtaXQoJ2ZvcmNlUmVuZGVyJykKICAgIH0KICB9LAogIGNvbXBvbmVudHM6IHsKICAgIHRhc2tQcmV2aWV3LAogICAgZHJhZ2dhYmxlCiAgfSwKICBjcmVhdGVkKCkgewogICAgdGhpcy5jbG9uZWRUYXNrcyA9IEpTT04ucGFyc2UoSlNPTi5zdHJpbmdpZnkodGhpcy50YXNrcykpCiAgICBldmVudEJ1cy4kb24oJ2FkZEVtcHR5VGFzaycsIHRoaXMuYWRkRW1wdHlUYXNrKQogIH0KfQo="},{"version":3,"sources":["task-list.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkfile":"task-list.vue","sourceRoot":"src/cmps","sourcesContent":["<template>\n  <section v-if=\"clonedTasks\" class=\"task-list width100\">\n    <ul class=\"clean-list flex wrap align-center justify-center gap\">\n      <draggable class=\"width100\" v-model=\"clonedTasks\" @end=\"updateTasks\">\n        <task-preview\n          v-for=\"task in clonedTasks\"\n          :user=\"loggedInUser\"\n          :taskColor=\"taskColor\"\n          :key=\"task.id\"\n          :task=\"task\"\n          :statuses=\"board.statuses\"\n          :priorities=\"board.priorities\"\n          :groupId=\"groupId\"\n          @deleteTask=\"deleteTask\"\n          @updateTask=\"updateTask\"\n          :boardMembers=\"board.members\"\n        />\n      </draggable>\n    </ul>\n    <form class=\"flex\" @submit.prevent=\"addTask\">\n      <span class=\"task-color\" :style=\"taskBgc\"></span>\n      <input\n        class=\"add-task-input \"\n        @focus=\"showAddBtn\"\n        v-model=\"txt\"\n        type=\"text\"\n        placeholder=\"+ Add Task\"\n      />\n      <button v-show=\"isAddBtnShowen\" type=\"submit\">Add</button>\n    </form>\n  </section>\n</template>\n\n<script>\nimport taskPreview from './task-preview'\nimport { boardService } from '@/services/board.service'\nimport draggable from 'vuedraggable'\nimport { eventBus } from '@/services/event-bus.service'\n\nexport default {\n  name: 'task-list',\n  props: {\n    tasks: Array,\n    groupId: String,\n    taskColor: String\n  },\n  data() {\n    return {\n      txt: '',\n      isAddBtnShowen: false,\n      clonedTasks: null\n    }\n  },\n\n  computed: {\n    board() {\n      return this.$store.getters.board\n    },\n    loggedInUser() {\n      return this.$store.getters.loggedInUser\n    },\n    taskBgc() {\n      return { backgroundColor: this.taskColor }\n    }\n  },\n  methods: {\n    addEmptyTask(groupId) {\n      if (this.groupId !== groupId) return\n      const newTask = boardService.getEmptyTask()\n      const groupIdx = this.board.groups.findIndex(\n        group => group.id === groupId\n      )\n      this.board.groups[groupIdx].tasks.push(newTask)\n      this.$store.dispatch({\n        type: 'saveBoard',\n        board: this.board\n      })\n      this.$emit('forceRender')\n    },\n    showAddBtn() {\n      this.isAddBtnShowen = true\n    },\n    getGroupById() {\n      const idx = this.board.groups.findIndex(\n        group => group.id === this.groupId\n      )\n      return this.board.groups[idx]\n    },\n    addTask() {\n      const newTask = boardService.getEmptyTask()\n      newTask.txt = this.txt\n      const txt = `Task '${newTask.txt}' added`\n      let newActivity = boardService.getEmptyActivity(txt, this.loggedInUser)\n      newTask.activities.push(newActivity)\n      const group = this.getGroupById()\n      group.tasks.push(newTask)\n      this.$store.dispatch({\n        type: 'saveBoard',\n        board: this.board\n      })\n      this.txt = ''\n      this.isAddBtnShowen = false\n      this.$emit('forceRender')\n    },\n    deleteTask(taskId) {\n      const group = this.getGroupById()\n      const taskIdx = group.tasks.findIndex(task => task.id === taskId)\n      group.tasks.splice(taskIdx, 1)\n      this.$store.dispatch({\n        type: 'saveBoard',\n        board: this.board\n      })\n      this.$emit('forceRender')\n    },\n    updateTask(newTask) {\n      const group = this.getGroupById()\n      const taskIdx = group.tasks.findIndex(task => task.id === newTask.id)\n      group.tasks.splice(taskIdx, 1, newTask)\n      this.$store.dispatch({\n        type: 'saveBoard',\n        board: this.board\n      })\n      this.$emit('forceRender')\n    },\n    updateTasks() {\n      const group = this.getGroupById()\n      console.log('group:', group)\n      console.log('clonedTasks:', this.clonedTasks)\n      group.tasks = this.clonedTasks\n      this.$store.dispatch({\n        type: 'saveBoard',\n        board: this.board\n      })\n      this.$emit('forceRender')\n    }\n  },\n  components: {\n    taskPreview,\n    draggable\n  },\n  created() {\n    this.clonedTasks = JSON.parse(JSON.stringify(this.tasks))\n    eventBus.$on('addEmptyTask', this.addEmptyTask)\n  }\n}\n</script>\n"]}]}