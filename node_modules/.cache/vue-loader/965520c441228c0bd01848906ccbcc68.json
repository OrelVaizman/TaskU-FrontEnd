{"remainingRequest":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/src/cmps/group-list.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/src/cmps/group-list.vue","mtime":1606649904009},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBncm91cFByZXZpZXcgZnJvbSAnQC9jbXBzL2dyb3VwLXByZXZpZXcudnVlJwppbXBvcnQgZHJhZ2dhYmxlIGZyb20gJ3Z1ZWRyYWdnYWJsZScKCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnZ3JvdXAtbGlzdCcsCiAgcHJvcHM6IHsKICAgIGdyb3VwczogQXJyYXkKICB9LAogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBjbG9uZWRHcm91cHM6IG51bGwKICAgIH0KICB9LAogIGNyZWF0ZWQoKSB7CiAgICB0aGlzLmNsb25lZEdyb3VwcyA9IEpTT04ucGFyc2UoSlNPTi5zdHJpbmdpZnkodGhpcy5ncm91cHMpKQogIH0sCiAgY29tcG9uZW50czogewogICAgZ3JvdXBQcmV2aWV3LAogICAgZHJhZ2dhYmxlCiAgfSwKICBtZXRob2RzOiB7CiAgICBlbWl0RGVsZXRlKGdyb3VwSWQpIHsKICAgICAgdGhpcy4kZW1pdCgnZGVsZXRlR3JvdXAnLCBncm91cElkKQogICAgfSwKICAgIGVtaXRGb3JjZVJlbmRlcigpIHsKICAgICAgdGhpcy4kZW1pdCgnZm9yY2VSZW5kZXInKQogICAgfSwKCiAgICB1cGRhdGVHcm91cChncm91cCkgewogICAgICB0aGlzLiRlbWl0KCd1cGRhdGVHcm91cCcsIGdyb3VwKQogICAgfSwKICAgIGVtaXRVcGRhdGVHcm91cHMoKSB7CiAgICAgIHRoaXMuJGVtaXQoJ3VwZGF0ZUdyb3VwcycsIHRoaXMuY2xvbmVkR3JvdXBzKQogICAgfQogIH0KfQo="},{"version":3,"sources":["group-list.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAkBA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"group-list.vue","sourceRoot":"src/cmps","sourcesContent":["<template>\n  <section v-if=\"clonedGroups.length\" class=\"group-container\">\n    <ul class=\"clean-list flex column align-center justify-center gap width100\">\n      <draggable v-model=\"clonedGroups\" @end=\"emitUpdateGroups\" animation=\"200\">\n        <group-preview\n          v-for=\"group in clonedGroups\"\n          :key=\"group._id\"\n          :group=\"group\"\n          :deleteGroup=\"emitDelete\"\n          @updateGroup=\"updateGroup\"\n          @emitForceRender=\"emitForceRender\"\n        />\n      </draggable>\n    </ul>\n    \n  </section>\n</template>\n<script>\nimport groupPreview from '@/cmps/group-preview.vue'\nimport draggable from 'vuedraggable'\n\nexport default {\n  name: 'group-list',\n  props: {\n    groups: Array\n  },\n  data() {\n    return {\n      clonedGroups: null\n    }\n  },\n  created() {\n    this.clonedGroups = JSON.parse(JSON.stringify(this.groups))\n  },\n  components: {\n    groupPreview,\n    draggable\n  },\n  methods: {\n    emitDelete(groupId) {\n      this.$emit('deleteGroup', groupId)\n    },\n    emitForceRender() {\n      this.$emit('forceRender')\n    },\n\n    updateGroup(group) {\n      this.$emit('updateGroup', group)\n    },\n    emitUpdateGroups() {\n      this.$emit('updateGroups', this.clonedGroups)\n    }\n  }\n}\n</script>\n"]}]}