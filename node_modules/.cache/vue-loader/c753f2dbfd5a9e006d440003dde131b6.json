{"remainingRequest":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/src/cmps/group-preview.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/src/cmps/group-preview.vue","mtime":1606750301946},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBwcm9ncmVzc0JhciBmcm9tICdAL2NtcHMvcHJvZ3Jlc3MtYmFyJwppbXBvcnQgdGFza0xpc3QgZnJvbSAnLi90YXNrLWxpc3QudnVlJwppbXBvcnQgY29sb3JzTWVudSBmcm9tICcuL2NvbG9ycy1tZW51JwppbXBvcnQgeyBldmVudEJ1cyB9IGZyb20gJ0Avc2VydmljZXMvZXZlbnQtYnVzLnNlcnZpY2UnCgpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ2dyb3VwLXByZXZpZXcnLAogIHByb3BzOiB7CiAgICBncm91cDogT2JqZWN0LAogICAgZGVsZXRlR3JvdXA6IEZ1bmN0aW9uLAogIH0sCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGlzRXhwYW5kZWQ6IHRydWUsCiAgICAgIGdyb3VwQ29weTogbnVsbCwKICAgICAgaXNBY3Rpb25zU2hvd2VuOiBmYWxzZSwKICAgICAgaXNDb2xvcnNTaG93ZW46IGZhbHNlLAogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgYWRkTmV3VGFzaygpIHsKICAgICAgY29uc29sZS5sb2coJyoqKioqKioqKipBRERESU5HIE5FVyBUQVNLKioqKioqKicpCiAgICAgIGV2ZW50QnVzLiRlbWl0KCdhZGRFbXB0eVRhc2snLCB0aGlzLmdyb3VwQ29weS5pZCkKICAgIH0sCiAgICBmb2N1c0dyb3VwTmFtZSgpIHsKICAgICAgdGhpcy4kcmVmcy5ncm91cE5hbWUuZm9jdXMoKQogICAgICB0aGlzLmlzQWN0aW9uc1Nob3dlbiA9IGZhbHNlCiAgICB9LAogICAgZ2V0U3R5bGVTdHIoY29sb3JTdHIpIHsKICAgICAgcmV0dXJuIGBiYWNrZ3JvdW5kQ29sb3I6JHtjb2xvclN0cn1gCiAgICB9LAogICAgZHVwbGljYXRlR3JvdXAoKSB7CiAgICAgIHRoaXMuJGVtaXQoJ2R1cGxpY2F0ZUdyb3VwJywgdGhpcy5ncm91cENvcHkpCiAgICB9LAogICAgZW1pdEZvcmNlUmVuZGVyKCkgewogICAgICB0aGlzLiRlbWl0KCdlbWl0Rm9yY2VSZW5kZXInKQogICAgfSwKICAgIHRvZ2dsZUNvbG9yc01lbnUoKSB7CiAgICAgIHRoaXMuaXNDb2xvcnNTaG93ZW4gPSAhdGhpcy5pc0NvbG9yc1Nob3dlbgogICAgfSwKICAgIHRvZ2dsZUdyb3VwQWN0aW9ucygpIHsKICAgICAgdGhpcy5pc0FjdGlvbnNTaG93ZW4gPSAhdGhpcy5pc0FjdGlvbnNTaG93ZW4KICAgIH0sCiAgICBlbWl0RGVsZXRlKGdyb3VwSWQpIHsKICAgICAgdGhpcy4kZW1pdCgnZGVsZXRlR3JvdXAnLCBncm91cElkKQogICAgICB0aGlzLmlzRXhwYW5kZWQgPSBmYWxzZQogICAgfSwKICAgIHRvZ2dsZUdyb3VwKCkgewogICAgICB0aGlzLmlzRXhwYW5kZWQgPSAhdGhpcy5pc0V4cGFuZGVkCiAgICAgIHRoaXMuaXNBY3Rpb25zU2hvd2VuID0gZmFsc2UKICAgIH0sCiAgICBleHBhbmRHcm91cCgpIHsKICAgICAgdGhpcy5pc0V4cGFuZGVkID0gdHJ1ZQogICAgICB0aGlzLmlzQWN0aW9uc1Nob3dlbiA9IGZhbHNlCiAgICB9LAogICAgc2V0R3JvdXBDb2xvcihjb2xvcikgewogICAgICB0aGlzLmlzQWN0aW9uc1Nob3dlbiA9IGZhbHNlCiAgICAgIHRoaXMuZ3JvdXBDb3B5LmNvbG9yID0gY29sb3IKICAgICAgdGhpcy5pc0NvbG9yc1Nob3dlbiA9IGZhbHNlCiAgICAgIHRoaXMuJGVtaXQoJ3VwZGF0ZUdyb3VwJywgdGhpcy5ncm91cENvcHkpCiAgICB9LAogICAgdXBkYXRlR3JvdXBOYW1lKGV2KSB7CiAgICAgIHRoaXMuZ3JvdXBDb3B5Lm5hbWUgPSBldi50YXJnZXQuaW5uZXJUZXh0CiAgICAgIHRoaXMuJGVtaXQoJ3VwZGF0ZUdyb3VwJywgdGhpcy5ncm91cENvcHkpCiAgICB9LAoKICB9LAogIGNvbXB1dGVkOiB7CiAgICBwcm9ncmVzc0JhckRhdGEoKSB7CiAgICAgIGxldCBzdGF0dXNQZXJjZW50YWdlTWFwID0gdGhpcy5ncm91cC50YXNrcy5yZWR1Y2UoKGFjYywgdGFzaykgPT4geyAgICAgIAogICAgICAgIGlmICghYWNjW3Rhc2suc3RhdHVzLnR4dF0pIGFjY1t0YXNrLnN0YXR1cy50eHRdID0ge2NvdW50OjAsc3RhdHVzQ29sb3I6dGFzay5zdGF0dXMuY29sb3J9OwogICAgICAgIGFjY1t0YXNrLnN0YXR1cy50eHRdLmNvdW50KysKICAgICAgICByZXR1cm4gYWNjCiAgICAgIH0sIHt9KQogICAgICBjb25zdCB0b3RhbFN1bSA9IHRoaXMuZ3JvdXAudGFza3MubGVuZ3RoCiAgICAgIGZvciAobGV0IGtleSBpbiBzdGF0dXNQZXJjZW50YWdlTWFwKSB7CiAgICAgICAgc3RhdHVzUGVyY2VudGFnZU1hcFtrZXldLmZyYWN0aW9uID0gKGAke3N0YXR1c1BlcmNlbnRhZ2VNYXBba2V5XS5jb3VudH0gLyAke3RvdGFsU3VtfWApCiAgICAgICAgc3RhdHVzUGVyY2VudGFnZU1hcFtrZXldLnBlcmNlbnRhZ2UgPSAoc3RhdHVzUGVyY2VudGFnZU1hcFtrZXldLmNvdW50IC8gdG90YWxTdW0pICogMTAwCiAgICAgICAgc3RhdHVzUGVyY2VudGFnZU1hcFtrZXldLm5hbWUgPSBrZXk7CiAgICAgIH0KICAgICAgcmV0dXJuIHN0YXR1c1BlcmNlbnRhZ2VNYXAKICAgICAKICAgIH0sCiAgICAgICAgcHJvZ3Jlc3NCYXJQcmlvKCkgewogICAgICBsZXQgcHJpb3JpdHlQZXJjZW50YWdlTWFwID0gdGhpcy5ncm91cC50YXNrcy5yZWR1Y2UoKGFjYywgdGFzaykgPT4geyAgICAgIAogICAgICAgIGlmICghYWNjW3Rhc2sucHJpb3JpdHkudHh0XSkgYWNjW3Rhc2sucHJpb3JpdHkudHh0XSA9IHtjb3VudDowLHN0YXR1c0NvbG9yOnRhc2sucHJpb3JpdHkuY29sb3J9OwogICAgICAgIGFjY1t0YXNrLnByaW9yaXR5LnR4dF0uY291bnQrKwogICAgICAgIHJldHVybiBhY2MKICAgICAgfSwge30pCiAgICAgIGNvbnN0IHRvdGFsU3VtID0gdGhpcy5ncm91cC50YXNrcy5sZW5ndGgKICAgICAgZm9yIChsZXQga2V5IGluIHByaW9yaXR5UGVyY2VudGFnZU1hcCkgewogICAgICAgIHByaW9yaXR5UGVyY2VudGFnZU1hcFtrZXldLmZyYWN0aW9uID0gKGAke3ByaW9yaXR5UGVyY2VudGFnZU1hcFtrZXldLmNvdW50fSAvICR7dG90YWxTdW19YCkKICAgICAgICBwcmlvcml0eVBlcmNlbnRhZ2VNYXBba2V5XS5wZXJjZW50YWdlID0gKHByaW9yaXR5UGVyY2VudGFnZU1hcFtrZXldLmNvdW50IC8gdG90YWxTdW0pICogMTAwCiAgICAgICAgcHJpb3JpdHlQZXJjZW50YWdlTWFwW2tleV0ubmFtZSA9IGtleTsKICAgICAgfQogICAgICByZXR1cm4gcHJpb3JpdHlQZXJjZW50YWdlTWFwCiAgICAgCiAgICB9LAogICAgdGFza3NDb3VudCgpIHsKICAgICAgcmV0dXJuIGAke3RoaXMuZ3JvdXBDb3B5LnRhc2tzLmxlbmd0aH0gaXRlbXNgCiAgICB9LAogICAgZXhwYW5kZWQoKSB7CiAgICAgIHJldHVybiB0aGlzLmlzRXhwYW5kZWQgPyB0cnVlIDogZmFsc2UKICAgIH0sCiAgICBncm91cENvbG9yKCkgewogICAgICByZXR1cm4geyBjb2xvcjogdGhpcy5ncm91cENvcHkuY29sb3IgfQogICAgfSwKICB9LAogIGNyZWF0ZWQoKSB7CiAgICB0aGlzLmdyb3VwQ29weSA9IHRoaXMuZ3JvdXAKICB9LAogIGNvbXBvbmVudHM6IHsKICAgIHRhc2tMaXN0LAogICAgY29sb3JzTWVudSwKICAgIHByb2dyZXNzQmFyCiAgfSwKfQo="},{"version":3,"sources":["group-preview.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAufile":"group-preview.vue","sourceRoot":"src/cmps","sourcesContent":["<template>\n  <section>\n    <li\n      :class=\"{\n        'group-preview width100 flex space-between align-center': true,\n        expanded: expanded,\n      }\"\n      @click=\"expandGroup\"\n    >\n      <div class=\"group-actions-container flex relative align-center\">\n        <div class=\"expand-btn-container\">\n          <button\n            :style=\"getStyleStr(group.color)\"\n            class=\"expand-btn\"\n            @click.stop=\"toggleGroupActions\"\n          >\n            <i class=\"expand-arrow fas fa-arrow-down\"></i>\n          </button>\n        </div>\n        <h4\n          class=\"group-headers group-name editable\"\n          ref=\"groupName\"\n          :style=\"groupColor\"\n          @blur=\"updateGroupName\"\n          @keydown.enter=\"updateGroupName\"\n          contenteditable\n        >\n          {{ groupCopy.name }}\n        </h4>\n        <div class=\"flex column group-actions\" v-if=\"isActionsShowen\">\n          <div class=\"group-action flex align-center\" @click.stop=\"toggleGroup\">\n            <button  class=\"act-btn\">\n              <i class=\"fas fa-expand-alt fa-icon-act\"></i>\n            </button>\n            <span class=\"act-txt\">Expand</span>\n          </div>\n          <div\n            class=\"group-action flex align-center\"\n            @click.stop=\"addNewTask\"\n          >\n            <button class=\"act-btn\">\n              <i class=\"fas fa-plus\"></i>\n            </button>\n            <span class=\"act-txt\">New Task</span>\n          </div>\n          <div\n            class=\"group-action flex align-center\"\n            @click.stop=\"deleteGroup(groupCopy.id)\"\n          >\n            <button class=\"act-btn\">\n              <i class=\"fas fa-trash fa-icon-act\"></i>\n            </button>\n            <span class=\"act-txt\">Delete</span>\n          </div>\n          <div\n            class=\"group-action flex align-center\"\n            @click.stop=\"toggleColorsMenu\"\n          >\n            <button class=\"act-btn\">\n              <i class=\"fas fa-paint-brush fa-icon-act\"></i>\n            </button>\n            <span class=\"act-txt\">Change Color</span>\n          </div>\n          <div\n            class=\"group-action flex align-center\"\n            @click.stop=\"duplicateGroup\"\n          >\n            <button class=\"act-btn\">\n              <i class=\"far fa-copy fa-icon-act\"></i>\n            </button>\n            <span class=\"act-txt\">Duplicate</span>\n          </div>\n          <div\n            class=\"group-action flex align-center\"\n            @click.stop=\"focusGroupName\"\n          >\n            <button class=\"act-btn\">\n              <i class=\"far fa-edit fa-icon-act\"></i>\n            </button>\n            <span class=\"act-txt\">Change name</span>\n          </div>\n          <colors-menu v-if=\"isColorsShowen\" @setColor=\"setGroupColor\" />\n        </div>\n      </div>\n      <span v-if=\"!isExpanded\">{{ tasksCount }}</span>\n      <div v-if=\"isExpanded\" class=\"flex space-between align-center\">\n        <div class=\"group-headers headers flex\">\n          <h4 class=\"list-title\">Members</h4>\n          <h4 class=\"list-title\">Status</h4>\n          <h4 class=\"list-title\">Priority</h4>\n          <h4 class=\"list-title date\">Due Date</h4>\n        </div>\n      </div>\n      <task-list\n        :taskColor=\"group.color\"\n        v-if=\"isExpanded\"\n        :tasks=\"groupCopy.tasks\"\n        :groupId=\"groupCopy.id\"\n        @forceRender=\"emitForceRender\"\n      />\n<div class=\"progress-bar-section flex\">\n   <!-- <h2> -->\n<!-- {{progressBarPrio}} -->\n\n  <!-- </h2>  -->\n<progress-bar :progressBarData=\"progressBarData\" />\n\n<progress-bar :progressBarData=\"progressBarPrio\" />\n</div>\n    </li>\n    <div\n      class=\"back-drop-layer\"\n      v-if=\"isActionsShowen\"\n      @click=\"toggleGroupActions\"\n    ></div>\n  </section>\n</template>\n\n<script>\nimport progressBar from '@/cmps/progress-bar'\nimport taskList from './task-list.vue'\nimport colorsMenu from './colors-menu'\nimport { eventBus } from '@/services/event-bus.service'\n\nexport default {\n  name: 'group-preview',\n  props: {\n    group: Object,\n    deleteGroup: Function,\n  },\n  data() {\n    return {\n      isExpanded: true,\n      groupCopy: null,\n      isActionsShowen: false,\n      isColorsShowen: false,\n    }\n  },\n  methods: {\n    addNewTask() {\n      console.log('**********ADDDING NEW TASK*******')\n      eventBus.$emit('addEmptyTask', this.groupCopy.id)\n    },\n    focusGroupName() {\n      this.$refs.groupName.focus()\n      this.isActionsShowen = false\n    },\n    getStyleStr(colorStr) {\n      return `backgroundColor:${colorStr}`\n    },\n    duplicateGroup() {\n      this.$emit('duplicateGroup', this.groupCopy)\n    },\n    emitForceRender() {\n      this.$emit('emitForceRender')\n    },\n    toggleColorsMenu() {\n      this.isColorsShowen = !this.isColorsShowen\n    },\n    toggleGroupActions() {\n      this.isActionsShowen = !this.isActionsShowen\n    },\n    emitDelete(groupId) {\n      this.$emit('deleteGroup', groupId)\n      this.isExpanded = false\n    },\n    toggleGroup() {\n      this.isExpanded = !this.isExpanded\n      this.isActionsShowen = false\n    },\n    expandGroup() {\n      this.isExpanded = true\n      this.isActionsShowen = false\n    },\n    setGroupColor(color) {\n      this.isActionsShowen = false\n      this.groupCopy.color = color\n      this.isColorsShowen = false\n      this.$emit('updateGroup', this.groupCopy)\n    },\n    updateGroupName(ev) {\n      this.groupCopy.name = ev.target.innerText\n      this.$emit('updateGroup', this.groupCopy)\n    },\n\n  },\n  computed: {\n    progressBarData() {\n      let statusPercentageMap = this.group.tasks.reduce((acc, task) => {      \n        if (!acc[task.status.txt]) acc[task.status.txt] = {count:0,statusColor:task.status.color};\n        acc[task.status.txt].count++\n        return acc\n      }, {})\n      const totalSum = this.group.tasks.length\n      for (let key in statusPercentageMap) {\n        statusPercentageMap[key].fraction = (`${statusPercentageMap[key].count} / ${totalSum}`)\n        statusPercentageMap[key].percentage = (statusPercentageMap[key].count / totalSum) * 100\n        statusPercentageMap[key].name = key;\n      }\n      return statusPercentageMap\n     \n    },\n        progressBarPrio() {\n      let priorityPercentageMap = this.group.tasks.reduce((acc, task) => {      \n        if (!acc[task.priority.txt]) acc[task.priority.txt] = {count:0,statusColor:task.priority.color};\n        acc[task.priority.txt].count++\n        return acc\n      }, {})\n      const totalSum = this.group.tasks.length\n      for (let key in priorityPercentageMap) {\n        priorityPercentageMap[key].fraction = (`${priorityPercentageMap[key].count} / ${totalSum}`)\n        priorityPercentageMap[key].percentage = (priorityPercentageMap[key].count / totalSum) * 100\n        priorityPercentageMap[key].name = key;\n      }\n      return priorityPercentageMap\n     \n    },\n    tasksCount() {\n      return `${this.groupCopy.tasks.length} items`\n    },\n    expanded() {\n      return this.isExpanded ? true : false\n    },\n    groupColor() {\n      return { color: this.groupCopy.color }\n    },\n  },\n  created() {\n    this.groupCopy = this.group\n  },\n  components: {\n    taskList,\n    colorsMenu,\n    progressBar\n  },\n}\n</script>\n,\n"]}]}