{"remainingRequest":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/src/cmps/group-preview.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/src/cmps/group-preview.vue","mtime":1606601980935},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB0YXNrTGlzdCBmcm9tICcuL3Rhc2stbGlzdC52dWUnCmltcG9ydCBjb2xvcnNNZW51IGZyb20gJy4vY29sb3JzLW1lbnUnCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnZ3JvdXAtcHJldmlldycsCiAgcHJvcHM6IHsKICAgIGdyb3VwOiBPYmplY3QsCiAgICBkZWxldGVHcm91cDogRnVuY3Rpb24KICB9LAogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBpc0V4cGFuZGVkOiB0cnVlLAogICAgICBncm91cENvcHk6IG51bGwsCiAgICAgIGlzQWN0aW9uc1Nob3dlbjogZmFsc2UsCiAgICAgIGlzQ29sb3JzU2hvd2VuOiBmYWxzZQogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgZW1pdEZvcmNlUmVuZGVyKCkgewogICAgICB0aGlzLiRlbWl0KCdlbWl0Rm9yY2VSZW5kZXInKQogICAgfSwKICAgIHRvZ2dsZUNvbG9yc01lbnUoKSB7CiAgICAgIHRoaXMuaXNDb2xvcnNTaG93ZW4gPSAhdGhpcy5pc0NvbG9yc1Nob3dlbgogICAgfSwKICAgIHRvZ2dsZUdyb3VwQWN0aW9ucygpIHsKICAgICAgdGhpcy5pc0FjdGlvbnNTaG93ZW4gPSAhdGhpcy5pc0FjdGlvbnNTaG93ZW4KICAgIH0sCiAgICBlbWl0RGVsZXRlKGdyb3VwSWQpIHsKICAgICAgdGhpcy4kZW1pdCgnZGVsZXRlR3JvdXAnLCBncm91cElkKQogICAgfSwKICAgIHRvZ2dsZUdyb3VwKCkgewogICAgICB0aGlzLmlzRXhwYW5kZWQgPSAhdGhpcy5pc0V4cGFuZGVkCiAgICB9LAogICAgZXhwYW5kR3JvdXAoKSB7CiAgICAgIHRoaXMuaXNFeHBhbmRlZCA9IHRydWUKICAgIH0sCiAgICBzZXRHcm91cENvbG9yKGNvbG9yKSB7CiAgICAgIHRoaXMuZ3JvdXBDb3B5LmNvbG9yID0gY29sb3IKICAgICAgdGhpcy50b2dnbGVHcm91cEFjdGlvbnMoKQogICAgICB0aGlzLnRvZ2dsZUNvbG9yc01lbnUoKQogICAgICB0aGlzLiRlbWl0KCd1cGRhdGVHcm91cCcsIHRoaXMuZ3JvdXBDb3B5KQogICAgfSwKICAgIHVwZGF0ZUdyb3VwTmFtZShldikgewogICAgICBjb25zb2xlLmxvZyhldi50YXJnZXQuaW5uZXJUZXh0KQogICAgICB0aGlzLmdyb3VwQ29weS5uYW1lID0gZXYudGFyZ2V0LmlubmVyVGV4dAogICAgICB0aGlzLiRlbWl0KCd1cGRhdGVHcm91cCcsIHRoaXMuZ3JvdXBDb3B5KQogICAgfQogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIC8vIHNldEdyb3VwQ29sb3IoY29sb3IpIHsKICAgIC8vICAgcmV0dXJuIGBjb2xvcjoke2NvbG9yfWAKICAgIC8vIH0sCiAgICB0YXNrc0NvdW50KCkgewogICAgICByZXR1cm4gYCR7dGhpcy5ncm91cENvcHkudGFza3MubGVuZ3RofSBpdGVtc2AKICAgIH0sCiAgICBleHBhbmRlZCgpIHsKICAgICAgcmV0dXJuIHRoaXMuaXNFeHBhbmRlZCA/IHRydWUgOiBmYWxzZQogICAgfSwKICAgIGdyb3VwQ29sb3IoKSB7CiAgICAgIHJldHVybiB7IGNvbG9yOiB0aGlzLmdyb3VwQ29weS5jb2xvciB9CiAgICB9CiAgfSwKICBjcmVhdGVkKCkgewogICAgdGhpcy5ncm91cENvcHkgPSB0aGlzLmdyb3VwCiAgfSwKICBjb21wb25lbnRzOiB7CiAgICB0YXNrTGlzdCwKICAgIGNvbG9yc01lbnUKICB9Cn0K"},{"version":3,"sources":["group-preview.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"group-preview.vue","sourceRoot":"src/cmps","sourcesContent":["<template>\n  <li\n    :class=\"{\n      'group-preview width100 flex space-between align-center': true,\n      expanded: expanded\n    }\"\n    @click=\"expandGroup\"\n  >\n    <div class=\"flex\">\n      <div>\n        <button @click=\"toggleGroupActions\">\n          <i class=\"fas fa-arrow-down fa-icon\"></i>\n        </button>\n        <button class=\"expand-btn\" @click.stop=\"toggleGroup\">\n          <i\n            @click.stop=\"toggleGroup\"\n            class=\"fas fa-expand-arrows-alt fa-icon\"\n          ></i>\n        </button>\n        <div class=\"flex column group-actions\" v-if=\"isActionsShowen\">\n          <button @click.stop=\"deleteGroup(groupCopy.id)\">\n            <i class=\"fas fa-trash\"></i> Delete\n          </button>\n          <button @click=\"toggleColorsMenu\">\n            <i class=\"fas fa-paint-brush\"></i> Change color\n          </button>\n        </div>\n        <colors-menu v-if=\"isColorsShowen\" @setColor=\"setGroupColor\" />\n      </div>\n      <h4\n        class=\"group-headers group-name\"\n        :style=\"groupColor\"\n        @blur=\"updateGroupName\"\n        @keyup.enter=\"updateGroupName\"\n        contenteditable\n      >\n        {{ groupCopy.name }}\n      </h4>\n    </div>\n    <span v-if=\"!isExpanded\">{{ tasksCount }}</span>\n    <div v-if=\"isExpanded\" class=\"flex space-between align-center\">\n      <div class=\"group-headers headers flex\" :style=\"groupColor\">\n        <h4 class=\"list-title\">Members</h4>\n        <h4 class=\"list-title\">Status</h4>\n        <h4 class=\"list-title\">Priority</h4>\n        <h4 class=\"list-title date\">Due Date</h4>\n      </div>\n    </div>\n    <task-list\n      :taskColor=\"group.color\"\n      v-if=\"isExpanded\"\n      :tasks=\"groupCopy.tasks\"\n      :groupId=\"groupCopy.id\"\n      @forceRender=\"emitForceRender\"\n    />\n  </transition-group>\n  </li>\n</template>\n\n<script>\nimport taskList from './task-list.vue'\nimport colorsMenu from './colors-menu'\nexport default {\n  name: 'group-preview',\n  props: {\n    group: Object,\n    deleteGroup: Function\n  },\n  data() {\n    return {\n      isExpanded: true,\n      groupCopy: null,\n      isActionsShowen: false,\n      isColorsShowen: false\n    }\n  },\n  methods: {\n    emitForceRender() {\n      this.$emit('emitForceRender')\n    },\n    toggleColorsMenu() {\n      this.isColorsShowen = !this.isColorsShowen\n    },\n    toggleGroupActions() {\n      this.isActionsShowen = !this.isActionsShowen\n    },\n    emitDelete(groupId) {\n      this.$emit('deleteGroup', groupId)\n    },\n    toggleGroup() {\n      this.isExpanded = !this.isExpanded\n    },\n    expandGroup() {\n      this.isExpanded = true\n    },\n    setGroupColor(color) {\n      this.groupCopy.color = color\n      this.toggleGroupActions()\n      this.toggleColorsMenu()\n      this.$emit('updateGroup', this.groupCopy)\n    },\n    updateGroupName(ev) {\n      console.log(ev.target.innerText)\n      this.groupCopy.name = ev.target.innerText\n      this.$emit('updateGroup', this.groupCopy)\n    }\n  },\n  computed: {\n    // setGroupColor(color) {\n    //   return `color:${color}`\n    // },\n    tasksCount() {\n      return `${this.groupCopy.tasks.length} items`\n    },\n    expanded() {\n      return this.isExpanded ? true : false\n    },\n    groupColor() {\n      return { color: this.groupCopy.color }\n    }\n  },\n  created() {\n    this.groupCopy = this.group\n  },\n  components: {\n    taskList,\n    colorsMenu\n  }\n}\n</script>\n,\n"]}]}