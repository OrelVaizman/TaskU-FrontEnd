{"remainingRequest":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/src/cmps/label-picker.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/src/cmps/label-picker.vue","mtime":1607189330000},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmV4cG9ydCBkZWZhdWx0IHsKICBwcm9wczogewogICAgb3B0czogQXJyYXksCiAgICB0eXBlOiBTdHJpbmcKICB9LAogIG1ldGhvZHM6IHsKICAgIGdldFN0eWxlU3RyKGNvbG9yU3RyKSB7CiAgICAgIHJldHVybiBgYmFja2dyb3VuZENvbG9yOiR7Y29sb3JTdHJ9YAogICAgfSwKICAgIHVwZGF0ZVRhc2sob3B0KSB7CiAgICAgIGlmICh0aGlzLnR5cGUgPT09ICdzdGF0dXMnKSB0aGlzLnVwZGF0ZVRhc2tTdGF0dXMob3B0KQogICAgICBlbHNlIHRoaXMudXBkYXRlVGFza1ByaW9yaXR5KG9wdCkKICAgIH0sCiAgICB1cGRhdGVUYXNrU3RhdHVzKG9wdCkgewogICAgICB0aGlzLiRlbWl0KCd1cGRhdGVUYXNrU3RhdHVzJywgb3B0KQogICAgfSwKICAgIHVwZGF0ZVRhc2tQcmlvcml0eShvcHQpIHsKICAgICAgdGhpcy4kZW1pdCgndXBkYXRlVGFza1ByaW9yaXR5Jywgb3B0KQogICAgfQogIH0KfQo="},{"version":3,"sources":["label-picker.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAiBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"label-picker.vue","sourceRoot":"src/cmps","sourcesContent":["<template>\n  <section class=\"label-picker\" v-if=\"opts\">\n    <div\n      class=\"label-picker-opt flex align-center justify-center\"\n      v-for=\"(opt, idx) in opts\"\n      :key=\"idx\"\n      :style=\"getStyleStr(opt.color)\"\n      @click=\"updateTask(opt)\"\n    >\n      {{ opt.txt }}\n    </div>\n   \n\n  </section>\n</template>\n\n<script>\nexport default {\n  props: {\n    opts: Array,\n    type: String\n  },\n  methods: {\n    getStyleStr(colorStr) {\n      return `backgroundColor:${colorStr}`\n    },\n    updateTask(opt) {\n      if (this.type === 'status') this.updateTaskStatus(opt)\n      else this.updateTaskPriority(opt)\n    },\n    updateTaskStatus(opt) {\n      this.$emit('updateTaskStatus', opt)\n    },\n    updateTaskPriority(opt) {\n      this.$emit('updateTaskPriority', opt)\n    }\n  }\n}\n</script>\n"]}]}