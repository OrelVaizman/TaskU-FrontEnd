{"remainingRequest":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/src/cmps/notifications-modal.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/src/cmps/notifications-modal.vue","mtime":1607268614000},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBub3RpZnNGaWx0ZXJzIGZyb20gJy4vbm90aWZzLWZpbHRlcnMnCmltcG9ydCBub3RpZlByZXZpZXcgZnJvbSAnLi9ub3RpZi1wcmV2aWV3JwoKZXhwb3J0IGRlZmF1bHQgewogIGNvbXBvbmVudHM6IHsKICAgIG5vdGlmc0ZpbHRlcnMsCiAgICBub3RpZlByZXZpZXcKICB9LAogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBmaWx0ZXJCeTogbnVsbCwKICAgICAgbm90aWZzQ29weTogbnVsbAogICAgfQogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIGJvYXJkKCkgewogICAgICByZXR1cm4gdGhpcy4kc3RvcmUuZ2V0dGVycy5ib2FyZAogICAgfSwKICAgIG5vdGlmc1RvU2hvdygpIHsKICAgICAgcmV0dXJuIHRoaXMuJHN0b3JlLmdldHRlcnMudXNlci5ub3RpZmljYXRpb25zCiAgICAgIC8vIGxldCBub3RpZnMgPSB0aGlzLiRzdG9yZS5nZXR0ZXJzLnVzZXIubm90aWZpY2F0aW9ucwogICAgICAvLyBzd2l0Y2ggKHRoaXMuZmlsdGVyQnkpIHsKICAgICAgLy8gICBjYXNlICd1bnJlYWQnOgogICAgICAvLyAgICAgbm90aWZzID0gbm90aWZzLmZpbHRlcihub3RpZiA9PiBub3RpZi5pc1JlYWQgPT09IGZhbHNlKQogICAgICAvLyAgICAgYnJlYWsKICAgICAgLy8gICBjYXNlICdhc3NpZ25lZCc6CiAgICAgIC8vICAgICBub3RpZnMgPSBub3RpZnMuZmlsdGVyKG5vdGlmID0+IG5vdGlmLnR5cGUgPT09ICdhc3NpZ25lZCcpCiAgICAgIC8vICAgICBicmVhawogICAgICAvLyAgIGNhc2UgJ21lbnRpb25zJzoKICAgICAgLy8gICAgIG5vdGlmcyA9IFtdCiAgICAgIC8vICAgICBicmVhawogICAgICAvLyB9CiAgICAgIC8vIHJldHVybiBub3RpZnMKICAgIH0sCiAgICB1c2VyKCkgewogICAgICByZXR1cm4gdGhpcy4kc3RvcmUuZ2V0dGVycy51c2VyCiAgICB9CiAgfSwKICBtZXRob2RzOiB7CiAgICB1cGRhdGVOb3RpZihub3RpZikgewogICAgICBjb25zdCBpZHggPSB0aGlzLm5vdGlmc0NvcHkuZmluZEluZGV4KAogICAgICAgIGN1cnJOb3RpZiA9PiBjdXJyTm90aWYuaWQgPT09IG5vdGlmLmlkCiAgICAgICkKICAgICAgdGhpcy5ub3RpZnNDb3B5LnNwbGljZShpZHgsIDEsIG5vdGlmKQogICAgfSwKICAgIGRlbGV0ZU5vdGlmKG5vdGlmKSB7CiAgICAgIGNvbnN0IGlkeCA9IHRoaXMubm90aWZzQ29weS5maW5kSW5kZXgoCiAgICAgICAgY3Vyck5vdGlmID0+IGN1cnJOb3RpZi5pZCA9PT0gbm90aWYuaWQKICAgICAgKQogICAgICBjb25zb2xlLmxvZyhpZHgpCiAgICAgIGNvbnNvbGUubG9nKHRoaXMubm90aWZzQ29weS5sZW5ndGgpCiAgICAgIHRoaXMubm90aWZzQ29weS5zcGxpY2UoaWR4LCAxKQogICAgICBjb25zb2xlLmxvZyh0aGlzLm5vdGlmc0NvcHkubGVuZ3RoKQogICAgICB0aGlzLnVwZGF0ZU5vdGlmcygpCiAgICB9LAogICAgc2V0RmlsdGVyKGZpbHRlclN0cikgewogICAgICB0aGlzLmZpbHRlckJ5ID0gZmlsdGVyU3RyCiAgICAgIHRoaXMudXBkYXRlTm90aWZzKCkKICAgIH0sCiAgICB1cGRhdGVOb3RpZnMoKSB7CiAgICAgIHRoaXMudXNlci5ub3RpZmljYXRpb25zID0gdGhpcy5ub3RpZnNDb3B5CiAgICAgIHRoaXMuJHN0b3JlLmRpc3BhdGNoKHsKICAgICAgICB0eXBlOiAndXBkYXRlVXNlcicsCiAgICAgICAgdXNlcjogdGhpcy51c2VyCiAgICAgIH0pCiAgICB9CiAgfSwKICBkZXN0cm95ZWQoKSB7CiAgICB0aGlzLnVwZGF0ZU5vdGlmcygpCiAgfSwKICBjcmVhdGVkKCkgewogICAgdGhpcy5ub3RpZnNDb3B5ID0gdGhpcy4kc3RvcmUuZ2V0dGVycy51c2VyLm5vdGlmaWNhdGlvbnMKICB9Cn0K"},{"version":3,"sources":["notifications-modal.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAqBA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"notifications-modal.vue","sourceRoot":"src/cmps","sourcesContent":["<template>\n  <section class=\"notifications-modal\">\n    <header class=\"header-notifs\">\n      <h3 class=\"notifs-title\">Notifications</h3>\n      <notifs-filters :setFilter=\"setFilter\"></notifs-filters>\n    </header>\n    <ul v-if=\"notifsToShow.length\" class=\"notifs-list flex column\">\n      <notif-preview\n        v-for=\"(notif) in notifsToShow\"\n        :key=\"notif.id\"\n        :notif=\"notif\"\n        :user=\"user\"\n        :board=\"board\"\n        @updateNotif=\"updateNotif\"\n        @deleteNotif=\"deleteNotif\"\n      />\n    </ul>\n  </section>\n</template>\n\n<script>\nimport notifsFilters from './notifs-filters'\nimport notifPreview from './notif-preview'\n\nexport default {\n  components: {\n    notifsFilters,\n    notifPreview\n  },\n  data() {\n    return {\n      filterBy: null,\n      notifsCopy: null\n    }\n  },\n  computed: {\n    board() {\n      return this.$store.getters.board\n    },\n    notifsToShow() {\n      return this.$store.getters.user.notifications\n      // let notifs = this.$store.getters.user.notifications\n      // switch (this.filterBy) {\n      //   case 'unread':\n      //     notifs = notifs.filter(notif => notif.isRead === false)\n      //     break\n      //   case 'assigned':\n      //     notifs = notifs.filter(notif => notif.type === 'assigned')\n      //     break\n      //   case 'mentions':\n      //     notifs = []\n      //     break\n      // }\n      // return notifs\n    },\n    user() {\n      return this.$store.getters.user\n    }\n  },\n  methods: {\n    updateNotif(notif) {\n      const idx = this.notifsCopy.findIndex(\n        currNotif => currNotif.id === notif.id\n      )\n      this.notifsCopy.splice(idx, 1, notif)\n    },\n    deleteNotif(notif) {\n      const idx = this.notifsCopy.findIndex(\n        currNotif => currNotif.id === notif.id\n      )\n      console.log(idx)\n      console.log(this.notifsCopy.length)\n      this.notifsCopy.splice(idx, 1)\n      console.log(this.notifsCopy.length)\n      this.updateNotifs()\n    },\n    setFilter(filterStr) {\n      this.filterBy = filterStr\n      this.updateNotifs()\n    },\n    updateNotifs() {\n      this.user.notifications = this.notifsCopy\n      this.$store.dispatch({\n        type: 'updateUser',\n        user: this.user\n      })\n    }\n  },\n  destroyed() {\n    this.updateNotifs()\n  },\n  created() {\n    this.notifsCopy = this.$store.getters.user.notifications\n  }\n}\n</script>\n\n<style></style>\n"]}]}