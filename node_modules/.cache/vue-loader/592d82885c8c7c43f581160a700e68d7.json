{"remainingRequest":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/src/views/user-details.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/src/views/user-details.vue","mtime":1606565135497},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBBdmF0YXIgZnJvbSAndnVlLWF2YXRhcicKaW1wb3J0IGJvYXJkTGlzdCBmcm9tICdAL2NtcHMvYm9hcmQtbGlzdCcKaW1wb3J0IHtib2FyZFNlcnZpY2V9IGZyb20gJ0Avc2VydmljZXMvYm9hcmQuc2VydmljZScKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICd1c2VyLWRldGFpbHMnLAoKICBjb21wdXRlZDogewogICAgdXNlcigpIHsKICAgICAgcmV0dXJuIHRoaXMuJHN0b3JlLmdldHRlcnMudXNlcgogICAgfSwKICAgIGJvYXJkcygpewogICAgICByZXR1cm4gdGhpcy4kc3RvcmUuZ2V0dGVycy5ib2FyZHMKICAgIH0KICB9LAogIG1ldGhvZHM6ewogICAgICAgICAgICByZW1vdmVDdXJyQm9hcmQoYm9hcmRJZCkgewogICAgICAgICAgICB0aGlzLiRzdG9yZS5kaXNwYXRjaCh7IHR5cGU6ICdyZW1vdmVCb2FyZCcsIGJvYXJkSWQgfSkKICAgICAgICB9LAogICAgICAgIGFkZEJvYXJkKCkgewogICAgICAgICAgICBjb25zdCBib2FyZCA9IGJvYXJkU2VydmljZS5nZXRFbXB0eUJvYXJkKCkKICAgICAgICAgICAgdGhpcy4kc3RvcmUuZGlzcGF0Y2goeyB0eXBlOiAnc2F2ZUJvYXJkJywgYm9hcmQgfSkKICAgICAgICB9LAogIH0sCiAgY3JlYXRlZCgpIHsKICAgIGNvbnN0IHsgdXNlcklkIH0gPSB0aGlzLiRyb3V0ZS5wYXJhbXMKICAgIHRoaXMuJHN0b3JlLmRpc3BhdGNoKHsgdHlwZTogJ2xvYWRVc2VyJywgdXNlcklkIH0pCiAgfSwKICBjb21wb25lbnRzOiB7CiAgICBBdmF0YXIsCiAgICBib2FyZExpc3QKICB9LAp9Cg=="},{"version":3,"sources":["user-details.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyCA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"user-details.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <section v-if=\"user\" class=\"user-details flex column\">\n    <section\n      class=\"header-user-profile flex column justify-center align-center\"\n    >\n      <div class=\"img-profile\">\n        <avatar\n          class=\"profile-img\"\n          v-if=\"user\"\n          :username=\"user.fullName\"\n        ></avatar>\n      </div>\n\n      <h3 class=\"mail\">{{ user.email }}</h3>\n    </section>\n    <div class=\"msg-user flex justify-center align-center\">\n    <h2>Hello,{{ user.fullName }}</h2>\n\n    </div>\n    <section class=\"user-content flex space-around align-center\">\n      <div class=\"user-details-info flex column wrap align-center\">\n        <h2>Details</h2>\n        <h2><strong class=\"title-details\">Full name:</strong>{{ user.fullName }}</h2>\n        <h2><strong class=\"title-details\">Email:</strong>{{ user.email }}</h2>\n      </div>\n      <div class=\"list-board flex column wrap clean-list align-center\">\n          <board-list\n            @removeBoard=\"removeCurrBoard\"\n            @addNewBoard=\"addBoard\"\n            :boards=\"boards\" title=\"Your Board\"\n            class=\"list-board\"\n         />\n      </div>\n      <div class=\"left-task\">\n        <p>You have  left 4 tasks to compolete</p>\n      </div>\n    </section>\n  </section>\n</template>\n\n<script>\nimport Avatar from 'vue-avatar'\nimport boardList from '@/cmps/board-list'\nimport {boardService} from '@/services/board.service'\nexport default {\n  name: 'user-details',\n\n  computed: {\n    user() {\n      return this.$store.getters.user\n    },\n    boards(){\n      return this.$store.getters.boards\n    }\n  },\n  methods:{\n            removeCurrBoard(boardId) {\n            this.$store.dispatch({ type: 'removeBoard', boardId })\n        },\n        addBoard() {\n            const board = boardService.getEmptyBoard()\n            this.$store.dispatch({ type: 'saveBoard', board })\n        },\n  },\n  created() {\n    const { userId } = this.$route.params\n    this.$store.dispatch({ type: 'loadUser', userId })\n  },\n  components: {\n    Avatar,\n    boardList\n  },\n}\n</script>\n"]}]}