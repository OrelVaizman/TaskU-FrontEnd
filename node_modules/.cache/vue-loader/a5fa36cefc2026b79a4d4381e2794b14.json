{"remainingRequest":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/src/cmps/task-list.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/src/cmps/task-list.vue","mtime":1609778254054},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB0YXNrUHJldmlldyBmcm9tICcuL3Rhc2stcHJldmlldycKaW1wb3J0IHsgYm9hcmRTZXJ2aWNlIH0gZnJvbSAnQC9zZXJ2aWNlcy9ib2FyZC5zZXJ2aWNlJwppbXBvcnQgZHJhZ2dhYmxlIGZyb20gJ3Z1ZWRyYWdnYWJsZScKLy8gaW1wb3J0IHsgZXZlbnRCdXMgfSBmcm9tICdAL3NlcnZpY2VzL2V2ZW50LWJ1cy5zZXJ2aWNlJwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ3Rhc2stbGlzdCcsCiAgcHJvcHM6IHsKICAgIHRhc2tzOiBBcnJheSwKICAgIGdyb3VwSWQ6IFN0cmluZywKICAgIHRhc2tDb2xvcjogU3RyaW5nCiAgfSwKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgdHh0OiAnJywKICAgICAgaXNBZGRCdG5TaG93ZW46IGZhbHNlLAogICAgICBjbG9uZWRUYXNrczogbnVsbAogICAgfQogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIGJvYXJkKCkgewogICAgICByZXR1cm4gdGhpcy4kc3RvcmUuZ2V0dGVycy5ib2FyZAogICAgfSwKICAgIGRhdGEoKSB7CiAgICAgIHJldHVybiB7CiAgICAgICAgdHh0OiAnJywKICAgICAgICBpc0FkZEJ0blNob3dlbjogZmFsc2UsCiAgICAgICAgY2xvbmVkVGFza3M6IG51bGwKICAgICAgfQogICAgfSwKICAgIHRhc2tCZ2MoKSB7CiAgICAgIHJldHVybiB7IGJhY2tncm91bmRDb2xvcjogdGhpcy50YXNrQ29sb3IgfQogICAgfSwKICAgIHVzZXIoKSB7CiAgICAgIHJldHVybiB0aGlzLiRzdG9yZS5nZXR0ZXJzLnVzZXIKICAgIH0sCiAgICBtaW5pVXNlcigpIHsKICAgICAgcmV0dXJuIHRoaXMuJHN0b3JlLmdldHRlcnMubWluaVVzZXIKICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIGFkZEVtcHR5VGFzayhncm91cElkKSB7CiAgICAgIGlmICh0aGlzLmdyb3VwSWQgIT09IGdyb3VwSWQpIHsKICAgICAgICByZXR1cm4KICAgICAgfQogICAgICBjb25zdCBuZXdUYXNrID0gYm9hcmRTZXJ2aWNlLmdldEVtcHR5VGFzaygpCiAgICAgIGNvbnN0IGdyb3VwID0gdGhpcy5nZXRHcm91cEJ5SWQoKQogICAgICBjb25zdCB0eHQgPSBgJHt0aGlzLnVzZXIuZnVsbE5hbWV9IGFkZCBuZXcgdGFzayBpbiAke2dyb3VwLm5hbWV9YAogICAgICBsZXQgbmV3QWN0aXZpdHkgPSBib2FyZFNlcnZpY2UuZ2V0RW1wdHlBY3Rpdml0eSh0eHQsIHRoaXMubWluaVVzZXIpCiAgICAgIG5ld0FjdGl2aXR5Lmdyb3VwSWQgPSBncm91cElkCiAgICAgIHRoaXMuYm9hcmQuYWN0aXZpdGllcy51bnNoaWZ0KG5ld0FjdGl2aXR5KQogICAgICBncm91cC50YXNrcy5wdXNoKG5ld1Rhc2spCiAgICAgIHRoaXMuJHN0b3JlLmRpc3BhdGNoKHsKICAgICAgICB0eXBlOiAnc2F2ZUJvYXJkJywKICAgICAgICBib2FyZDogdGhpcy5ib2FyZAogICAgICB9KQogICAgICB0aGlzLiRub3RpZnkoewogICAgICAgIG1lc3NhZ2U6ICdOZXcgdGFzayBhZGRlZCcsCiAgICAgICAgcG9zaXRpb246ICdib3R0b20tbGVmdCcsCiAgICAgICAgZHVyYXRpb246IDIwMDAKICAgICAgfSkKICAgICAgdGhpcy4kZW1pdCgnZm9yY2VSZW5kZXInKQogICAgfSwKICAgIHNob3dBZGRCdG4oKSB7CiAgICAgIHRoaXMuaXNBZGRCdG5TaG93ZW4gPSB0cnVlCiAgICB9LAogICAgZ2V0R3JvdXBCeUlkKCkgewogICAgICBjb25zdCBpZHggPSB0aGlzLmJvYXJkLmdyb3Vwcy5maW5kSW5kZXgoCiAgICAgICAgZ3JvdXAgPT4gZ3JvdXAuaWQgPT09IHRoaXMuZ3JvdXBJZAogICAgICApCiAgICAgIHJldHVybiB0aGlzLmJvYXJkLmdyb3Vwc1tpZHhdCiAgICB9LAogICAgYWRkVGFzaygpIHsKICAgICAgY29uc3QgbmV3VGFzayA9IGJvYXJkU2VydmljZS5nZXRFbXB0eVRhc2soKQogICAgICBuZXdUYXNrLnR4dCA9IHRoaXMudHh0CiAgICAgIGNvbnN0IHR4dCA9IGBUYXNrICcke25ld1Rhc2sudHh0fScgYWRkZWRgCiAgICAgIGxldCBuZXdBY3Rpdml0eSA9IGJvYXJkU2VydmljZS5nZXRFbXB0eUFjdGl2aXR5KHR4dCwgdGhpcy5taW5pVXNlcikKICAgICAgbmV3QWN0aXZpdHkuZ3JvdXBJZCA9IHRoaXMuZ3JvdXBJZAogICAgICB0aGlzLmJvYXJkLmFjdGl2aXRpZXMudW5zaGlmdChuZXdBY3Rpdml0eSkKICAgICAgY29uc3QgZ3JvdXAgPSB0aGlzLmdldEdyb3VwQnlJZCgpCiAgICAgIGdyb3VwLnRhc2tzLnB1c2gobmV3VGFzaykKICAgICAgdGhpcy4kc3RvcmUuZGlzcGF0Y2goewogICAgICAgIHR5cGU6ICdzYXZlQm9hcmQnLAogICAgICAgIGJvYXJkOiB0aGlzLmJvYXJkCiAgICAgIH0pCiAgICAgIHRoaXMudHh0ID0gJycKICAgICAgdGhpcy5pc0FkZEJ0blNob3dlbiA9IGZhbHNlCiAgICAgIHRoaXMuJG5vdGlmeSh7CiAgICAgICAgbWVzc2FnZTogJ05ldyB0YXNrIGFkZGVkJywKICAgICAgICBwb3NpdGlvbjogJ2JvdHRvbS1sZWZ0JywKICAgICAgICBkdXJhdGlvbjogMjAwMAogICAgICB9KQogICAgICB0aGlzLiRlbWl0KCdmb3JjZVJlbmRlcicpCiAgICB9LAogICAgZGVsZXRlVGFzayh0YXNrSWQpIHsKICAgICAgY29uc3QgZ3JvdXAgPSB0aGlzLmdldEdyb3VwQnlJZCgpCiAgICAgIGNvbnN0IHRhc2tJZHggPSBncm91cC50YXNrcy5maW5kSW5kZXgodGFzayA9PiB0YXNrLmlkID09PSB0YXNrSWQpCiAgICAgIGdyb3VwLnRhc2tzLnNwbGljZSh0YXNrSWR4LCAxKQogICAgICBjb25zdCB0eHQgPSBgJHt0aGlzLnVzZXIuZnVsbE5hbWV9IHJlbW92ZSBhIHRhc2sgZnJvbSAke2dyb3VwLm5hbWV9YAogICAgICBsZXQgbmV3QWN0aXZpdHkgPSBib2FyZFNlcnZpY2UuZ2V0RW1wdHlBY3Rpdml0eSh0eHQsIHRoaXMubWluaVVzZXIpCiAgICAgIG5ld0FjdGl2aXR5Lmdyb3VwSWQgPSB0aGlzLmdyb3VwSWQKICAgICAgdGhpcy5ib2FyZC5hY3Rpdml0aWVzLnVuc2hpZnQobmV3QWN0aXZpdHkpCiAgICAgIHRoaXMuJHN0b3JlLmRpc3BhdGNoKHsKICAgICAgICB0eXBlOiAnc2F2ZUJvYXJkJywKICAgICAgICBib2FyZDogdGhpcy5ib2FyZAogICAgICB9KQogICAgICB0aGlzLiRub3RpZnkoewogICAgICAgIG1lc3NhZ2U6ICdUYXNrIHJlbW92ZWQnLAogICAgICAgIHBvc2l0aW9uOiAnYm90dG9tLWxlZnQnLAogICAgICAgIGR1cmF0aW9uOiAyMDAwCiAgICAgIH0pCiAgICAgIHRoaXMuJGVtaXQoJ2ZvcmNlUmVuZGVyJykKICAgIH0sCiAgICB1cGRhdGVUYXNrKG5ld1Rhc2ssIGFjdGl2aXR5KSB7CiAgICAgIGlmIChhY3Rpdml0eSkgewogICAgICAgIHRoaXMuYm9hcmQuYWN0aXZpdGllcy51bnNoaWZ0KGFjdGl2aXR5KQogICAgICB9CiAgICAgIGNvbnN0IGdyb3VwID0gdGhpcy5nZXRHcm91cEJ5SWQoKQogICAgICBjb25zdCB0YXNrSWR4ID0gZ3JvdXAudGFza3MuZmluZEluZGV4KHRhc2sgPT4gdGFzay5pZCA9PT0gbmV3VGFzay5pZCkKICAgICAgZ3JvdXAudGFza3Muc3BsaWNlKHRhc2tJZHgsIDEsIG5ld1Rhc2spCiAgICAgIHRoaXMuJHN0b3JlLmRpc3BhdGNoKHsKICAgICAgICB0eXBlOiAnc2F2ZUJvYXJkJywKICAgICAgICBib2FyZDogdGhpcy5ib2FyZAogICAgICB9KQogICAgICB0aGlzLiRlbWl0KCdmb3JjZVJlbmRlcicpCiAgICB9LAogICAgYXN5bmMgdXBkYXRlVGFza3MoKSB7CiAgICAgIGNvbnN0IGdyb3VwID0gdGhpcy5nZXRHcm91cEJ5SWQoKQogICAgICBncm91cC50YXNrcyA9IHRoaXMuY2xvbmVkVGFza3MKICAgICAgdGhpcy4kc3RvcmUuZGlzcGF0Y2goewogICAgICAgIHR5cGU6ICdzYXZlQm9hcmQnLAogICAgICAgIGJvYXJkOiB0aGlzLmJvYXJkCiAgICAgIH0pCiAgICAgIHRoaXMuJGVtaXQoJ2ZvcmNlUmVuZGVyJykKICAgIH0KICB9LAogIGNyZWF0ZWQoKSB7CiAgICB0aGlzLmNsb25lZFRhc2tzID0gSlNPTi5wYXJzZShKU09OLnN0cmluZ2lmeSh0aGlzLnRhc2tzKSkKICB9LAogIGNvbXBvbmVudHM6IHsKICAgIHRhc2tQcmV2aWV3LAogICAgZHJhZ2dhYmxlCiAgfQp9Cg=="},{"version":3,"sources":["task-list.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsfile":"task-list.vue","sourceRoot":"src/cmps","sourcesContent":["<template>\n  <section v-if=\"clonedTasks\" class=\"task-list-container width100\">\n    <ul class=\"task-list clean-list flex wrap align-center justify-center gap\">\n      <draggable\n        class=\"width100\"\n        :list=\"clonedTasks\"\n        group=\"tasks\"\n        @change=\"updateTasks\"\n      >\n        <task-preview\n          v-for=\"task in clonedTasks\"\n          :user=\"user\"\n          :taskColor=\"taskColor\"\n          :key=\"task.id\"\n          :task=\"task\"\n          :statuses=\"board.statuses\"\n          :priorities=\"board.priorities\"\n          :groupId=\"groupId\"\n          @deleteTask=\"deleteTask\"\n          @updateTask=\"updateTask\"\n          :boardMembers=\"board.members\"\n        />\n      </draggable>\n    </ul>\n    <form class=\"add-task-form flex\" @submit.prevent=\"addTask\">\n      <span class=\"task-color input-color\" :style=\"taskBgc\"></span>\n      <input\n        class=\"add-task-input\"\n        @focus=\"showAddBtn\"\n        v-model=\"txt\"\n        type=\"text\"\n        placeholder=\"+ Add Task\"\n      />\n      <button v-show=\"isAddBtnShowen\" type=\"submit\">Add</button>\n    </form>\n  </section>\n</template>\n<script>\nimport taskPreview from './task-preview'\nimport { boardService } from '@/services/board.service'\nimport draggable from 'vuedraggable'\n// import { eventBus } from '@/services/event-bus.service'\nexport default {\n  name: 'task-list',\n  props: {\n    tasks: Array,\n    groupId: String,\n    taskColor: String\n  },\n  data() {\n    return {\n      txt: '',\n      isAddBtnShowen: false,\n      clonedTasks: null\n    }\n  },\n  computed: {\n    board() {\n      return this.$store.getters.board\n    },\n    data() {\n      return {\n        txt: '',\n        isAddBtnShowen: false,\n        clonedTasks: null\n      }\n    },\n    taskBgc() {\n      return { backgroundColor: this.taskColor }\n    },\n    user() {\n      return this.$store.getters.user\n    },\n    miniUser() {\n      return this.$store.getters.miniUser\n    }\n  },\n  methods: {\n    addEmptyTask(groupId) {\n      if (this.groupId !== groupId) {\n        return\n      }\n      const newTask = boardService.getEmptyTask()\n      const group = this.getGroupById()\n      const txt = `${this.user.fullName} add new task in ${group.name}`\n      let newActivity = boardService.getEmptyActivity(txt, this.miniUser)\n      newActivity.groupId = groupId\n      this.board.activities.unshift(newActivity)\n      group.tasks.push(newTask)\n      this.$store.dispatch({\n        type: 'saveBoard',\n        board: this.board\n      })\n      this.$notify({\n        message: 'New task added',\n        position: 'bottom-left',\n        duration: 2000\n      })\n      this.$emit('forceRender')\n    },\n    showAddBtn() {\n      this.isAddBtnShowen = true\n    },\n    getGroupById() {\n      const idx = this.board.groups.findIndex(\n        group => group.id === this.groupId\n      )\n      return this.board.groups[idx]\n    },\n    addTask() {\n      const newTask = boardService.getEmptyTask()\n      newTask.txt = this.txt\n      const txt = `Task '${newTask.txt}' added`\n      let newActivity = boardService.getEmptyActivity(txt, this.miniUser)\n      newActivity.groupId = this.groupId\n      this.board.activities.unshift(newActivity)\n      const group = this.getGroupById()\n      group.tasks.push(newTask)\n      this.$store.dispatch({\n        type: 'saveBoard',\n        board: this.board\n      })\n      this.txt = ''\n      this.isAddBtnShowen = false\n      this.$notify({\n        message: 'New task added',\n        position: 'bottom-left',\n        duration: 2000\n      })\n      this.$emit('forceRender')\n    },\n    deleteTask(taskId) {\n      const group = this.getGroupById()\n      const taskIdx = group.tasks.findIndex(task => task.id === taskId)\n      group.tasks.splice(taskIdx, 1)\n      const txt = `${this.user.fullName} remove a task from ${group.name}`\n      let newActivity = boardService.getEmptyActivity(txt, this.miniUser)\n      newActivity.groupId = this.groupId\n      this.board.activities.unshift(newActivity)\n      this.$store.dispatch({\n        type: 'saveBoard',\n        board: this.board\n      })\n      this.$notify({\n        message: 'Task removed',\n        position: 'bottom-left',\n        duration: 2000\n      })\n      this.$emit('forceRender')\n    },\n    updateTask(newTask, activity) {\n      if (activity) {\n        this.board.activities.unshift(activity)\n      }\n      const group = this.getGroupById()\n      const taskIdx = group.tasks.findIndex(task => task.id === newTask.id)\n      group.tasks.splice(taskIdx, 1, newTask)\n      this.$store.dispatch({\n        type: 'saveBoard',\n        board: this.board\n      })\n      this.$emit('forceRender')\n    },\n    async updateTasks() {\n      const group = this.getGroupById()\n      group.tasks = this.clonedTasks\n      this.$store.dispatch({\n        type: 'saveBoard',\n        board: this.board\n      })\n      this.$emit('forceRender')\n    }\n  },\n  created() {\n    this.clonedTasks = JSON.parse(JSON.stringify(this.tasks))\n  },\n  components: {\n    taskPreview,\n    draggable\n  }\n}\n</script>\n"]}]}