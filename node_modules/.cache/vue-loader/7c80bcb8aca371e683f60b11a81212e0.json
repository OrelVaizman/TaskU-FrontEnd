{"remainingRequest":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/src/views/board-app.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/src/views/board-app.vue","mtime":1607364413951},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IGV2ZW50QnVzIH0gZnJvbSAnQC9zZXJ2aWNlcy9ldmVudC1idXMuc2VydmljZScKaW1wb3J0IGNoYXRBcHAgZnJvbSAnQC9jbXBzL2JvYXJkLWNoYXQnCmltcG9ydCBncm91cExpc3QgZnJvbSAnQC9jbXBzL2dyb3VwLWxpc3QnCmltcG9ydCBib2FyZExpc3QgZnJvbSAnQC9jbXBzL2JvYXJkLWxpc3QudnVlJwppbXBvcnQgeyBib2FyZFNlcnZpY2UgfSBmcm9tICdAL3NlcnZpY2VzL2JvYXJkLnNlcnZpY2UnCmltcG9ydCBib2FyZFNlYXJjaCBmcm9tICdAL2NtcHMvYm9hcmQtc2VhcmNoJwppbXBvcnQgeyB1dGlsU2VydmljZSB9IGZyb20gJ0Avc2VydmljZXMvdXRpbC5zZXJ2aWNlJwppbXBvcnQgYm9hcmRIZWFkZXIgZnJvbSAnLi4vY21wcy9ib2FyZC1oZWFkZXIudnVlJwovLyBpbXBvcnQgeyBzb2NrZXRTZXJ2aWNlIH0gZnJvbSAnQC9zZXJ2aWNlcy9zb2NrZXQuc2VydmljZS5qcycKaW1wb3J0IHRyZWxsb01vZGUgZnJvbSAnQC9jbXBzL1RyZWxsby90cmVsbG8tbW9kZScKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdib2FyZC1hcHAnLAogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBpc0NoYXRpbmdCdG5TaG93bjogdHJ1ZSwKICAgICAgaXNDaGF0aW5nOiBmYWxzZSwKICAgICAgaXNMaXN0RXhwYW5kZWQ6IHRydWUsCiAgICAgIGlzTWVtYmVyc1Nob3dlbjogZmFsc2UsCiAgICAgIGN1cnJUYXNrRGV0YWlsczogbnVsbCwKICAgICAgaXNUYXNrRGV0YWlsc0hvdmVyOiBmYWxzZSwKICAgICAgY29tcG9uZW50S2V5OiAwCiAgICB9CiAgfSwKICBjb21wdXRlZDogewogICAgLy8gTk9UICBSRU1PVkUgVEhJUyBGVU5DICEhISEhISEhISEKICAgIGRhcmtNb2RlKCkgewogICAgICByZXR1cm4gdGhpcy4kc3RvcmUuZ2V0dGVycy5nZXREYXJrTW9kZVRvZ2dsZQogICAgfSwKICAgIGRpc3BsYXlNb2RlKCkgewogICAgICByZXR1cm4gdGhpcy4kc3RvcmUuZ2V0dGVycy5kaXNwbGF5TW9kZQogICAgfSwKICAgIGJ0bkNsYXNzRXhwZW5kKCkgewogICAgICByZXR1cm4gdGhpcy5pc0xpc3RFeHBhbmRlZAogICAgICAgID8gJ2V4cGVuZC1idG4gZmFzIGZhLWNoZXZyb24tbGVmdCcKICAgICAgICA6ICdleHBlbmQtYnRuIGZhcyBmYS1jaGV2cm9uLXJpZ2h0JwogICAgfSwKICAgIGNoYXRDb250cm9sKCkgewogICAgICByZXR1cm4gdGhpcy5pc0NoYXRpbmdCdG5TaG93biA/ICdIaWRlIENoYXQnIDogJ1Nob3cgQ2hhdCcKICAgIH0sCiAgICB1c2VyKCkgewogICAgICByZXR1cm4gdGhpcy4kc3RvcmUuZ2V0dGVycy51c2VyCiAgICB9LAogICAgbWluaVVzZXIoKXsKICAgICAgcmV0dXJuIHRoaXMuJHN0b3JlLmdldHRlcnMubWluaVVzZXIKICAgIH0sCiAgICBib2FyZCgpIHsKICAgICAgcmV0dXJuIHRoaXMuJHN0b3JlLmdldHRlcnMuYm9hcmQKICAgIH0sCiAgICBib2FyZHMoKSB7CiAgICAgIHJldHVybiB0aGlzLiRzdG9yZS5nZXR0ZXJzLmJvYXJkcwogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgc2V0RGlzcGxheU1vZGUoZGlzcGxheU1vZGUpIHsKICAgICAgdGhpcy4kc3RvcmUuY29tbWl0KHsgdHlwZTogJ3NldERpc3BsYXlNb2RlJywgZGlzcGxheU1vZGUgfSkKICAgIH0sCiAgICB0b29nbGVDaGF0QnRuKCkgewogICAgICB0aGlzLmlzQ2hhdGluZ0J0blNob3duID0gIXRoaXMuaXNDaGF0aW5nQnRuU2hvd24KICAgIH0sCiAgICBleHBhbmRMaXN0KCkgewogICAgICB0aGlzLmlzTGlzdEV4cGFuZGVkID0gdHJ1ZQogICAgfSwKICAgIHRvZ2dsZUV4cGFuZExpc3QoKSB7CiAgICAgIHRoaXMuaXNMaXN0RXhwYW5kZWQgPSAhdGhpcy5pc0xpc3RFeHBhbmRlZAogICAgfSwKICAgIHRvZ2dsZUNoYXQoKSB7CiAgICAgIHRoaXMuaXNDaGF0aW5nID0gIXRoaXMuaXNDaGF0aW5nCiAgICB9LAogICAgZHVwbGljYXRlR3JvdXAoZ3JvdXApIHsKICAgICAgZ3JvdXAuaWQgPSB1dGlsU2VydmljZS5tYWtlSWQoKQogICAgICB0aGlzLmJvYXJkLmdyb3Vwcy5wdXNoKGdyb3VwKQogICAgICBjb25zdCB0eHQgPSBgJHt0aGlzLnVzZXIuZnVsbE5hbWV9IGR1cGxpY2F0ZWQgZ3JvdXAgdGhlIGdyb3VwICR7Z3JvdXAubmFtZX0gYAogICAgICBsZXQgbmV3QWN0aXZpdHkgPSBib2FyZFNlcnZpY2UuZ2V0RW1wdHlBY3Rpdml0eSh0eHQsIHRoaXMubWluaVVzZXIpCiAgICAgIHRoaXMuYm9hcmQuYWN0aXZpdGllcy5wdXNoKG5ld0FjdGl2aXR5KQogICAgICB0aGlzLiRzdG9yZS5kaXNwYXRjaCh7IHR5cGU6ICdzYXZlQm9hcmQnLCBib2FyZDogdGhpcy5ib2FyZCB9KQogICAgICB0aGlzLiRzdG9yZS5kaXNwYXRjaCh7IHR5cGU6ICd1cGRhdGVCb2FyZCcsIGJvYXJkOiB0aGlzLmJvYXJkIH0pCiAgICAgIHRoaXMuZm9yY2VSZXJlbmRlcigpCiAgICB9LAogICAgdXBkYXRlQm9hcmROYW1lKGV2KSB7CiAgICAgIGV2LnRhcmdldC5ibHVyKCkKICAgICAgaWYgKGV2LnRhcmdldC5pbm5lclRleHQgPT09IHRoaXMuYm9hcmQubmFtZSkgcmV0dXJuCiAgICAgIGVsc2UgewogICAgICAgIHRoaXMuYm9hcmQubmFtZSA9IGV2LnRhcmdldC5pbm5lclRleHQKICAgICAgICBjb25zdCB0eHQgPSBgJHt0aGlzLnVzZXIuZnVsbE5hbWV9IHVwZGF0ZSBCb2FyZCBuYW1lYAogICAgICAgIGxldCBuZXdBY3Rpdml0eSA9IGJvYXJkU2VydmljZS5nZXRFbXB0eUFjdGl2aXR5KHR4dCwgdGhpcy5taW5pVXNlcikKICAgICAgICB0aGlzLmJvYXJkLmFjdGl2aXRpZXMucHVzaChuZXdBY3Rpdml0eSkKICAgICAgICB0aGlzLiRzdG9yZS5kaXNwYXRjaCh7IHR5cGU6ICdzYXZlQm9hcmQnLCBib2FyZDogdGhpcy5ib2FyZCB9KQogICAgICAgIHRoaXMuJHN0b3JlLmRpc3BhdGNoKHsgdHlwZTogJ3VwZGF0ZUJvYXJkJywgYm9hcmQ6IHRoaXMuYm9hcmQgfSkKICAgICAgICB0aGlzLiRub3RpZnkoewogICAgICAgICAgbWVzc2FnZTogJ0JvYXJkIG5hbWUgdXBkYXRlZCcsCiAgICAgICAgICBwb3NpdGlvbjogJ2JvdHRvbS1sZWZ0JywKICAgICAgICAgIGR1cmF0aW9uOiAyMDAwCiAgICAgICAgfSkKICAgICAgICB0aGlzLmZvcmNlUmVyZW5kZXIoKQogICAgICB9CiAgICB9LAogICAgdXBkYXRlQm9hcmREZXNjKGV2KSB7CiAgICAgIGV2LnRhcmdldC5ibHVyKCkKICAgICAgaWYgKGV2LnRhcmdldC5pbm5lclRleHQgPT09IHRoaXMuYm9hcmQuZGVzY3JpcHRpb24pIHJldHVybgogICAgICBlbHNlIHsKICAgICAgICB0aGlzLmJvYXJkLmRlc2NyaXB0aW9uID0gZXYudGFyZ2V0LmlubmVyVGV4dAogICAgICAgIGNvbnN0IHR4dCA9IGAke3RoaXMudXNlci5mdWxsTmFtZX0gdXBkYXRlIEJvYXJkIGRlc2NyaXB0aW9uYAogICAgICAgIGxldCBuZXdBY3Rpdml0eSA9IGJvYXJkU2VydmljZS5nZXRFbXB0eUFjdGl2aXR5KHR4dCwgdGhpcy5taW5pVXNlcikKICAgICAgICB0aGlzLmJvYXJkLmFjdGl2aXRpZXMucHVzaChuZXdBY3Rpdml0eSkKICAgICAgICB0aGlzLiRzdG9yZS5kaXNwYXRjaCh7IHR5cGU6ICdzYXZlQm9hcmQnLCBib2FyZDogdGhpcy5ib2FyZCB9KQogICAgICAgIHRoaXMuJG5vdGlmeSh7CiAgICAgICAgICBtZXNzYWdlOiAnQm9hcmQgZGVzY3JpcHRpb24gdXBkYXRlZCcsCiAgICAgICAgICBwb3NpdGlvbjogJ2JvdHRvbS1sZWZ0JywKICAgICAgICAgIGR1cmF0aW9uOiAyMDAwCiAgICAgICAgfSkKICAgICAgICB0aGlzLmZvcmNlUmVyZW5kZXIoKQogICAgICB9CiAgICB9LAogICAgZm9yY2VSZXJlbmRlcigpIHsKICAgICAgdGhpcy5jb21wb25lbnRLZXkgKz0gMQogICAgfSwKICAgIGFkZEJvYXJkTWVtYmVyKHVzZXIpIHsKICAgICAgdGhpcy5ib2FyZC5tZW1iZXJzLnVuc2hpZnQodXNlcikKICAgICAgY29uc3QgdHh0ID0gYCR7dGhpcy51c2VyLmZ1bGxOYW1lfSBhZGQgJHt1c2VyLmZ1bGxOYW1lfSB0byBCb2FyZGAKICAgICAgbGV0IG5ld0FjdGl2aXR5ID0gYm9hcmRTZXJ2aWNlLmdldEVtcHR5QWN0aXZpdHkodHh0LCB0aGlzLm1pbmlVc2VyKQogICAgICB0aGlzLmJvYXJkLmFjdGl2aXRpZXMucHVzaChuZXdBY3Rpdml0eSkKICAgICAgdGhpcy4kc3RvcmUuZGlzcGF0Y2goeyB0eXBlOiAnc2F2ZUJvYXJkJywgYm9hcmQ6IHRoaXMuYm9hcmQgfSkKICAgICAgdGhpcy4kbm90aWZ5KHsKICAgICAgICBtZXNzYWdlOiAnTmV3IG1lbWJlciBhZGRlZCB0byBib2FyZCcsCiAgICAgICAgcG9zaXRpb246ICdib3R0b20tbGVmdCcsCiAgICAgICAgZHVyYXRpb246IDIwMDAKICAgICAgfSkKICAgIH0sCiAgICByZW1vdmVCb2FyZE1lbWJlcihtZW1iZXIpIHsKICAgICAgY29uc3QgaWR4ID0gdGhpcy5ib2FyZC5tZW1iZXJzLmZpbmRJbmRleCgKICAgICAgICBiTWVtYmVyID0+IGJNZW1iZXIuX2lkID09PSBtZW1iZXIuX2lkCiAgICAgICkKICAgICAgdGhpcy5ib2FyZC5tZW1iZXJzLnNwbGljZShpZHgsIDEpCiAgICAgIGNvbnN0IHR4dCA9IGAke3RoaXMudXNlci5mdWxsTmFtZX0gcmVtb3ZlICAke21lbWJlci5mdWxsTmFtZX0gZnJvbSBCb2FyZGAKICAgICAgbGV0IG5ld0FjdGl2aXR5ID0gYm9hcmRTZXJ2aWNlLmdldEVtcHR5QWN0aXZpdHkodHh0LCB0aGlzLm1pbmlVc2VyKQogICAgICB0aGlzLmJvYXJkLmFjdGl2aXRpZXMucHVzaChuZXdBY3Rpdml0eSkKICAgICAgdGhpcy4kc3RvcmUuZGlzcGF0Y2goeyB0eXBlOiAnc2F2ZUJvYXJkJywgYm9hcmQ6IHRoaXMuYm9hcmQgfSkKICAgICAgdGhpcy4kbm90aWZ5KHsKICAgICAgICBtZXNzYWdlOiAnTWVtYmVyIHJlbW92ZWQgZnJvbSBib2FyZCcsCiAgICAgICAgcG9zaXRpb246ICdib3R0b20tbGVmdCcsCiAgICAgICAgZHVyYXRpb246IDIwMDAKICAgICAgfSkKICAgIH0sCiAgICBzZXRTZWFyY2goc2VhcmNoQm9hcmQpIHsKICAgICAgdGhpcy4kc3RvcmUuY29tbWl0KHsgdHlwZTogJ3NldFNlYXJjaCcsIHNlYXJjaEJvYXJkIH0pCiAgICAgIHRoaXMuJHN0b3JlLmRpc3BhdGNoKHsgdHlwZTogJ2xvYWRCb2FyZHMnIH0pCiAgICB9LAogICAgYXN5bmMgcmVtb3ZlQ3VyckJvYXJkKGJvYXJkSWQpIHsKICAgICAgdHJ5IHsKICAgICAgICBjb25zdCBib2FyZCA9IGJvYXJkU2VydmljZS5nZXRCeUlkKCkKICAgICAgICBpZiAoYm9hcmQuY3JlYXRvci5faWQgIT09IHRoaXMudXNlcl9pZCkgewogICAgICAgICAgcmV0dXJuCiAgICAgICAgfQogICAgICAgIGF3YWl0IHRoaXMuJGNvbmZpcm0oCiAgICAgICAgICAnVGhpcyB3aWxsIHBlcm1hbmVudGx5IGRlbGV0ZSB0aGUgYm9hcmQuIENvbnRpbnVlPycsCiAgICAgICAgICAnV2FybmluZycsCiAgICAgICAgICB7CiAgICAgICAgICAgIGNvbmZpcm1CdXR0b25UZXh0OiAnT0snLAogICAgICAgICAgICBjYW5jZWxCdXR0b25UZXh0OiAnQ2FuY2VsJywKICAgICAgICAgICAgdHlwZTogJ3dhcm5pbmcnCiAgICAgICAgICB9CiAgICAgICAgKQogICAgICAgIGNvbnN0IHR4dCA9IGAke3RoaXMudXNlci5mdWxsTmFtZX0gcmVtb3ZlIEJvYXJkYAogICAgICAgIGxldCBuZXdBY3Rpdml0eSA9IGJvYXJkU2VydmljZS5nZXRFbXB0eUFjdGl2aXR5KHR4dCwgdGhpcy5taW5pVXNlcikKICAgICAgICB0aGlzLmJvYXJkLmFjdGl2aXRpZXMucHVzaChuZXdBY3Rpdml0eSkKICAgICAgICB0aGlzLiRzdG9yZS5kaXNwYXRjaCh7IHR5cGU6ICdyZW1vdmVCb2FyZCcsIGJvYXJkSWQgfSkKICAgICAgICB0aGlzLiRzdG9yZS5kaXNwYXRjaCh7CiAgICAgICAgICB0eXBlOiAnbG9hZEFsbEJvYXJkcycsCiAgICAgICAgICBib2FyZHM6IHRoaXMuYm9hcmRzCiAgICAgICAgfSkKICAgICAgICB0aGlzLiRub3RpZnkoewogICAgICAgICAgbWVzc2FnZTogJ0JvYXJkIGRlbGV0ZWQnLAogICAgICAgICAgcG9zaXRpb246ICdib3R0b20tbGVmdCcsCiAgICAgICAgICBkdXJhdGlvbjogMjAwMAogICAgICAgIH0pCiAgICAgICAgdGhpcy4kbWVzc2FnZSh7CiAgICAgICAgICB0eXBlOiAnc3VjY2VzcycsCiAgICAgICAgICBtZXNzYWdlOiAnRGVsZXRlIGNvbXBsZXRlZCcKICAgICAgICB9KQogICAgICB9IGNhdGNoIChlcnIpIHsKICAgICAgICAgIHRoaXMuJG1lc3NhZ2UoewogICAgICAgICAgICBkdXJ0aW9uOiAyMDAwLAogICAgICAgICAgICBzaG93Q2xvc2U6IHRydWUsCiAgICAgICAgICAgIHR5cGU6ICdlcnJvcicsCiAgICAgICAgICAgIG9mZnNldDogMzM1LAogICAgICAgICAgICBtZXNzYWdlOiAnT25seSB0aGUgY3JlYXRvciBjYW4gZGVsZXRlIHRoZSBib2FyZCEnCiAgICAgICAgICB9KQogICAgICB9CiAgICB9LAogICAgbG9hZEJvYXJkcygpIHsKICAgICAgdGhpcy4kc3RvcmUuZGlzcGF0Y2goeyB0eXBlOiAnbG9hZEJvYXJkcycgfSkKICAgICAgdGhpcy5mb3JjZVJlcmVuZGVyKCkKICAgIH0sCiAgICBhc3luYyBhZGRCb2FyZCgpIHsKICAgICAgdHJ5IHsKICAgICAgICBjb25zdCByZXMgPSBhd2FpdCB0aGlzLiRwcm9tcHQoCiAgICAgICAgICAnUGxlYXNlIGVudGVyIGEgbmFtZSB0byB5b3VyIGJvYXJkJywKICAgICAgICAgICdBZGQgTmV3IEJvYXJkJywKICAgICAgICAgIHsKICAgICAgICAgICAgY29uZmlybUJ1dHRvblRleHQ6ICdPSycsCiAgICAgICAgICAgIGNhbmNlbEJ1dHRvblRleHQ6ICdDYW5jZWwnCiAgICAgICAgICB9CiAgICAgICAgKQogICAgICAgIGNvbnN0IGJvYXJkID0gYm9hcmRTZXJ2aWNlLmdldEVtcHR5Qm9hcmQoKQogICAgICAgIGJvYXJkLm5hbWUgPSByZXMudmFsdWUKICAgICAgICBib2FyZC5jcmVhdG9yID0gdGhpcy5taW5pVXNlcgogICAgICAgIGJvYXJkLm1lbWJlcnMucHVzaCh0aGlzLm1pbmlVc2VyKQogICAgICAgIGNvbnN0IHR4dCA9IGAke3RoaXMubWluaVVzZXIuZnVsbE5hbWV9IGNyZWF0ZSB0aGlzIEJvYXJkYAogICAgICAgIGxldCBuZXdBY3Rpdml0eSA9IGJvYXJkU2VydmljZS5nZXRFbXB0eUFjdGl2aXR5KHR4dCwgdGhpcy5taW5pVXNlcikKICAgICAgICB0aGlzLmJvYXJkLmFjdGl2aXRpZXMucHVzaChuZXdBY3Rpdml0eSkKICAgICAgICB0aGlzLiRzdG9yZS5kaXNwYXRjaCh7IHR5cGU6ICdzYXZlQm9hcmQnLCBib2FyZCB9KQogICAgICAgIHRoaXMuJG1lc3NhZ2UoewogICAgICAgICAgdHlwZTogJ3N1Y2Nlc3MnLAogICAgICAgICAgZHVyYXRpb246IDI1MDAsCiAgICAgICAgICBtZXNzYWdlOiAnWW91ciBCb2FyZDonICsgcmVzLnZhbHVlICsgJyBhZGQgJwogICAgICAgIH0pCiAgICAgIH0gY2F0Y2ggKGVycikgewogICAgICAgIHRoaXMuJG1lc3NhZ2UoewogICAgICAgICAgdHlwZTogJ2luZm8nLAogICAgICAgICAgZHVyYXRpb246IDI1MDAsCiAgICAgICAgICBtZXNzYWdlOiAnWW91ciBhY3Rpb24gY2FuY2VsZWQnCiAgICAgICAgfSkKICAgICAgfQogICAgfSwKICAgIGFzeW5jIGxvYWRCb2FyZCgpIHsKICAgICAgdHJ5IHsKICAgICAgICBhd2FpdCB0aGlzLiRzdG9yZS5kaXNwYXRjaCh7CiAgICAgICAgICB0eXBlOiAnbG9hZEJvYXJkJywKICAgICAgICAgIGJvYXJkSWQ6IHRoaXMuJHJvdXRlLnBhcmFtcy5ib2FyZElkCiAgICAgICAgfSkKICAgICAgfSBjYXRjaCAoZSkgewogICAgICAgIGNvbnNvbGUubG9nKCdFcm9yb3JvciEhJykKICAgICAgfQogICAgfSwKICAgIGFkZEdyb3VwKCkgewogICAgICBjb25zdCBuZXdHcm91cCA9IGJvYXJkU2VydmljZS5nZXRFbXB0eUdyb3VwKCkKICAgICAgdGhpcy5ib2FyZC5ncm91cHMucHVzaChuZXdHcm91cCkKICAgICAgY29uc3QgdHh0ID0gYCR7dGhpcy51c2VyLmZ1bGxOYW1lfSBoYXMgYWRkZWQgYSBuZXcgZ3JvdXAhYAogICAgICBsZXQgbmV3QWN0aXZpdHkgPSBib2FyZFNlcnZpY2UuZ2V0RW1wdHlBY3Rpdml0eSh0eHQsIHRoaXMubWluaVVzZXIpCiAgICAgIHRoaXMuYm9hcmQuYWN0aXZpdGllcy5wdXNoKG5ld0FjdGl2aXR5KQogICAgICB0aGlzLiRzdG9yZS5kaXNwYXRjaCh7CiAgICAgICAgdHlwZTogJ3NhdmVCb2FyZCcsCiAgICAgICAgYm9hcmQ6IHRoaXMuYm9hcmQKICAgICAgfSkKICAgICAgdGhpcy4kbm90aWZ5KHsKICAgICAgICBtZXNzYWdlOiAnTmV3IGdyb3VwIGFkZGVkJywKICAgICAgICBwb3NpdGlvbjogJ2JvdHRvbS1sZWZ0JywKICAgICAgICBkdXJhdGlvbjogMjAwMAogICAgICB9KQogICAgICB0aGlzLmZvcmNlUmVyZW5kZXIoKQogICAgfSwKICAgIGRlbGV0ZUdyb3VwKGdyb3VwSWQpIHsKICAgICAgY29uc3QgaWR4ID0gdGhpcy5ib2FyZC5ncm91cHMuZmluZEluZGV4KGdyb3VwID0+IGdyb3VwLmlkID09PSBncm91cElkKQogICAgICBjb25zdCB0eHQgPSBgJHt0aGlzLnVzZXIuZnVsbE5hbWV9IGRlbGV0ZWQgZ3JvdXAgJHt0aGlzLmJvYXJkLmdyb3Vwc1tpZHhdLnR4dH1gCiAgICAgIHRoaXMuYm9hcmQuZ3JvdXBzLnNwbGljZShpZHgsIDEpCiAgICAgIGxldCBuZXdBY3Rpdml0eSA9IGJvYXJkU2VydmljZS5nZXRFbXB0eUFjdGl2aXR5KHR4dCwgdGhpcy5taW5pVXNlcikKICAgICAgdGhpcy5ib2FyZC5hY3Rpdml0aWVzLnB1c2gobmV3QWN0aXZpdHkpCiAgICAgIHRoaXMuJHN0b3JlLmRpc3BhdGNoKHsKICAgICAgICB0eXBlOiAnc2F2ZUJvYXJkJywKICAgICAgICBib2FyZDogdGhpcy5ib2FyZAogICAgICB9KQogICAgICB0aGlzLiRub3RpZnkoewogICAgICAgIG1lc3NhZ2U6ICdHcm91cCBkZWxldGVkJywKICAgICAgICBwb3NpdGlvbjogJ2JvdHRvbS1sZWZ0JywKICAgICAgICBkdXJhdGlvbjogMjAwMAogICAgICB9KQogICAgICB0aGlzLmZvcmNlUmVyZW5kZXIoKQogICAgfSwKICAgIHVwZGF0ZUdyb3VwKHVwZGF0ZWRHcm91cCkgewogICAgICBjb25zdCBpZHggPSB0aGlzLmJvYXJkLmdyb3Vwcy5maW5kSW5kZXgoCiAgICAgICAgZ3JvdXAgPT4gZ3JvdXAuaWQgPT09IHVwZGF0ZWRHcm91cC5pZAogICAgICApCiAgICAgIGlmIChpZHggPCAwKSByZXR1cm4KICAgICAgdGhpcy5ib2FyZC5ncm91cHMuc3BsaWNlKGlkeCwgMSwgdXBkYXRlZEdyb3VwKQogICAgICBjb25zdCB0eHQgPSBgJHt0aGlzLnVzZXIuZnVsbE5hbWV9IHVwZGF0ZWQgZ3JvdXAgJHt1cGRhdGVkR3JvdXAubmFtZX1gCiAgICAgIGxldCBuZXdBY3Rpdml0eSA9IGJvYXJkU2VydmljZS5nZXRFbXB0eUFjdGl2aXR5KHR4dCwgdGhpcy5taW5pVXNlcikKICAgICAgdGhpcy5ib2FyZC5hY3Rpdml0aWVzLnB1c2gobmV3QWN0aXZpdHkpCiAgICAgIHRoaXMuJHN0b3JlLmRpc3BhdGNoKHsKICAgICAgICB0eXBlOiAnc2F2ZUJvYXJkJywKICAgICAgICBib2FyZDogdGhpcy5ib2FyZAogICAgICB9KQogICAgICB0aGlzLiRub3RpZnkoewogICAgICAgIG1lc3NhZ2U6ICdHcm91cCB1cGRhdGVkJywKICAgICAgICBwb3NpdGlvbjogJ2JvdHRvbS1sZWZ0JywKICAgICAgICBkdXJhdGlvbjogMjAwMAogICAgICB9KQogICAgICB0aGlzLmZvcmNlUmVyZW5kZXIoKQogICAgfSwKICAgIHVwZGF0ZUdyb3Vwcyhncm91cHMpIHsKICAgICAgdGhpcy5ib2FyZC5ncm91cHMgPSBncm91cHMKICAgICAgY29uc3QgdHh0ID0gYCR7dGhpcy51c2VyLmZ1bGxOYW1lfSB1cGRhdGVkIHRoZSBncm91cHNgCiAgICAgIGxldCBuZXdBY3Rpdml0eSA9IGJvYXJkU2VydmljZS5nZXRFbXB0eUFjdGl2aXR5KHR4dCwgdGhpcy5taW5pVXNlcikKICAgICAgdGhpcy5ib2FyZC5hY3Rpdml0aWVzLnB1c2gobmV3QWN0aXZpdHkpCiAgICAgIHRoaXMuJHN0b3JlLmRpc3BhdGNoKHsKICAgICAgICB0eXBlOiAnc2F2ZUJvYXJkJywKICAgICAgICBib2FyZDogdGhpcy5ib2FyZAogICAgICB9KQogICAgICB0aGlzLiRub3RpZnkoewogICAgICAgIG1lc3NhZ2U6ICdHcm91cHMgdXBkYXRlZCcsCiAgICAgICAgcG9zaXRpb246ICdib3R0b20tbGVmdCcsCiAgICAgICAgZHVyYXRpb246IDIwMDAKICAgICAgfSkKICAgICAgdGhpcy5mb3JjZVJlcmVuZGVyKCkKICAgIH0KICB9LAogIHdhdGNoOiB7CiAgICAnJHJvdXRlLnBhcmFtcy5ib2FyZElkJygpIHsKICAgICAgdGhpcy5sb2FkQm9hcmQoKQogICAgICB0aGlzLmZvcmNlUmVyZW5kZXIoKQogICAgfQogIH0sCiAgY3JlYXRlZCgpIHsKICAgIHRoaXMuJHN0b3JlLmRpc3BhdGNoKHsKICAgICAgdHlwZTogJ2NyZWF0ZVByaXZhdGVTb2NrZXQnCiAgICB9KQogICAgdGhpcy4kc3RvcmUuZGlzcGF0Y2goeyB0eXBlOiAnbG9hZFVzZXJzJyB9KQogICAgdGhpcy5sb2FkQm9hcmRzKCkKICAgIHRoaXMubG9hZEJvYXJkKCkKICAgIGV2ZW50QnVzLiRvbigndXBkYXRlR3JvdXAnLCB0aGlzLnVwZGF0ZUdyb3VwKQogICAgZXZlbnRCdXMuJG9uKCdmb3JjZVJlcmVuZGVyJywgdGhpcy5mb3JjZVJlcmVuZGVyKQogIH0sCiAgZGVzdHJveWVkKCkge30sCiAgY29tcG9uZW50czogewogICAgZ3JvdXBMaXN0LAogICAgYm9hcmRMaXN0LAogICAgYm9hcmRTZWFyY2gsCiAgICBjaGF0QXBwLAogICAgYm9hcmRIZWFkZXIsCiAgICB0cmVsbG9Nb2RlCiAgfQp9Cg=="},{"version":3,"sources":["board-app.vue"],"names":[],"mappingsfile":"board-app.vue","sourceRoot":"src/views","sourcesContent":["<template>\n    <section v-if=\"board\" class=\"board-app flex\">\n        <board-list\n            :expandList=\"expandList\"\n            :isExpanded=\"isListExpanded\"\n            @removeBoard=\"removeCurrBoard\"\n            @addNewBoard=\"addBoard\"\n            :boards=\"boards\"\n            title=\"Boards\">\n            <button\n                slot=\"expand-btn\"\n                @click=\"toggleExpandList\"\n                :class=\"{\n                    'expand-list-btn': true,\n                    notExpanded: !isListExpanded,\n                }\"\n            >\n                <i\n                    :class=\"btnClassExpend\"\n                    v-tooltip.right=\"'Expand/Hide List'\"\n                ></i>\n            </button>\n            <board-search @searchBoard=\"setSearch\" slot=\"search\" />\n        </board-list>\n        ​\n        <div :class=\"['board-app-container width100', darkMode]\">\n            <board-header\n                :updateBoardName=\"updateBoardName\"\n                :updateBoardDesc=\"updateBoardDesc\"\n                :board=\"board\"\n                :addGroup=\"addGroup\"\n                @removeMember=\"removeBoardMember\"\n                @addMember=\"addBoardMember\"\n                :displayMode=\"displayMode\"\n                :forceRerender=\"forceRerender\"\n                @setDisplayMode=\"setDisplayMode\"\n            />\n            <group-list\n                v-if=\"board && displayMode === 'Board'\"\n                :key=\"componentKey\"\n                :groups=\"board.groups\"\n                :boardName=\"board.name\"\n                @deleteGroup=\"deleteGroup\"\n                @updateGroup=\"updateGroup\"\n                @updateGroups=\"updateGroups\"\n                @duplicateGroup=\"duplicateGroup\"\n                @forceRender=\"forceRerender\"\n            />\n            <trello-mode\n                :key=\"componentKey\"\n                @forceRender=\"forceRerender\"\n                v-else\n            ></trello-mode>\n        </div>\n        <div v-if=\"isTaskDetailsHover\" class=\"backdrop-layer\"></div>\n        <!-- <task-details\n      v-if=\"this.$route.params.taskId\"\n      @close=\"isTaskDetailsHover = false\"\n      @mouseover.native=\"isTaskDetailsHover = true\"\n      @mouseleave.native=\"isTaskDetailsHover = false\"\n    /> -->\n        <router-view :class=\"['grow', darkMode]\" />\n        <div\n            v-tooltip.top=\"'Chat Board'\"\n            v-show=\"isChatingBtnShown\"\n            class=\"chat-icon-btn-container flex align-center justify-center\"\n        >\n            <i\n                @click=\"toggleChat\"\n                class=\"fas chat-icon fa-comments relative\"\n            ></i>\n        </div>\n        <chat-app @closeChat=\"toggleChat\" v-if=\"isChating\" />\n    </section>\n    <div v-else class=\"flex justify-center align-center\">\n        <img src=\"@/assets/imgs/loader.gif\" class=\"loader-app\" />\n    </div>\n</template>\n<script>\nimport { eventBus } from '@/services/event-bus.service'\nimport chatApp from '@/cmps/board-chat'\nimport groupList from '@/cmps/group-list'\nimport boardList from '@/cmps/board-list.vue'\nimport { boardService } from '@/services/board.service'\nimport boardSearch from '@/cmps/board-search'\nimport { utilService } from '@/services/util.service'\nimport boardHeader from '../cmps/board-header.vue'\n// import { socketService } from '@/services/socket.service.js'\nimport trelloMode from '@/cmps/Trello/trello-mode'\nexport default {\n  name: 'board-app',\n  data() {\n    return {\n      isChatingBtnShown: true,\n      isChating: false,\n      isListExpanded: true,\n      isMembersShowen: false,\n      currTaskDetails: null,\n      isTaskDetailsHover: false,\n      componentKey: 0\n    }\n  },\n  computed: {\n    // NOT  REMOVE THIS FUNC !!!!!!!!!!\n    darkMode() {\n      return this.$store.getters.getDarkModeToggle\n    },\n    displayMode() {\n      return this.$store.getters.displayMode\n    },\n    btnClassExpend() {\n      return this.isListExpanded\n        ? 'expend-btn fas fa-chevron-left'\n        : 'expend-btn fas fa-chevron-right'\n    },\n    chatControl() {\n      return this.isChatingBtnShown ? 'Hide Chat' : 'Show Chat'\n    },\n    user() {\n      return this.$store.getters.user\n    },\n    miniUser(){\n      return this.$store.getters.miniUser\n    },\n    board() {\n      return this.$store.getters.board\n    },\n    boards() {\n      return this.$store.getters.boards\n    }\n  },\n  methods: {\n    setDisplayMode(displayMode) {\n      this.$store.commit({ type: 'setDisplayMode', displayMode })\n    },\n    toogleChatBtn() {\n      this.isChatingBtnShown = !this.isChatingBtnShown\n    },\n    expandList() {\n      this.isListExpanded = true\n    },\n    toggleExpandList() {\n      this.isListExpanded = !this.isListExpanded\n    },\n    toggleChat() {\n      this.isChating = !this.isChating\n    },\n    duplicateGroup(group) {\n      group.id = utilService.makeId()\n      this.board.groups.push(group)\n      const txt = `${this.user.fullName} duplicated group the group ${group.name} `\n      let newActivity = boardService.getEmptyActivity(txt, this.miniUser)\n      this.board.activities.push(newActivity)\n      this.$store.dispatch({ type: 'saveBoard', board: this.board })\n      this.$store.dispatch({ type: 'updateBoard', board: this.board })\n      this.forceRerender()\n    },\n    updateBoardName(ev) {\n      ev.target.blur()\n      if (ev.target.innerText === this.board.name) return\n      else {\n        this.board.name = ev.target.innerText\n        const txt = `${this.user.fullName} update Board name`\n        let newActivity = boardService.getEmptyActivity(txt, this.miniUser)\n        this.board.activities.push(newActivity)\n        this.$store.dispatch({ type: 'saveBoard', board: this.board })\n        this.$store.dispatch({ type: 'updateBoard', board: this.board })\n        this.$notify({\n          message: 'Board name updated',\n          position: 'bottom-left',\n          duration: 2000\n        })\n        this.forceRerender()\n      }\n    },\n    updateBoardDesc(ev) {\n      ev.target.blur()\n      if (ev.target.innerText === this.board.description) return\n      else {\n        this.board.description = ev.target.innerText\n        const txt = `${this.user.fullName} update Board description`\n        let newActivity = boardService.getEmptyActivity(txt, this.miniUser)\n        this.board.activities.push(newActivity)\n        this.$store.dispatch({ type: 'saveBoard', board: this.board })\n        this.$notify({\n          message: 'Board description updated',\n          position: 'bottom-left',\n          duration: 2000\n        })\n        this.forceRerender()\n      }\n    },\n    forceRerender() {\n      this.componentKey += 1\n    },\n    addBoardMember(user) {\n      this.board.members.unshift(user)\n      const txt = `${this.user.fullName} add ${user.fullName} to Board`\n      let newActivity = boardService.getEmptyActivity(txt, this.miniUser)\n      this.board.activities.push(newActivity)\n      this.$store.dispatch({ type: 'saveBoard', board: this.board })\n      this.$notify({\n        message: 'New member added to board',\n        position: 'bottom-left',\n        duration: 2000\n      })\n    },\n    removeBoardMember(member) {\n      const idx = this.board.members.findIndex(\n        bMember => bMember._id === member._id\n      )\n      this.board.members.splice(idx, 1)\n      const txt = `${this.user.fullName} remove  ${member.fullName} from Board`\n      let newActivity = boardService.getEmptyActivity(txt, this.miniUser)\n      this.board.activities.push(newActivity)\n      this.$store.dispatch({ type: 'saveBoard', board: this.board })\n      this.$notify({\n        message: 'Member removed from board',\n        position: 'bottom-left',\n        duration: 2000\n      })\n    },\n    setSearch(searchBoard) {\n      this.$store.commit({ type: 'setSearch', searchBoard })\n      this.$store.dispatch({ type: 'loadBoards' })\n    },\n    async removeCurrBoard(boardId) {\n      try {\n        const board = boardService.getById()\n        if (board.creator._id !== this.user_id) {\n          return\n        }\n        await this.$confirm(\n          'This will permanently delete the board. Continue?',\n          'Warning',\n          {\n            confirmButtonText: 'OK',\n            cancelButtonText: 'Cancel',\n            type: 'warning'\n          }\n        )\n        const txt = `${this.user.fullName} remove Board`\n        let newActivity = boardService.getEmptyActivity(txt, this.miniUser)\n        this.board.activities.push(newActivity)\n        this.$store.dispatch({ type: 'removeBoard', boardId })\n        this.$store.dispatch({\n          type: 'loadAllBoards',\n          boards: this.boards\n        })\n        this.$notify({\n          message: 'Board deleted',\n          position: 'bottom-left',\n          duration: 2000\n        })\n        this.$message({\n          type: 'success',\n          message: 'Delete completed'\n        })\n      } catch (err) {\n          this.$message({\n            durtion: 2000,\n            showClose: true,\n            type: 'error',\n            offset: 335,\n            message: 'Only the creator can delete the board!'\n          })\n      }\n    },\n    loadBoards() {\n      this.$store.dispatch({ type: 'loadBoards' })\n      this.forceRerender()\n    },\n    async addBoard() {\n      try {\n        const res = await this.$prompt(\n          'Please enter a name to your board',\n          'Add New Board',\n          {\n            confirmButtonText: 'OK',\n            cancelButtonText: 'Cancel'\n          }\n        )\n        const board = boardService.getEmptyBoard()\n        board.name = res.value\n        board.creator = this.miniUser\n        board.members.push(this.miniUser)\n        const txt = `${this.miniUser.fullName} create this Board`\n        let newActivity = boardService.getEmptyActivity(txt, this.miniUser)\n        this.board.activities.push(newActivity)\n        this.$store.dispatch({ type: 'saveBoard', board })\n        this.$message({\n          type: 'success',\n          duration: 2500,\n          message: 'Your Board:' + res.value + ' add '\n        })\n      } catch (err) {\n        this.$message({\n          type: 'info',\n          duration: 2500,\n          message: 'Your action canceled'\n        })\n      }\n    },\n    async loadBoard() {\n      try {\n        await this.$store.dispatch({\n          type: 'loadBoard',\n          boardId: this.$route.params.boardId\n        })\n      } catch (e) {\n        console.log('Erororor!!')\n      }\n    },\n    addGroup() {\n      const newGroup = boardService.getEmptyGroup()\n      this.board.groups.push(newGroup)\n      const txt = `${this.user.fullName} has added a new group!`\n      let newActivity = boardService.getEmptyActivity(txt, this.miniUser)\n      this.board.activities.push(newActivity)\n      this.$store.dispatch({\n        type: 'saveBoard',\n        board: this.board\n      })\n      this.$notify({\n        message: 'New group added',\n        position: 'bottom-left',\n        duration: 2000\n      })\n      this.forceRerender()\n    },\n    deleteGroup(groupId) {\n      const idx = this.board.groups.findIndex(group => group.id === groupId)\n      const txt = `${this.user.fullName} deleted group ${this.board.groups[idx].txt}`\n      this.board.groups.splice(idx, 1)\n      let newActivity = boardService.getEmptyActivity(txt, this.miniUser)\n      this.board.activities.push(newActivity)\n      this.$store.dispatch({\n        type: 'saveBoard',\n        board: this.board\n      })\n      this.$notify({\n        message: 'Group deleted',\n        position: 'bottom-left',\n        duration: 2000\n      })\n      this.forceRerender()\n    },\n    updateGroup(updatedGroup) {\n      const idx = this.board.groups.findIndex(\n        group => group.id === updatedGroup.id\n      )\n      if (idx < 0) return\n      this.board.groups.splice(idx, 1, updatedGroup)\n      const txt = `${this.user.fullName} updated group ${updatedGroup.name}`\n      let newActivity = boardService.getEmptyActivity(txt, this.miniUser)\n      this.board.activities.push(newActivity)\n      this.$store.dispatch({\n        type: 'saveBoard',\n        board: this.board\n      })\n      this.$notify({\n        message: 'Group updated',\n        position: 'bottom-left',\n        duration: 2000\n      })\n      this.forceRerender()\n    },\n    updateGroups(groups) {\n      this.board.groups = groups\n      const txt = `${this.user.fullName} updated the groups`\n      let newActivity = boardService.getEmptyActivity(txt, this.miniUser)\n      this.board.activities.push(newActivity)\n      this.$store.dispatch({\n        type: 'saveBoard',\n        board: this.board\n      })\n      this.$notify({\n        message: 'Groups updated',\n        position: 'bottom-left',\n        duration: 2000\n      })\n      this.forceRerender()\n    }\n  },\n  watch: {\n    '$route.params.boardId'() {\n      this.loadBoard()\n      this.forceRerender()\n    }\n  },\n  created() {\n    this.$store.dispatch({\n      type: 'createPrivateSocket'\n    })\n    this.$store.dispatch({ type: 'loadUsers' })\n    this.loadBoards()\n    this.loadBoard()\n    eventBus.$on('updateGroup', this.updateGroup)\n    eventBus.$on('forceRerender', this.forceRerender)\n  },\n  destroyed() {},\n  components: {\n    groupList,\n    boardList,\n    boardSearch,\n    chatApp,\n    boardHeader,\n    trelloMode\n  }\n}\n</script>"]}]}