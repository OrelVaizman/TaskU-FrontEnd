{"remainingRequest":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/src/cmps/task-list.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/src/cmps/task-list.vue","mtime":1606602012915},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB0YXNrUHJldmlldyBmcm9tICcuL3Rhc2stcHJldmlldycKaW1wb3J0IHsgYm9hcmRTZXJ2aWNlIH0gZnJvbSAnQC9zZXJ2aWNlcy9ib2FyZC5zZXJ2aWNlJwppbXBvcnQgZHJhZ2dhYmxlIGZyb20gJ3Z1ZWRyYWdnYWJsZScKCmV4cG9ydCBkZWZhdWx0IHsKICAgIG5hbWU6ICd0YXNrLWxpc3QnLAogICAgcHJvcHM6IHsKICAgICAgICB0YXNrczogQXJyYXksCiAgICAgICAgZ3JvdXBJZDogU3RyaW5nLAogICAgICAgIHRhc2tDb2xvcjogU3RyaW5nLAogICAgfSwKICAgIGRhdGEoKSB7CiAgICAgICAgcmV0dXJuIHsKICAgICAgICAgICAgdHh0OiAnJywKICAgICAgICAgICAgaXNBZGRCdG5TaG93ZW46IGZhbHNlLAogICAgICAgICAgICBjbG9uZWRUYXNrczogbnVsbCwKICAgICAgICB9CiAgICB9LAoKICAgIGNvbXB1dGVkOiB7CiAgICAgICAgYm9hcmQoKSB7CiAgICAgICAgICAgIHJldHVybiB0aGlzLiRzdG9yZS5nZXR0ZXJzLmJvYXJkCiAgICAgICAgfSwKICAgICAgICB1c2VyKCkgewogICAgICAgICAgICByZXR1cm4gdGhpcy4kc3RvcmUuZ2V0dGVycy5sb2dnZWRJblVzZXIKICAgICAgICB9LAogICAgfSwKICAgIG1ldGhvZHM6IHsKICAgICAgICBzaG93QWRkQnRuKCkgewogICAgICAgICAgICB0aGlzLmlzQWRkQnRuU2hvd2VuID0gdHJ1ZQogICAgICAgIH0sCiAgICAgICAgZ2V0R3JvdXBCeUlkKCkgewogICAgICAgICAgICBjb25zdCBpZHggPSB0aGlzLmJvYXJkLmdyb3Vwcy5maW5kSW5kZXgoCiAgICAgICAgICAgICAgICAoZ3JvdXApID0+IGdyb3VwLmlkID09PSB0aGlzLmdyb3VwSWQKICAgICAgICAgICAgKQogICAgICAgICAgICByZXR1cm4gdGhpcy5ib2FyZC5ncm91cHNbaWR4XQogICAgICAgIH0sCiAgICAgICAgYWRkVGFzaygpIHsKICAgICAgICAgICAgbGV0IG5ld0FjdGl2aXR5ID0gYm9hcmRTZXJ2aWNlLmdldEVtcHR5QWN0aXZpdHkoKQogICAgICAgICAgICBjb25zdCBuZXdUYXNrID0gYm9hcmRTZXJ2aWNlLmdldEVtcHR5VGFzaygpCiAgICAgICAgICAgIG5ld1Rhc2sudHh0ID0gdGhpcy50eHQKICAgICAgICAgICAgbmV3QWN0aXZpdHkudHh0ID0gYFRhc2sgJyR7bmV3VGFzay50eHR9JyBhZGRlZGAKICAgICAgICAgICAgbmV3QWN0aXZpdHkuYnlVc2VyID0gdGhpcy51c2VyCiAgICAgICAgICAgIG5ld1Rhc2suYWN0aXZpdGllcy5wdXNoKG5ld0FjdGl2aXR5KQogICAgICAgICAgICBjb25zdCBncm91cCA9IHRoaXMuZ2V0R3JvdXBCeUlkKCkKICAgICAgICAgICAgZ3JvdXAudGFza3MucHVzaChuZXdUYXNrKQogICAgICAgICAgICB0aGlzLiRzdG9yZS5kaXNwYXRjaCh7CiAgICAgICAgICAgICAgICB0eXBlOiAnc2F2ZUJvYXJkJywKICAgICAgICAgICAgICAgIGJvYXJkOiB0aGlzLmJvYXJkLAogICAgICAgICAgICB9KQogICAgICAgICAgICB0aGlzLnR4dCA9ICcnCiAgICAgICAgICAgIHRoaXMuaXNBZGRCdG5TaG93ZW4gPSBmYWxzZQogICAgICAgICAgICB0aGlzLiRlbWl0KCdmb3JjZVJlbmRlcicpCiAgICAgICAgfSwKICAgICAgICBkZWxldGVUYXNrKHRhc2tJZCkgewogICAgICAgICAgICBjb25zdCBncm91cCA9IHRoaXMuZ2V0R3JvdXBCeUlkKCkKICAgICAgICAgICAgY29uc3QgdGFza0lkeCA9IGdyb3VwLnRhc2tzLmZpbmRJbmRleCgodGFzaykgPT4gdGFzay5pZCA9PT0gdGFza0lkKQogICAgICAgICAgICBjb25zb2xlLmxvZygpCiAgICAgICAgICAgIGdyb3VwLnRhc2tzLnNwbGljZSh0YXNrSWR4LCAxKQogICAgICAgICAgICB0aGlzLiRzdG9yZS5kaXNwYXRjaCh7CiAgICAgICAgICAgICAgICB0eXBlOiAnc2F2ZUJvYXJkJywKICAgICAgICAgICAgICAgIGJvYXJkOiB0aGlzLmJvYXJkLAogICAgICAgICAgICB9KQogICAgICAgICAgICB0aGlzLiRlbWl0KCdmb3JjZVJlbmRlcicpCiAgICAgICAgfSwKICAgICAgICB1cGRhdGVUYXNrKG5ld1Rhc2spIHsKICAgICAgICAgICAgY29uc3QgZ3JvdXAgPSB0aGlzLmdldEdyb3VwQnlJZCgpCiAgICAgICAgICAgIGNvbnN0IHRhc2tJZHggPSBncm91cC50YXNrcy5maW5kSW5kZXgoCiAgICAgICAgICAgICAgICAodGFzaykgPT4gdGFzay5pZCA9PT0gbmV3VGFzay5pZAogICAgICAgICAgICApCiAgICAgICAgICAgIGdyb3VwLnRhc2tzLnNwbGljZSh0YXNrSWR4LCAxLCBuZXdUYXNrKQogICAgICAgICAgICB0aGlzLiRzdG9yZS5kaXNwYXRjaCh7CiAgICAgICAgICAgICAgICB0eXBlOiAnc2F2ZUJvYXJkJywKICAgICAgICAgICAgICAgIGJvYXJkOiB0aGlzLmJvYXJkLAogICAgICAgICAgICB9KQogICAgICAgICAgICB0aGlzLiRlbWl0KCdmb3JjZVJlbmRlcicpCiAgICAgICAgfSwKICAgICAgICB1cGRhdGVUYXNrcygpIHsKICAgICAgICAgICAgY29uc3QgZ3JvdXAgPSB0aGlzLmdldEdyb3VwQnlJZCgpCiAgICAgICAgICAgIGdyb3VwLnRhc2tzID0gdGhpcy5jbG9uZWRUYXNrcwogICAgICAgICAgICB0aGlzLiRzdG9yZS5kaXNwYXRjaCh7CiAgICAgICAgICAgICAgICB0eXBlOiAnc2F2ZUJvYXJkJywKICAgICAgICAgICAgICAgIGJvYXJkOiB0aGlzLmJvYXJkLAogICAgICAgICAgICB9KQogICAgICAgICAgICB0aGlzLiRlbWl0KCdmb3JjZVJlbmRlcicpCiAgICAgICAgfSwKICAgIH0sCiAgICBjb21wb25lbnRzOiB7CiAgICAgICAgdGFza1ByZXZpZXcsCiAgICAgICAgZHJhZ2dhYmxlLAogICAgfSwKICAgIGNyZWF0ZWQoKSB7CiAgICAgICAgdGhpcy5jbG9uZWRUYXNrcyA9IEpTT04ucGFyc2UoSlNPTi5zdHJpbmdpZnkodGhpcy50YXNrcykpCiAgICB9LAp9Cg=="},{"version":3,"sources":["task-list.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwCA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"task-list.vue","sourceRoot":"src/cmps","sourcesContent":["<template>\n    <section v-if=\"clonedTasks\" class=\"task-list width100\">\n        <ul class=\"clean-list flex wrap align-center justify-center gap\">\n            <draggable\n                class=\"width100\"\n                v-model=\"clonedTasks\"\n                @end=\"updateTasks\" \n                animation=\"250\"\n            >\n            <transition-group>\n                >\n                <task-preview\n                    v-for=\"task in clonedTasks\"\n                    :taskColor=\"taskColor\"\n                    :key=\"task.id\"\n                    :task=\"task\"\n                    :statuses=\"board.statuses\"\n                    :priorities=\"board.priorities\"\n                    :groupId=\"groupId\"\n                    @deleteTask=\"deleteTask\"\n                    @updateTask=\"updateTask\"\n                    :boardMembers=\"board.members\"\n                />\n            </transition-group>\n            </draggable>\n        </ul>\n        <form class=\"flex\" @submit.prevent=\"addTask\">\n            <input\n                class=\"add-task-input\"\n                @focus=\"showAddBtn\"\n                v-model=\"txt\"\n                type=\"text\"\n                placeholder=\"+ Add Task\"\n            />\n            <button v-show=\"isAddBtnShowen\" type=\"submit\">Add</button>\n        </form>\n    </section>\n</template>\n\n<script>\nimport taskPreview from './task-preview'\nimport { boardService } from '@/services/board.service'\nimport draggable from 'vuedraggable'\n\nexport default {\n    name: 'task-list',\n    props: {\n        tasks: Array,\n        groupId: String,\n        taskColor: String,\n    },\n    data() {\n        return {\n            txt: '',\n            isAddBtnShowen: false,\n            clonedTasks: null,\n        }\n    },\n\n    computed: {\n        board() {\n            return this.$store.getters.board\n        },\n        user() {\n            return this.$store.getters.loggedInUser\n        },\n    },\n    methods: {\n        showAddBtn() {\n            this.isAddBtnShowen = true\n        },\n        getGroupById() {\n            const idx = this.board.groups.findIndex(\n                (group) => group.id === this.groupId\n            )\n            return this.board.groups[idx]\n        },\n        addTask() {\n            let newActivity = boardService.getEmptyActivity()\n            const newTask = boardService.getEmptyTask()\n            newTask.txt = this.txt\n            newActivity.txt = `Task '${newTask.txt}' added`\n            newActivity.byUser = this.user\n            newTask.activities.push(newActivity)\n            const group = this.getGroupById()\n            group.tasks.push(newTask)\n            this.$store.dispatch({\n                type: 'saveBoard',\n                board: this.board,\n            })\n            this.txt = ''\n            this.isAddBtnShowen = false\n            this.$emit('forceRender')\n        },\n        deleteTask(taskId) {\n            const group = this.getGroupById()\n            const taskIdx = group.tasks.findIndex((task) => task.id === taskId)\n            console.log()\n            group.tasks.splice(taskIdx, 1)\n            this.$store.dispatch({\n                type: 'saveBoard',\n                board: this.board,\n            })\n            this.$emit('forceRender')\n        },\n        updateTask(newTask) {\n            const group = this.getGroupById()\n            const taskIdx = group.tasks.findIndex(\n                (task) => task.id === newTask.id\n            )\n            group.tasks.splice(taskIdx, 1, newTask)\n            this.$store.dispatch({\n                type: 'saveBoard',\n                board: this.board,\n            })\n            this.$emit('forceRender')\n        },\n        updateTasks() {\n            const group = this.getGroupById()\n            group.tasks = this.clonedTasks\n            this.$store.dispatch({\n                type: 'saveBoard',\n                board: this.board,\n            })\n            this.$emit('forceRender')\n        },\n    },\n    components: {\n        taskPreview,\n        draggable,\n    },\n    created() {\n        this.clonedTasks = JSON.parse(JSON.stringify(this.tasks))\n    },\n}\n</script>\n"]}]}