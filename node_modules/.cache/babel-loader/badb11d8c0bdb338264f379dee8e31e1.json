{"remainingRequest":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/babel-loader/lib/index.js!/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/eslint-loader/index.js??ref--13-0!/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/src/modules/board.store.js","dependencies":[{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/src/modules/board.store.js","mtime":1606415517701},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaW5jbHVkZXMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5tYXAiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5mdW5jdGlvbi5uYW1lIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLmluY2x1ZGVzIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiL1VzZXJzL29yZWx2YWl6bWFuL0Rlc2t0b3AvZGV2L0ZpbmFsU3ByaW50L3Rhc2t1LWZyb250ZW5kL1Rhc2tVLWZyb250ZW5kL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKaW1wb3J0IHsgYm9hcmRTZXJ2aWNlIH0gZnJvbSAnQC9zZXJ2aWNlcy9ib2FyZC5zZXJ2aWNlLmpzJzsKZXhwb3J0IHZhciBib2FyZFN0b3JlID0gewogIHN0YXRlOiB7CiAgICBib2FyZHM6IFtdLAogICAgY3VyckJvYXJkOiBudWxsLAogICAgc2VhcmNoQm9hcmQ6IG51bGwsCiAgICBmaWx0ZXJCeTogbnVsbAogIH0sCiAgZ2V0dGVyczogewogICAgYm9hcmRzOiBmdW5jdGlvbiBib2FyZHMoc3RhdGUpIHsKICAgICAgaWYgKCFzdGF0ZS5zZWFyY2hCb2FyZCkgcmV0dXJuIHN0YXRlLmJvYXJkczsKICAgICAgcmV0dXJuIHN0YXRlLmJvYXJkcy5maWx0ZXIoZnVuY3Rpb24gKGJvYXJkKSB7CiAgICAgICAgcmV0dXJuIGJvYXJkLm5hbWUudG9Mb3dlckNhc2UoKS5pbmNsdWRlcyhzdGF0ZS5zZWFyY2hCb2FyZC50b0xvd2VyQ2FzZSgpKTsKICAgICAgfSk7CiAgICB9LAogICAgYm9hcmQ6IGZ1bmN0aW9uIGJvYXJkKHN0YXRlKSB7CiAgICAgIHJldHVybiBKU09OLnBhcnNlKEpTT04uc3RyaW5naWZ5KHN0YXRlLmN1cnJCb2FyZCkpOwogICAgfSwKICAgIGRlZmF1bHRCb2FyZElkOiBmdW5jdGlvbiBkZWZhdWx0Qm9hcmRJZChzdGF0ZSkgewogICAgICByZXR1cm4gc3RhdGUuYm9hcmRzWzBdLl9pZDsKICAgIH0KICB9LAogIG11dGF0aW9uczogewogICAgc2V0Qm9hcmRzOiBmdW5jdGlvbiBzZXRCb2FyZHMoc3RhdGUsIF9yZWYpIHsKICAgICAgdmFyIGJvYXJkcyA9IF9yZWYuYm9hcmRzOwogICAgICB2YXIgbWluaUJvYXJkcyA9IGJvYXJkcy5tYXAoZnVuY3Rpb24gKGJvYXJkKSB7CiAgICAgICAgYm9hcmQgPSB7CiAgICAgICAgICBfaWQ6IGJvYXJkLl9pZCwKICAgICAgICAgIG5hbWU6IGJvYXJkLm5hbWUKICAgICAgICB9OwogICAgICAgIHJldHVybiBib2FyZDsKICAgICAgfSk7CiAgICAgIHN0YXRlLmJvYXJkcyA9IG1pbmlCb2FyZHM7CiAgICB9LAogICAgc2V0Qm9hcmQ6IGZ1bmN0aW9uIHNldEJvYXJkKHN0YXRlLCBfcmVmMikgewogICAgICB2YXIgYm9hcmQgPSBfcmVmMi5ib2FyZDsKICAgICAgc3RhdGUuY3VyckJvYXJkID0gYm9hcmQ7CiAgICB9LAogICAgcmVtb3ZlQm9hcmQ6IGZ1bmN0aW9uIHJlbW92ZUJvYXJkKHN0YXRlLCBfcmVmMykgewogICAgICB2YXIgYm9hcmRJZCA9IF9yZWYzLmJvYXJkSWQ7CiAgICAgIHN0YXRlLmJvYXJkcyA9IHN0YXRlLmJvYXJkcy5maWx0ZXIoZnVuY3Rpb24gKGJvYXJkKSB7CiAgICAgICAgcmV0dXJuIGJvYXJkLl9pZCAhPT0gYm9hcmRJZDsKICAgICAgfSk7CiAgICB9LAogICAgc2V0U2VhcmNoOiBmdW5jdGlvbiBzZXRTZWFyY2goc3RhdGUsIF9yZWY0KSB7CiAgICAgIHZhciBzZWFyY2hCb2FyZCA9IF9yZWY0LnNlYXJjaEJvYXJkOwogICAgICBjb25zb2xlLmxvZygnc2VhcmNoQm9hcmQ6Jywgc2VhcmNoQm9hcmQpOwogICAgICBzdGF0ZS5zZWFyY2hCb2FyZCA9IHNlYXJjaEJvYXJkOwogICAgICBjb25zb2xlLmxvZygnc3RhdGUuc2VhcmNoQm9hcmQ6Jywgc3RhdGUuc2VhcmNoQm9hcmQpOwogICAgfQogIH0sCiAgYWN0aW9uczogewogICAgbG9hZEJvYXJkczogZnVuY3Rpb24gbG9hZEJvYXJkcyhjb250ZXh0KSB7CiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoKSB7CiAgICAgICAgdmFyIGJvYXJkczsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygnY29udGV4dDonLCBjb250ZXh0KTsKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAzOwogICAgICAgICAgICAgICAgcmV0dXJuIGJvYXJkU2VydmljZS5xdWVyeSgpOwoKICAgICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgICBib2FyZHMgPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICAgICAgY29udGV4dC5jb21taXQoewogICAgICAgICAgICAgICAgICB0eXBlOiAnc2V0Qm9hcmRzJywKICAgICAgICAgICAgICAgICAgYm9hcmRzOiBib2FyZHMKICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICBjYXNlIDU6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlKTsKICAgICAgfSkpKCk7CiAgICB9LAogICAgbG9hZEJvYXJkOiBmdW5jdGlvbiBsb2FkQm9hcmQoX3JlZjUsIF9yZWY2KSB7CiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUyKCkgewogICAgICAgIHZhciBjb21taXQsIGJvYXJkSWQsIGJvYXJkOwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMiQoX2NvbnRleHQyKSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0Mi5wcmV2ID0gX2NvbnRleHQyLm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBjb21taXQgPSBfcmVmNS5jb21taXQ7CiAgICAgICAgICAgICAgICBib2FyZElkID0gX3JlZjYuYm9hcmRJZDsKICAgICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gNDsKICAgICAgICAgICAgICAgIHJldHVybiBib2FyZFNlcnZpY2UuZ2V0QnlJZChib2FyZElkKTsKCiAgICAgICAgICAgICAgY2FzZSA0OgogICAgICAgICAgICAgICAgYm9hcmQgPSBfY29udGV4dDIuc2VudDsKICAgICAgICAgICAgICAgIGNvbW1pdCh7CiAgICAgICAgICAgICAgICAgIHR5cGU6ICdzZXRCb2FyZCcsCiAgICAgICAgICAgICAgICAgIGJvYXJkOiBib2FyZAogICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgIGNhc2UgNjoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlMik7CiAgICAgIH0pKSgpOwogICAgfSwKICAgIHJlbW92ZUJvYXJkOiBmdW5jdGlvbiByZW1vdmVCb2FyZChfcmVmNywgX3JlZjgpIHsKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTMoKSB7CiAgICAgICAgdmFyIGNvbW1pdCwgYm9hcmRJZDsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTMkKF9jb250ZXh0MykgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDMucHJldiA9IF9jb250ZXh0My5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgY29tbWl0ID0gX3JlZjcuY29tbWl0OwogICAgICAgICAgICAgICAgYm9hcmRJZCA9IF9yZWY4LmJvYXJkSWQ7CiAgICAgICAgICAgICAgICBfY29udGV4dDMubmV4dCA9IDQ7CiAgICAgICAgICAgICAgICByZXR1cm4gYm9hcmRTZXJ2aWNlLnJlbW92ZShib2FyZElkKTsKCiAgICAgICAgICAgICAgY2FzZSA0OgogICAgICAgICAgICAgICAgY29tbWl0KHsKICAgICAgICAgICAgICAgICAgdHlwZTogJ3JlbW92ZUJvYXJkJywKICAgICAgICAgICAgICAgICAgYm9hcmRJZDogYm9hcmRJZAogICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgIGNhc2UgNToKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0My5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlMyk7CiAgICAgIH0pKSgpOwogICAgfSwKICAgIHNhdmVCb2FyZDogZnVuY3Rpb24gc2F2ZUJvYXJkKF9yZWY5LCBfcmVmMTApIHsKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTQoKSB7CiAgICAgICAgdmFyIGNvbW1pdCwgZGlzcGF0Y2gsIGJvYXJkLCBzYXZlZEJvYXJkOwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlNCQoX2NvbnRleHQ0KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0NC5wcmV2ID0gX2NvbnRleHQ0Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBjb21taXQgPSBfcmVmOS5jb21taXQsIGRpc3BhdGNoID0gX3JlZjkuZGlzcGF0Y2g7CiAgICAgICAgICAgICAgICBib2FyZCA9IF9yZWYxMC5ib2FyZDsKICAgICAgICAgICAgICAgIF9jb250ZXh0NC5uZXh0ID0gNDsKICAgICAgICAgICAgICAgIHJldHVybiBib2FyZFNlcnZpY2Uuc2F2ZShib2FyZCk7CgogICAgICAgICAgICAgIGNhc2UgNDoKICAgICAgICAgICAgICAgIHNhdmVkQm9hcmQgPSBfY29udGV4dDQuc2VudDsKCiAgICAgICAgICAgICAgICBpZiAoYm9hcmQuX2lkKSB7CiAgICAgICAgICAgICAgICAgIGNvbW1pdCh7CiAgICAgICAgICAgICAgICAgICAgdHlwZTogJ3NldEJvYXJkJywKICAgICAgICAgICAgICAgICAgICBib2FyZDogc2F2ZWRCb2FyZAogICAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdzYXZlZEJvYXJkOicsIHNhdmVkQm9hcmQpOwogICAgICAgICAgICAgICAgICBkaXNwYXRjaCh7CiAgICAgICAgICAgICAgICAgICAgdHlwZTogJ2xvYWRCb2FyZHMnCiAgICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICBjYXNlIDY6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDQuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZTQpOwogICAgICB9KSkoKTsKICAgIH0KICB9Cn07"},{"version":3,"sources":["/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/src/modules/board.store.js"],"names":["boardService","boardStore","state","boards","currBoard","searchBoard","filterBy","getters","filter","board","name","toLowerCase","includes","JSON","parse","stringify","defaultBoardId","_id","mutations","setBoards","miniBoards","map","setBoard","removeBoard","boardId","setSearch","console","log","actions","loadBoards","context","query","commit","type","loadBoard","getById","remove","saveBoard","dispatch","save","savedBoard"],"mappings":";;;;;;;AAAA,SAASA,YAAT,QAA6B,6BAA7B;AACA,OAAO,IAAMC,UAAU,GAAG;AACxBC,EAAAA,KAAK,EAAE;AACLC,IAAAA,MAAM,EAAE,EADH;AAELC,IAAAA,SAAS,EAAE,IAFN;AAGLC,IAAAA,WAAW,EAAE,IAHR;AAILC,IAAAA,QAAQ,EAAE;AAJL,GADiB;AAOxBC,EAAAA,OAAO,EAAE;AACPJ,IAAAA,MADO,kBACAD,KADA,EACO;AACZ,UAAI,CAACA,KAAK,CAACG,WAAX,EAAwB,OAAOH,KAAK,CAACC,MAAb;AACxB,aAAOD,KAAK,CAACC,MAAN,CAAaK,MAAb,CAAoB,UAAAC,KAAK;AAAA,eAC9BA,KAAK,CAACC,IAAN,CAAWC,WAAX,GAAyBC,QAAzB,CAAkCV,KAAK,CAACG,WAAN,CAAkBM,WAAlB,EAAlC,CAD8B;AAAA,OAAzB,CAAP;AAGD,KANM;AAOPF,IAAAA,KAPO,iBAODP,KAPC,EAOM;AACX,aAAOW,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeb,KAAK,CAACE,SAArB,CAAX,CAAP;AACD,KATM;AAUPY,IAAAA,cAVO,0BAUQd,KAVR,EAUe;AACpB,aAAOA,KAAK,CAACC,MAAN,CAAa,CAAb,EAAgBc,GAAvB;AACD;AAZM,GAPe;AAqBxBC,EAAAA,SAAS,EAAE;AACTC,IAAAA,SADS,qBACCjB,KADD,QACoB;AAAA,UAAVC,MAAU,QAAVA,MAAU;AAC3B,UAAMiB,UAAU,GAAGjB,MAAM,CAACkB,GAAP,CAAW,UAAAZ,KAAK,EAAI;AACrCA,QAAAA,KAAK,GAAG;AAAEQ,UAAAA,GAAG,EAAER,KAAK,CAACQ,GAAb;AAAkBP,UAAAA,IAAI,EAAED,KAAK,CAACC;AAA9B,SAAR;AACA,eAAOD,KAAP;AACD,OAHkB,CAAnB;AAIAP,MAAAA,KAAK,CAACC,MAAN,GAAeiB,UAAf;AACD,KAPQ;AAQTE,IAAAA,QARS,oBAQApB,KARA,SAQkB;AAAA,UAATO,KAAS,SAATA,KAAS;AACzBP,MAAAA,KAAK,CAACE,SAAN,GAAkBK,KAAlB;AACD,KAVQ;AAWTc,IAAAA,WAXS,uBAWGrB,KAXH,SAWuB;AAAA,UAAXsB,OAAW,SAAXA,OAAW;AAC9BtB,MAAAA,KAAK,CAACC,MAAN,GAAeD,KAAK,CAACC,MAAN,CAAaK,MAAb,CAAoB,UAAAC,KAAK;AAAA,eAAIA,KAAK,CAACQ,GAAN,KAAcO,OAAlB;AAAA,OAAzB,CAAf;AACD,KAbQ;AAcTC,IAAAA,SAdS,qBAcCvB,KAdD,SAcyB;AAAA,UAAfG,WAAe,SAAfA,WAAe;AAChCqB,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BtB,WAA5B;AACAH,MAAAA,KAAK,CAACG,WAAN,GAAoBA,WAApB;AACAqB,MAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCzB,KAAK,CAACG,WAAxC;AACD;AAlBQ,GArBa;AAyCxBuB,EAAAA,OAAO,EAAE;AACDC,IAAAA,UADC,sBACUC,OADV,EACmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACxBJ,gBAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBG,OAAxB;AADwB;AAAA,uBAEH9B,YAAY,CAAC+B,KAAb,EAFG;;AAAA;AAElB5B,gBAAAA,MAFkB;AAGxB2B,gBAAAA,OAAO,CAACE,MAAR,CAAe;AAAEC,kBAAAA,IAAI,EAAE,WAAR;AAAqB9B,kBAAAA,MAAM,EAANA;AAArB,iBAAf;;AAHwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIzB,KALM;AAMD+B,IAAAA,SANC,mCAMkC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAvBF,gBAAAA,MAAuB,SAAvBA,MAAuB;AAAXR,gBAAAA,OAAW,SAAXA,OAAW;AAAA;AAAA,uBACnBxB,YAAY,CAACmC,OAAb,CAAqBX,OAArB,CADmB;;AAAA;AACjCf,gBAAAA,KADiC;AAEvCuB,gBAAAA,MAAM,CAAC;AAAEC,kBAAAA,IAAI,EAAE,UAAR;AAAoBxB,kBAAAA,KAAK,EAALA;AAApB,iBAAD,CAAN;;AAFuC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGxC,KATM;AAUDc,IAAAA,WAVC,qCAUoC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAvBS,gBAAAA,MAAuB,SAAvBA,MAAuB;AAAXR,gBAAAA,OAAW,SAAXA,OAAW;AAAA;AAAA,uBACnCxB,YAAY,CAACoC,MAAb,CAAoBZ,OAApB,CADmC;;AAAA;AAEzCQ,gBAAAA,MAAM,CAAC;AAAEC,kBAAAA,IAAI,EAAE,aAAR;AAAuBT,kBAAAA,OAAO,EAAPA;AAAvB,iBAAD,CAAN;;AAFyC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAG1C,KAbM;AAcDa,IAAAA,SAdC,oCAc0C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA/BL,gBAAAA,MAA+B,SAA/BA,MAA+B,EAAvBM,QAAuB,SAAvBA,QAAuB;AAAT7B,gBAAAA,KAAS,UAATA,KAAS;AAAA;AAAA,uBACtBT,YAAY,CAACuC,IAAb,CAAkB9B,KAAlB,CADsB;;AAAA;AACzC+B,gBAAAA,UADyC;;AAE/C,oBAAI/B,KAAK,CAACQ,GAAV,EAAe;AACbe,kBAAAA,MAAM,CAAC;AAAEC,oBAAAA,IAAI,EAAE,UAAR;AAAoBxB,oBAAAA,KAAK,EAAE+B;AAA3B,mBAAD,CAAN;AACD,iBAFD,MAEO;AACLd,kBAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2Ba,UAA3B;AACAF,kBAAAA,QAAQ,CAAC;AAAEL,oBAAAA,IAAI,EAAE;AAAR,mBAAD,CAAR;AACD;;AAP8C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQhD;AAtBM;AAzCe,CAAnB","sourcesContent":["import { boardService } from '@/services/board.service.js'\nexport const boardStore = {\n  state: {\n    boards: [],\n    currBoard: null,\n    searchBoard: null,\n    filterBy: null\n  },\n  getters: {\n    boards(state) {\n      if (!state.searchBoard) return state.boards\n      return state.boards.filter(board =>\n        board.name.toLowerCase().includes(state.searchBoard.toLowerCase())\n      )\n    },\n    board(state) {\n      return JSON.parse(JSON.stringify(state.currBoard))\n    },\n    defaultBoardId(state) {\n      return state.boards[0]._id\n    }\n  },\n  mutations: {\n    setBoards(state, { boards }) {\n      const miniBoards = boards.map(board => {\n        board = { _id: board._id, name: board.name }\n        return board\n      })\n      state.boards = miniBoards\n    },\n    setBoard(state, { board }) {\n      state.currBoard = board\n    },\n    removeBoard(state, { boardId }) {\n      state.boards = state.boards.filter(board => board._id !== boardId)\n    },\n    setSearch(state, { searchBoard }) {\n      console.log('searchBoard:', searchBoard)\n      state.searchBoard = searchBoard\n      console.log('state.searchBoard:', state.searchBoard)\n    }\n  },\n  actions: {\n    async loadBoards(context) {\n      console.log('context:', context)\n      const boards = await boardService.query()\n      context.commit({ type: 'setBoards', boards })\n    },\n    async loadBoard({ commit }, { boardId }) {\n      const board = await boardService.getById(boardId)\n      commit({ type: 'setBoard', board })\n    },\n    async removeBoard({ commit }, { boardId }) {\n      await boardService.remove(boardId)\n      commit({ type: 'removeBoard', boardId })\n    },\n    async saveBoard({ commit, dispatch }, { board }) {\n      const savedBoard = await boardService.save(board)\n      if (board._id) {\n        commit({ type: 'setBoard', board: savedBoard })\n      } else {\n        console.log('savedBoard:', savedBoard)\n        dispatch({ type: 'loadBoards' })\n      }\n    }\n  }\n}\n"]}]}