{"remainingRequest":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/babel-loader/lib/index.js!/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/eslint-loader/index.js??ref--13-0!/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/src/modules/user.store.js","dependencies":[{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/src/modules/user.store.js","mtime":1606565135491},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmluZC1pbmRleCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LnNwbGljZSI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lIjsKaW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9Vc2Vycy9vcmVsdmFpem1hbi9EZXNrdG9wL2Rldi9GaW5hbFNwcmludC90YXNrdS1mcm9udGVuZC9UYXNrVS1mcm9udGVuZC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7CmltcG9ydCB7IHVzZXJTZXJ2aWNlIH0gZnJvbSAnQC9zZXJ2aWNlcy91c2VyLnNlcnZpY2UuanMnOwpleHBvcnQgdmFyIHVzZXJTdG9yZSA9IHsKICBzdGF0ZTogewogICAgdXNlcnM6IFtdLAogICAgY3VyclVzZXI6IG51bGwKICB9LAogIGdldHRlcnM6IHsKICAgIHVzZXJzOiBmdW5jdGlvbiB1c2VycyhzdGF0ZSkgewogICAgICByZXR1cm4gc3RhdGUudXNlcnM7CiAgICB9LAogICAgdXNlcjogZnVuY3Rpb24gdXNlcihzdGF0ZSkgewogICAgICByZXR1cm4gc3RhdGUuY3VyclVzZXI7CiAgICB9CiAgfSwKICBtdXRhdGlvbnM6IHsKICAgIHNldFVzZXJzOiBmdW5jdGlvbiBzZXRVc2VycyhzdGF0ZSwgX3JlZikgewogICAgICB2YXIgdXNlcnMgPSBfcmVmLnVzZXJzOwogICAgICBzdGF0ZS51c2VycyA9IHVzZXJzOwogICAgfSwKICAgIHNldFVzZXI6IGZ1bmN0aW9uIHNldFVzZXIoc3RhdGUsIF9yZWYyKSB7CiAgICAgIHZhciB1c2VyID0gX3JlZjIudXNlcjsKICAgICAgc3RhdGUuY3VyclVzZXIgPSB1c2VyOwogICAgICBjb25zb2xlLmxvZygnc3RhdGUuY3VyclVzZXI6Jywgc3RhdGUuY3VyclVzZXIpOwogICAgfSwKICAgIHVwZGF0ZVVzZXI6IGZ1bmN0aW9uIHVwZGF0ZVVzZXIoc3RhdGUsIF9yZWYzKSB7CiAgICAgIHZhciB1c2VyID0gX3JlZjMudXNlcjsKICAgICAgdmFyIGlkeCA9IHN0YXRlLnVzZXJzLmZpbmRJbmRleChmdW5jdGlvbiAoY3VyclVzZXIpIHsKICAgICAgICByZXR1cm4gdXNlci5faWQgPT09IGN1cnJVc2VyLl9pZDsKICAgICAgfSk7CiAgICAgIHN0YXRlLnVzZXJzLnNwbGljZShpZHgsIDEsIHVzZXIpOwogICAgfSwKICAgIGRlbGV0ZVVzZXI6IGZ1bmN0aW9uIGRlbGV0ZVVzZXIoc3RhdGUsIF9yZWY0KSB7CiAgICAgIHZhciB1c2VySWQgPSBfcmVmNC51c2VySWQ7CiAgICAgIHZhciBpZHggPSBzdGF0ZS51c2Vycy5maW5kSW5kZXgoZnVuY3Rpb24gKHVzZXIpIHsKICAgICAgICByZXR1cm4gdXNlci5faWQgPT09IHVzZXJJZDsKICAgICAgfSk7CiAgICAgIHN0YXRlLnVzZXJzLnNwbGljZShpZHgsIDEpOwogICAgfSwKICAgIGFkZFVzZXI6IGZ1bmN0aW9uIGFkZFVzZXIoc3RhdGUsIF9yZWY1KSB7CiAgICAgIHZhciB1c2VyID0gX3JlZjUudXNlcjsKICAgICAgc3RhdGUudXNlcnMudW5zaGlmdCh1c2VyKTsKICAgIH0KICB9LAogIGFjdGlvbnM6IHsKICAgIGxvYWRVc2VyczogZnVuY3Rpb24gbG9hZFVzZXJzKF9yZWY2KSB7CiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoKSB7CiAgICAgICAgdmFyIGNvbW1pdCwgdXNlcnM7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgY29tbWl0ID0gX3JlZjYuY29tbWl0OwogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDM7CiAgICAgICAgICAgICAgICByZXR1cm4gdXNlclNlcnZpY2UuZ2V0VXNlcnMoKTsKCiAgICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICAgICAgdXNlcnMgPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ3VzZXJzOicsIHVzZXJzKTsKICAgICAgICAgICAgICAgIGNvbW1pdCh7CiAgICAgICAgICAgICAgICAgIHR5cGU6ICdzZXRVc2VycycsCiAgICAgICAgICAgICAgICAgIHVzZXJzOiB1c2VycwogICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgIGNhc2UgNjoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUpOwogICAgICB9KSkoKTsKICAgIH0sCiAgICBsb2FkVXNlcjogZnVuY3Rpb24gbG9hZFVzZXIoX3JlZjcsIF9yZWY4KSB7CiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUyKCkgewogICAgICAgIHZhciBjb21taXQsIHVzZXJJZCwgdXNlcjsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTIkKF9jb250ZXh0MikgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDIucHJldiA9IF9jb250ZXh0Mi5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgY29tbWl0ID0gX3JlZjcuY29tbWl0OwogICAgICAgICAgICAgICAgdXNlcklkID0gX3JlZjgudXNlcklkOwogICAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSA0OwogICAgICAgICAgICAgICAgcmV0dXJuIHVzZXJTZXJ2aWNlLmdldEJ5SWQodXNlcklkKTsKCiAgICAgICAgICAgICAgY2FzZSA0OgogICAgICAgICAgICAgICAgdXNlciA9IF9jb250ZXh0Mi5zZW50OwogICAgICAgICAgICAgICAgY29tbWl0KHsKICAgICAgICAgICAgICAgICAgdHlwZTogJ3NldFVzZXInLAogICAgICAgICAgICAgICAgICB1c2VyOiB1c2VyCiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgY2FzZSA2OgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUyKTsKICAgICAgfSkpKCk7CiAgICB9LAogICAgcmVtb3ZlVXNlcjogZnVuY3Rpb24gcmVtb3ZlVXNlcihfcmVmOSwgX3JlZjEwKSB7CiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUzKCkgewogICAgICAgIHZhciBjb21taXQsIHVzZXJJZDsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTMkKF9jb250ZXh0MykgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDMucHJldiA9IF9jb250ZXh0My5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgY29tbWl0ID0gX3JlZjkuY29tbWl0OwogICAgICAgICAgICAgICAgdXNlcklkID0gX3JlZjEwLnVzZXJJZDsKICAgICAgICAgICAgICAgIF9jb250ZXh0My5uZXh0ID0gNDsKICAgICAgICAgICAgICAgIHJldHVybiB1c2VyU2VydmljZS5yZW1vdmUodXNlcklkKTsKCiAgICAgICAgICAgICAgY2FzZSA0OgogICAgICAgICAgICAgICAgY29tbWl0KHsKICAgICAgICAgICAgICAgICAgdHlwZTogJ3JlbW92ZVVzZXInLAogICAgICAgICAgICAgICAgICB1c2VySWQ6IHVzZXJJZAogICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgIGNhc2UgNToKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0My5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlMyk7CiAgICAgIH0pKSgpOwogICAgfSwKICAgIHVwYWR0ZVVzZXI6IGZ1bmN0aW9uIHVwYWR0ZVVzZXIoX3JlZjExLCBfcmVmMTIpIHsKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTQoKSB7CiAgICAgICAgdmFyIGNvbW1pdCwgdXNlciwgc2F2ZWRVc2VyOwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlNCQoX2NvbnRleHQ0KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0NC5wcmV2ID0gX2NvbnRleHQ0Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBjb21taXQgPSBfcmVmMTEuY29tbWl0OwogICAgICAgICAgICAgICAgdXNlciA9IF9yZWYxMi51c2VyOwogICAgICAgICAgICAgICAgX2NvbnRleHQ0Lm5leHQgPSA0OwogICAgICAgICAgICAgICAgcmV0dXJuIHVzZXJTZXJ2aWNlLnNhdmUodXNlcik7CgogICAgICAgICAgICAgIGNhc2UgNDoKICAgICAgICAgICAgICAgIHNhdmVkVXNlciA9IF9jb250ZXh0NC5zZW50OwogICAgICAgICAgICAgICAgY29tbWl0KHsKICAgICAgICAgICAgICAgICAgdHlwZTogJ3VwZGF0ZVVzZXInLAogICAgICAgICAgICAgICAgICB1c2VyOiBzYXZlZFVzZXIKICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0NC5hYnJ1cHQoInJldHVybiIsIHNhdmVkVXNlcik7CgogICAgICAgICAgICAgIGNhc2UgNzoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0NC5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlNCk7CiAgICAgIH0pKSgpOwogICAgfSwKICAgIGFkZFVzZXI6IGZ1bmN0aW9uIGFkZFVzZXIoX3JlZjEzLCBfcmVmMTQpIHsKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTUoKSB7CiAgICAgICAgdmFyIGNvbW1pdCwgdXNlciwgc2F2ZWRVc2VyOwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlNSQoX2NvbnRleHQ1KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0NS5wcmV2ID0gX2NvbnRleHQ1Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBjb21taXQgPSBfcmVmMTMuY29tbWl0OwogICAgICAgICAgICAgICAgdXNlciA9IF9yZWYxNC51c2VyOwogICAgICAgICAgICAgICAgX2NvbnRleHQ1Lm5leHQgPSA0OwogICAgICAgICAgICAgICAgcmV0dXJuIHVzZXJTZXJ2aWNlLnNhdmUodXNlcik7CgogICAgICAgICAgICAgIGNhc2UgNDoKICAgICAgICAgICAgICAgIHNhdmVkVXNlciA9IF9jb250ZXh0NS5zZW50OwogICAgICAgICAgICAgICAgY29tbWl0KHsKICAgICAgICAgICAgICAgICAgdHlwZTogJ2FkZFVzZXInLAogICAgICAgICAgICAgICAgICB1c2VyOiBzYXZlZFVzZXIKICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0NS5hYnJ1cHQoInJldHVybiIsIHNhdmVkVXNlcik7CgogICAgICAgICAgICAgIGNhc2UgNzoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0NS5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlNSk7CiAgICAgIH0pKSgpOwogICAgfQogIH0KfTs="},{"version":3,"sources":["/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/src/modules/user.store.js"],"names":["userService","userStore","state","users","currUser","getters","user","mutations","setUsers","setUser","console","log","updateUser","idx","findIndex","_id","splice","deleteUser","userId","addUser","unshift","actions","loadUsers","commit","getUsers","type","loadUser","getById","removeUser","remove","upadteUser","save","savedUser"],"mappings":"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","sourcesContent":["import { userService } from '@/services/user.service.js'\n\nexport const userStore = {\n  state: {\n    users: [],\n    currUser: null\n  },\n  getters: {\n    users(state) {\n      return state.users\n    },\n    user(state) {\n      return state.currUser\n    }\n  },\n  mutations: {\n    setUsers(state, { users }) {\n      state.users = users\n    },\n    setUser(state, { user }) {\n      state.currUser = user\n      console.log('state.currUser:', state.currUser)\n    },\n    updateUser(state, { user }) {\n      const idx = state.users.findIndex(currUser => user._id === currUser._id)\n      state.users.splice(idx, 1, user)\n    },\n    deleteUser(state, { userId }) {\n       const idx = state.users.findIndex(user => user._id === userId)\n      state.users.splice(idx, 1)\n    },\n    addUser(state, { user }) {\n      state.users.unshift(user)\n    }\n  },\n  actions: {\n    async loadUsers({commit}) {\n      const users = await userService.getUsers()\n      console.log('users:', users)\n      commit({ type: 'setUsers', users })\n    },\n    async loadUser({commit},{ userId }) {\n      const user = await userService.getById(userId)\n      commit({ type: 'setUser', user })\n    },\n    async removeUser({commit}, { userId }) {\n      await userService.remove(userId)\n    commit({ type: 'removeUser', userId })\n    },\n    async upadteUser({ commit }, { user }) {\n      const savedUser = await userService.save(user)\n      commit({ type: 'updateUser', user: savedUser })\n      return savedUser\n    },\n    async addUser({ commit }, { user }) {\n      const savedUser = await userService.save(user)\n      commit({ type: 'addUser', user: savedUser })\n      return savedUser\n    }\n  }\n}\n"]}]}