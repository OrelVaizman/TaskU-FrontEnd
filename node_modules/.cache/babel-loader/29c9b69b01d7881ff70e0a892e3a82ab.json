{"remainingRequest":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/babel-loader/lib/index.js!/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/src/views/task-details.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/src/views/task-details.vue","mtime":1606596465582},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmluZCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmZpbmQtaW5kZXgiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5mb3ItZWFjaCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LnNwbGljZSI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuZm9yLWVhY2giOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgdGFza1Bvc3RzIGZyb20gJ0AvY21wcy90YXNrLXBvc3RzJzsKaW1wb3J0IHRhc2tBY3Rpdml0aWVzIGZyb20gJ0AvY21wcy90YXNrLWFjdGl2aXRpZXMnOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ3Rhc2stZGV0YWlscycsCiAgcHJvcHM6IHsKICAgIHRhc2s6IHsKICAgICAgdHlwZTogT2JqZWN0CiAgICB9LAogICAgZ3JvdXBJZDogewogICAgICB0eXBlOiBTdHJpbmcKICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIGNsb3NlQnRuOiBmdW5jdGlvbiBjbG9zZUJ0bigpIHsKICAgICAgdGhpcy4kZW1pdCgnY2xvc2UnKTsKICAgICAgdGhpcy4kcm91dGVyLnB1c2goIi9ib2FyZC8iLmNvbmNhdCh0aGlzLiRyb3V0ZS5wYXJhbXMuYm9hcmRJZCkpOwogICAgfSwKICAgIHVwZGF0ZVRhc2tUeHQ6IGZ1bmN0aW9uIHVwZGF0ZVRhc2tUeHQoZXYpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIGNvbnNvbGUubG9nKCd0aGlzIGdyb3VwIGlkIHRhc2sgZGV0YWlscycsIHRoaXMuZ3JvdXBJZCk7CiAgICAgIHRoaXMudGFzay50eHQgPSBldi50YXJnZXQuaW5uZXJUZXh0OwogICAgICB2YXIgZ3JvdXBJZHggPSB0aGlzLmdldEdyb3VwSWR4QnlJZCgpOwogICAgICB2YXIgZ3JvdXAgPSB0aGlzLmJvYXJkLmdyb3Vwc1tncm91cElkeF07CiAgICAgIHZhciB0YXNrSWR4ID0gZ3JvdXAudGFza3MuZmluZEluZGV4KGZ1bmN0aW9uICh0YXNrKSB7CiAgICAgICAgcmV0dXJuIHRhc2suaWQgPT09IF90aGlzLnRhc2suaWQ7CiAgICAgIH0pOwogICAgICBncm91cC50YXNrcy5zcGxpY2UodGFza0lkeCwgMSwgdGhpcy50YXNrKTsKICAgICAgdGhpcy4kc3RvcmUuZGlzcGF0Y2goewogICAgICAgIHR5cGU6ICdzYXZlQm9hcmQnLAogICAgICAgIGJvYXJkOiB0aGlzLmJvYXJkCiAgICAgIH0pOwogICAgfSwKICAgIGdldEdyb3VwSWR4QnlJZDogZnVuY3Rpb24gZ2V0R3JvdXBJZHhCeUlkKCkgewogICAgICB2YXIgX3RoaXMyID0gdGhpczsKCiAgICAgIHZhciBpZHggPSB0aGlzLmJvYXJkLmdyb3Vwcy5maW5kSW5kZXgoZnVuY3Rpb24gKGdyb3VwKSB7CiAgICAgICAgcmV0dXJuIGdyb3VwLmlkID09PSBfdGhpczIuZ3JvdXBJZDsKICAgICAgfSk7CiAgICAgIHJldHVybiBpZHg7CiAgICB9LAogICAgZ2V0VGFza1BhdGg6IGZ1bmN0aW9uIGdldFRhc2tQYXRoKCkgewogICAgICB2YXIgX3RoaXMzID0gdGhpczsKCiAgICAgIHZhciBncm91cElkeCA9IHRoaXMuZ2V0R3JvdXBJZHhCeUlkKCk7CiAgICAgIHZhciBncm91cCA9IHRoaXMuYm9hcmQuZ3JvdXBzW2dyb3VwSWR4XTsKICAgICAgdmFyIHRhc2tJZHggPSBncm91cC50YXNrcy5maW5kSW5kZXgoZnVuY3Rpb24gKHRhc2spIHsKICAgICAgICByZXR1cm4gdGFzay5pZCA9PT0gX3RoaXMzLnRhc2suaWQ7CiAgICAgIH0pOwogICAgICB2YXIgdGFzayA9IGdyb3VwLnRhc2tzW3Rhc2tJZHhdOwogICAgICByZXR1cm4gdGFzazsKICAgIH0sCiAgICB1cGRhdGVQb3N0czogZnVuY3Rpb24gdXBkYXRlUG9zdHMocG9zdHMpIHsKICAgICAgdmFyIHRhc2sgPSB0aGlzLmdldFRhc2tQYXRoKCk7CiAgICAgIHRhc2sucG9zdHMgPSBwb3N0czsKICAgICAgdGhpcy4kc3RvcmUuZGlzcGF0Y2goewogICAgICAgIHR5cGU6ICdzYXZlQm9hcmQnLAogICAgICAgIGJvYXJkOiB0aGlzLmJvYXJkCiAgICAgIH0pOwogICAgfSwKICAgIGdldFRhc2tCeUlkOiBmdW5jdGlvbiBnZXRUYXNrQnlJZCgpIHsKICAgICAgdmFyIHRhc2s7CiAgICAgIHZhciB0YXNrSWQgPSB0aGlzLiRyb3V0ZS5wYXJhbXMudGFza0lkOwogICAgICB0aGlzLmJvYXJkLmdyb3Vwcy5mb3JFYWNoKGZ1bmN0aW9uIChncm91cCkgewogICAgICAgIHRhc2sgPSBncm91cC50YXNrcy5maW5kKGZ1bmN0aW9uICh0YXNrKSB7CiAgICAgICAgICByZXR1cm4gdGFzay5pZCA9PT0gdGFza0lkOwogICAgICAgIH0pOwogICAgICB9KTsKICAgICAgcmV0dXJuIHRhc2s7CiAgICB9CiAgfSwKICBjb21wdXRlZDogewogICAgYm9hcmQ6IGZ1bmN0aW9uIGJvYXJkKCkgewogICAgICByZXR1cm4gdGhpcy4kc3RvcmUuZ2V0dGVycy5ib2FyZDsKICAgIH0sCiAgICBsb2dnZWRJblVzZXI6IGZ1bmN0aW9uIGxvZ2dlZEluVXNlcigpIHsKICAgICAgcmV0dXJuIHRoaXMuJHN0b3JlLmdldHRlcnMubG9nZ2VkSW5Vc2VyOwogICAgfQogIH0sCiAgLy8gd2F0Y2g6IHsKICAvLyAgICAgJyRyb3V0ZS5wYXJhbXMudGFza0lkJygpIHsKICAvLyAgICAgICAgIGNvbnNvbGUubG9nKHRoaXMuJHJvdXRlLnBhcmFtcy50YXNrSWQpCiAgLy8gICAgICAgICBjb25zdCB0YXNrID0gdGhpcy5nZXRUYXNrQnlJZCgpCiAgLy8gICAgICAgICBjb25zb2xlLmxvZygndGFzaycsIHRhc2spCiAgLy8gICAgIH0sCiAgLy8gfSwKICBjb21wb25lbnRzOiB7CiAgICB0YXNrUG9zdHM6IHRhc2tQb3N0cywKICAgIHRhc2tBY3Rpdml0aWVzOiB0YXNrQWN0aXZpdGllcwogIH0KfTs="},{"version":3,"sources":["task-details.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <section class=\"task-details-section\">\n        <div class=\"top-bar\">\n            <i @click.stop=\"closeBtn\" class=\"fas fa-times\"></i>\n            <h1\n                @blur.stop=\"updateTaskTxt\"\n                @keyup.enter=\"updateTaskTxt\"\n                contenteditable\n            >\n                {{ task.txt }}\n            </h1>\n        </div>\n        <el-tabs>\n            <el-tab-pane label=\"Task posts\">\n                <task-posts @updatePosts=\"updatePosts\" :posts=\"task.posts\" />\n            </el-tab-pane>\n            <el-tab-pane label=\"Task activities\">\n                <task-activities :activities=\"task.activities\" />\n            </el-tab-pane>\n        </el-tabs>\n        <!-- <h1>{{ task }}</h1> -->\n    </section>\n</template>\n\n<script>\nimport taskPosts from '@/cmps/task-posts'\nimport taskActivities from '@/cmps/task-activities'\nexport default {\n    name: 'task-details',\n    props: {\n        task: {\n            type: Object,\n        },\n        groupId: {\n            type: String,\n        },\n    },\n    methods: {\n        closeBtn() {\n            this.$emit('close')\n            this.$router.push(`/board/${this.$route.params.boardId}`)\n        },\n        updateTaskTxt(ev) {\n            console.log('this group id task details', this.groupId)\n            this.task.txt = ev.target.innerText\n            const groupIdx = this.getGroupIdxById()\n            const group = this.board.groups[groupIdx]\n            const taskIdx = group.tasks.findIndex(\n                (task) => task.id === this.task.id\n            )\n            group.tasks.splice(taskIdx, 1, this.task)\n            this.$store.dispatch({\n                type: 'saveBoard',\n                board: this.board,\n            })\n        },\n        getGroupIdxById() {\n            const idx = this.board.groups.findIndex(\n                (group) => group.id === this.groupId\n            )\n            return idx\n        },\n        getTaskPath() {\n            const groupIdx = this.getGroupIdxById()\n            const group = this.board.groups[groupIdx]\n            const taskIdx = group.tasks.findIndex(\n                (task) => task.id === this.task.id\n            )\n            const task = group.tasks[taskIdx]\n            return task\n        },\n        updatePosts(posts) {\n            const task = this.getTaskPath()\n            task.posts = posts\n            this.$store.dispatch({\n                type: 'saveBoard',\n                board: this.board,\n            })\n        },\n        getTaskById() {\n            let task\n            const taskId = this.$route.params.taskId\n            this.board.groups.forEach((group) => {\n                \n                task = group.tasks.find((task) => task.id === taskId)\n            })\n            return task\n        },\n    },\n    computed: {\n        board() {\n            return this.$store.getters.board\n        },\n        loggedInUser() {\n            return this.$store.getters.loggedInUser\n        },\n    },\n    // watch: {\n    //     '$route.params.taskId'() {\n    //         console.log(this.$route.params.taskId)\n    //         const task = this.getTaskById()\n    //         console.log('task', task)\n    //     },\n    // },\n    components: {\n        taskPosts,\n        taskActivities,\n    },\n}\n</script>\n"],"sourceRoot":"src/views"}]}