{"remainingRequest":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/babel-loader/lib/index.js!/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/eslint-loader/index.js??ref--13-0!/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/src/modules/board.store.js","dependencies":[{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/src/modules/board.store.js","mtime":1606346481195},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaW5jbHVkZXMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5tYXAiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5mdW5jdGlvbi5uYW1lIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLmluY2x1ZGVzIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiL1VzZXJzL29yZWx2YWl6bWFuL0Rlc2t0b3AvZGV2L0ZpbmFsU3ByaW50L3Rhc2t1LWZyb250ZW5kL1Rhc2tVLWZyb250ZW5kL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKaW1wb3J0IHsgYm9hcmRTZXJ2aWNlIH0gZnJvbSAnQC9zZXJ2aWNlcy9ib2FyZC5zZXJ2aWNlLmpzJzsKZXhwb3J0IHZhciBib2FyZFN0b3JlID0gewogIHN0YXRlOiB7CiAgICBib2FyZHM6IFtdLAogICAgY3VyckJvYXJkOiBudWxsLAogICAgc2VhcmNoQm9hcmQ6IG51bGwsCiAgICBmaWx0ZXJCeTogbnVsbAogIH0sCiAgZ2V0dGVyczogewogICAgYm9hcmRzOiBmdW5jdGlvbiBib2FyZHMoc3RhdGUpIHsKICAgICAgaWYgKCFzdGF0ZS5zZWFyY2hCb2FyZCkgcmV0dXJuIHN0YXRlLmJvYXJkczsKICAgICAgcmV0dXJuIHN0YXRlLmJvYXJkcy5maWx0ZXIoZnVuY3Rpb24gKGJvYXJkKSB7CiAgICAgICAgcmV0dXJuIGJvYXJkLm5hbWUudG9Mb3dlckNhc2UoKS5pbmNsdWRlcyhzdGF0ZS5zZWFyY2hCb2FyZC50b0xvd2VyQ2FzZSgpKTsKICAgICAgfSk7CiAgICB9LAogICAgYm9hcmQ6IGZ1bmN0aW9uIGJvYXJkKHN0YXRlKSB7CiAgICAgIHJldHVybiBzdGF0ZS5jdXJyQm9hcmQ7CiAgICB9CiAgfSwKICBtdXRhdGlvbnM6IHsKICAgIHNldEJvYXJkczogZnVuY3Rpb24gc2V0Qm9hcmRzKHN0YXRlLCBfcmVmKSB7CiAgICAgIHZhciBib2FyZHMgPSBfcmVmLmJvYXJkczsKICAgICAgdmFyIG1pbmlCb2FyZHMgPSBib2FyZHMubWFwKGZ1bmN0aW9uIChib2FyZCkgewogICAgICAgIGJvYXJkID0gewogICAgICAgICAgX2lkOiBib2FyZC5faWQsCiAgICAgICAgICBuYW1lOiBib2FyZC5uYW1lCiAgICAgICAgfTsKICAgICAgICByZXR1cm4gYm9hcmQ7CiAgICAgIH0pOwogICAgICBzdGF0ZS5ib2FyZHMgPSBtaW5pQm9hcmRzOwogICAgfSwKICAgIHNldEJvYXJkOiBmdW5jdGlvbiBzZXRCb2FyZChzdGF0ZSwgX3JlZjIpIHsKICAgICAgdmFyIGJvYXJkID0gX3JlZjIuYm9hcmQ7CiAgICAgIHN0YXRlLmN1cnJCb2FyZCA9IGJvYXJkOwogICAgfSwKICAgIHJlbW92ZUJvYXJkOiBmdW5jdGlvbiByZW1vdmVCb2FyZChzdGF0ZSwgX3JlZjMpIHsKICAgICAgdmFyIGJvYXJkSWQgPSBfcmVmMy5ib2FyZElkOwogICAgICBzdGF0ZS5ib2FyZHMgPSBzdGF0ZS5ib2FyZHMuZmlsdGVyKGZ1bmN0aW9uIChib2FyZCkgewogICAgICAgIHJldHVybiBib2FyZC5faWQgIT09IGJvYXJkSWQ7CiAgICAgIH0pOwogICAgfSwKICAgIHNldFNlYXJjaDogZnVuY3Rpb24gc2V0U2VhcmNoKHN0YXRlLCBfcmVmNCkgewogICAgICB2YXIgc2VhcmNoQm9hcmQgPSBfcmVmNC5zZWFyY2hCb2FyZDsKICAgICAgY29uc29sZS5sb2coJ3NlYXJjaEJvYXJkOicsIHNlYXJjaEJvYXJkKTsKICAgICAgc3RhdGUuc2VhcmNoQm9hcmQgPSBzZWFyY2hCb2FyZDsKICAgICAgY29uc29sZS5sb2coJ3N0YXRlLnNlYXJjaEJvYXJkOicsIHN0YXRlLnNlYXJjaEJvYXJkKTsKICAgIH0KICB9LAogIGFjdGlvbnM6IHsKICAgIGxvYWRCb2FyZHM6IGZ1bmN0aW9uIGxvYWRCb2FyZHMoY29udGV4dCkgewogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICAgIHZhciBib2FyZHM7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ2NvbnRleHQ6JywgY29udGV4dCk7CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMzsKICAgICAgICAgICAgICAgIHJldHVybiBib2FyZFNlcnZpY2UucXVlcnkoKTsKCiAgICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICAgICAgYm9hcmRzID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgICAgICAgIGNvbnRleHQuY29tbWl0KHsKICAgICAgICAgICAgICAgICAgdHlwZTogJ3NldEJvYXJkcycsCiAgICAgICAgICAgICAgICAgIGJvYXJkczogYm9hcmRzCiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgY2FzZSA1OgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZSk7CiAgICAgIH0pKSgpOwogICAgfSwKICAgIGxvYWRCb2FyZDogZnVuY3Rpb24gbG9hZEJvYXJkKF9yZWY1LCBfcmVmNikgewogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMigpIHsKICAgICAgICB2YXIgY29tbWl0LCBib2FyZElkLCBib2FyZDsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTIkKF9jb250ZXh0MikgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDIucHJldiA9IF9jb250ZXh0Mi5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgY29tbWl0ID0gX3JlZjUuY29tbWl0OwogICAgICAgICAgICAgICAgYm9hcmRJZCA9IF9yZWY2LmJvYXJkSWQ7CiAgICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDQ7CiAgICAgICAgICAgICAgICByZXR1cm4gYm9hcmRTZXJ2aWNlLmdldEJ5SWQoYm9hcmRJZCk7CgogICAgICAgICAgICAgIGNhc2UgNDoKICAgICAgICAgICAgICAgIGJvYXJkID0gX2NvbnRleHQyLnNlbnQ7CiAgICAgICAgICAgICAgICBjb21taXQoewogICAgICAgICAgICAgICAgICB0eXBlOiAnc2V0Qm9hcmQnLAogICAgICAgICAgICAgICAgICBib2FyZDogYm9hcmQKICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICBjYXNlIDY6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZTIpOwogICAgICB9KSkoKTsKICAgIH0sCiAgICByZW1vdmVCb2FyZDogZnVuY3Rpb24gcmVtb3ZlQm9hcmQoX3JlZjcsIF9yZWY4KSB7CiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUzKCkgewogICAgICAgIHZhciBjb21taXQsIGJvYXJkSWQ7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUzJChfY29udGV4dDMpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQzLnByZXYgPSBfY29udGV4dDMubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIGNvbW1pdCA9IF9yZWY3LmNvbW1pdDsKICAgICAgICAgICAgICAgIGJvYXJkSWQgPSBfcmVmOC5ib2FyZElkOwogICAgICAgICAgICAgICAgX2NvbnRleHQzLm5leHQgPSA0OwogICAgICAgICAgICAgICAgcmV0dXJuIGJvYXJkU2VydmljZS5yZW1vdmUoYm9hcmRJZCk7CgogICAgICAgICAgICAgIGNhc2UgNDoKICAgICAgICAgICAgICAgIGNvbW1pdCh7CiAgICAgICAgICAgICAgICAgIHR5cGU6ICdyZW1vdmVCb2FyZCcsCiAgICAgICAgICAgICAgICAgIGJvYXJkSWQ6IGJvYXJkSWQKICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICBjYXNlIDU6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDMuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZTMpOwogICAgICB9KSkoKTsKICAgIH0sCiAgICBzYXZlQm9hcmQ6IGZ1bmN0aW9uIHNhdmVCb2FyZChfcmVmOSwgX3JlZjEwKSB7CiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWU0KCkgewogICAgICAgIHZhciBjb21taXQsIGRpc3BhdGNoLCBib2FyZCwgc2F2ZWRCb2FyZDsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTQkKF9jb250ZXh0NCkgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDQucHJldiA9IF9jb250ZXh0NC5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgY29tbWl0ID0gX3JlZjkuY29tbWl0LCBkaXNwYXRjaCA9IF9yZWY5LmRpc3BhdGNoOwogICAgICAgICAgICAgICAgYm9hcmQgPSBfcmVmMTAuYm9hcmQ7CiAgICAgICAgICAgICAgICBfY29udGV4dDQubmV4dCA9IDQ7CiAgICAgICAgICAgICAgICByZXR1cm4gYm9hcmRTZXJ2aWNlLnNhdmUoYm9hcmQpOwoKICAgICAgICAgICAgICBjYXNlIDQ6CiAgICAgICAgICAgICAgICBzYXZlZEJvYXJkID0gX2NvbnRleHQ0LnNlbnQ7CgogICAgICAgICAgICAgICAgaWYgKGJvYXJkLl9pZCkgewogICAgICAgICAgICAgICAgICBjb21taXQoewogICAgICAgICAgICAgICAgICAgIHR5cGU6ICdzZXRCb2FyZCcsCiAgICAgICAgICAgICAgICAgICAgYm9hcmQ6IHNhdmVkQm9hcmQKICAgICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygnc2F2ZWRCb2FyZDonLCBzYXZlZEJvYXJkKTsKICAgICAgICAgICAgICAgICAgZGlzcGF0Y2goewogICAgICAgICAgICAgICAgICAgIHR5cGU6ICdsb2FkQm9hcmRzJwogICAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgY2FzZSA2OgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQ0LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWU0KTsKICAgICAgfSkpKCk7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/src/modules/board.store.js"],"names":["boardService","boardStore","state","boards","currBoard","searchBoard","filterBy","getters","filter","board","name","toLowerCase","includes","mutations","setBoards","miniBoards","map","_id","setBoard","removeBoard","boardId","setSearch","console","log","actions","loadBoards","context","query","commit","type","loadBoard","getById","remove","saveBoard","dispatch","save","savedBoard"],"mappings":"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","sourcesContent":["import { boardService } from '@/services/board.service.js';\nexport const boardStore = {\n    state: {\n        boards: [],\n        currBoard: null,\n        searchBoard:null,\n        filterBy: null,\n    },\n    getters: {\n        boards(state) {\n            if(!state.searchBoard) return state.boards;\n            return state.boards.filter(board=>board.name.toLowerCase().includes(state.searchBoard.toLowerCase()))\n        },\n        board(state) {\n            return state.currBoard;\n        },\n    },\n    mutations: {\n        setBoards(state, { boards }) {\n            const miniBoards = boards.map((board) => {\n                board = { _id: board._id, name: board.name };\n                return board;\n            });\n            state.boards = miniBoards;\n        },\n        setBoard(state, { board }) {\n            state.currBoard = board;\n        },\n        removeBoard(state, { boardId }) {\n            state.boards = state.boards.filter((board) => board._id !== boardId);\n        },\n        setSearch(state,{searchBoard}){\n            console.log('searchBoard:', searchBoard)\n            state.searchBoard = searchBoard\n            console.log('state.searchBoard:', state.searchBoard)\n        }\n\n    },\n    actions: {\n        async loadBoards(context) {\n            console.log('context:', context)\n            const boards = await boardService.query();\n            context.commit({ type: 'setBoards', boards });\n        },\n        async loadBoard({ commit }, { boardId }) {\n            const board = await boardService.getById(boardId);\n            commit({ type: 'setBoard', board });\n        },\n        async removeBoard({ commit }, { boardId }) {\n            await boardService.remove(boardId);\n            commit({ type: 'removeBoard', boardId });\n        },\n        async saveBoard({ commit, dispatch }, { board }) {\n            const savedBoard = await boardService.save(board);\n            if (board._id) {\n                commit({ type: 'setBoard', board: savedBoard })\n            } else {\n                console.log('savedBoard:', savedBoard)\n                dispatch({ type: 'loadBoards' })\n            }\n        },\n    }\n};\n"]}]}