{"remainingRequest":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/babel-loader/lib/index.js!/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/eslint-loader/index.js??ref--13-0!/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/src/modules/user.store.js","dependencies":[{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/src/modules/user.store.js","mtime":1606384987846},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmluZC1pbmRleCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LnNwbGljZSI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lIjsKaW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9Vc2Vycy9vcmVsdmFpem1hbi9EZXNrdG9wL2Rldi9GaW5hbFNwcmludC90YXNrdS1mcm9udGVuZC9UYXNrVS1mcm9udGVuZC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7CmltcG9ydCB7IHVzZXJTZXJ2aWNlIH0gZnJvbSAnQC9zZXJ2aWNlcy91c2VyLnNlcnZpY2UuanMnOwpleHBvcnQgdmFyIHVzZXJTdG9yZSA9IHsKICBzdGF0ZTogewogICAgdXNlcnM6IFtdLAogICAgY3VyclVzZXI6IG51bGwKICB9LAogIGdldHRlcnM6IHsKICAgIHVzZXJzOiBmdW5jdGlvbiB1c2VycyhzdGF0ZSkgewogICAgICByZXR1cm4gc3RhdGUudXNlcnM7CiAgICB9LAogICAgdXNlcjogZnVuY3Rpb24gdXNlcihzdGF0ZSkgewogICAgICByZXR1cm4gc3RhdGUuY3VyclVzZXI7CiAgICB9CiAgfSwKICBtdXRhdGlvbnM6IHsKICAgIHNldFVzZXJzOiBmdW5jdGlvbiBzZXRVc2VycyhzdGF0ZSwgX3JlZikgewogICAgICB2YXIgdXNlcnMgPSBfcmVmLnVzZXJzOwogICAgICBzdGF0ZS51c2VycyA9IHVzZXJzOwogICAgfSwKICAgIHNldFVzZXI6IGZ1bmN0aW9uIHNldFVzZXIoc3RhdGUsIF9yZWYyKSB7CiAgICAgIHZhciB1c2VyID0gX3JlZjIudXNlcjsKICAgICAgc3RhdGUuY3VyclVzZXIgPSB1c2VyOwogICAgfSwKICAgIHVwZGF0ZVVzZXI6IGZ1bmN0aW9uIHVwZGF0ZVVzZXIoc3RhdGUsIF9yZWYzKSB7CiAgICAgIHZhciB1c2VyID0gX3JlZjMudXNlcjsKICAgICAgdmFyIGlkeCA9IHN0YXRlLnVzZXJzLmZpbmRJbmRleChmdW5jdGlvbiAoY3VyclVzZXIpIHsKICAgICAgICByZXR1cm4gdXNlci5faWQgPT09IGN1cnJVc2VyLl9pZDsKICAgICAgfSk7CiAgICAgIHN0YXRlLnVzZXJzLnNwbGljZShpZHgsIDEsIHVzZXIpOwogICAgfSwKICAgIGRlbGV0ZVVzZXI6IGZ1bmN0aW9uIGRlbGV0ZVVzZXIoc3RhdGUsIF9yZWY0KSB7CiAgICAgIHZhciB1c2VySWQgPSBfcmVmNC51c2VySWQ7CiAgICAgIHZhciBpZHggPSBzdGF0ZS51c2Vycy5maW5kSW5kZXgoZnVuY3Rpb24gKHVzZXIpIHsKICAgICAgICByZXR1cm4gdXNlci5faWQgPT09IHVzZXJJZDsKICAgICAgfSk7CiAgICAgIHN0YXRlLnVzZXJzLnNwbGljZShpZHgsIDEpOwogICAgfSwKICAgIGFkZFVzZXI6IGZ1bmN0aW9uIGFkZFVzZXIoc3RhdGUsIF9yZWY1KSB7CiAgICAgIHZhciB1c2VyID0gX3JlZjUudXNlcjsKICAgICAgc3RhdGUudXNlcnMudW5zaGlmdCh1c2VyKTsKICAgIH0KICB9LAogIGFjdGlvbnM6IHsKICAgIGxvYWRVc2VyczogZnVuY3Rpb24gbG9hZFVzZXJzKF9yZWY2KSB7CiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoKSB7CiAgICAgICAgdmFyIGNvbW1pdCwgdXNlcnM7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgY29tbWl0ID0gX3JlZjYuY29tbWl0OwogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDM7CiAgICAgICAgICAgICAgICByZXR1cm4gdXNlclNlcnZpY2UuZ2V0VXNlcnMoKTsKCiAgICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICAgICAgdXNlcnMgPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICAgICAgY29tbWl0KHsKICAgICAgICAgICAgICAgICAgdHlwZTogJ3NldFVzZXJzJywKICAgICAgICAgICAgICAgICAgdXNlcnM6IHVzZXJzCiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgY2FzZSA1OgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZSk7CiAgICAgIH0pKSgpOwogICAgfSwKICAgIGxvYWRVc2VyOiBmdW5jdGlvbiBsb2FkVXNlcihfcmVmNywgX3JlZjgpIHsKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTIoKSB7CiAgICAgICAgdmFyIGNvbW1pdCwgdXNlcklkLCB1c2VyOwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMiQoX2NvbnRleHQyKSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0Mi5wcmV2ID0gX2NvbnRleHQyLm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBjb21taXQgPSBfcmVmNy5jb21taXQ7CiAgICAgICAgICAgICAgICB1c2VySWQgPSBfcmVmOC51c2VySWQ7CiAgICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDQ7CiAgICAgICAgICAgICAgICByZXR1cm4gdXNlclNlcnZpY2UuZ2V0QnlJZCh1c2VySWQpOwoKICAgICAgICAgICAgICBjYXNlIDQ6CiAgICAgICAgICAgICAgICB1c2VyID0gX2NvbnRleHQyLnNlbnQ7CiAgICAgICAgICAgICAgICBjb21taXQoewogICAgICAgICAgICAgICAgICB0eXBlOiAnc2V0VXNlcicsCiAgICAgICAgICAgICAgICAgIHVzZXI6IHVzZXIKICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICBjYXNlIDY6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZTIpOwogICAgICB9KSkoKTsKICAgIH0sCiAgICByZW1vdmVVc2VyOiBmdW5jdGlvbiByZW1vdmVVc2VyKF9yZWY5LCBfcmVmMTApIHsKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTMoKSB7CiAgICAgICAgdmFyIGNvbW1pdCwgdXNlcklkOwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMyQoX2NvbnRleHQzKSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0My5wcmV2ID0gX2NvbnRleHQzLm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBjb21taXQgPSBfcmVmOS5jb21taXQ7CiAgICAgICAgICAgICAgICB1c2VySWQgPSBfcmVmMTAudXNlcklkOwogICAgICAgICAgICAgICAgX2NvbnRleHQzLm5leHQgPSA0OwogICAgICAgICAgICAgICAgcmV0dXJuIHVzZXJTZXJ2aWNlLnJlbW92ZSh1c2VySWQpOwoKICAgICAgICAgICAgICBjYXNlIDQ6CiAgICAgICAgICAgICAgICBjb21taXQoewogICAgICAgICAgICAgICAgICB0eXBlOiAncmVtb3ZlVXNlcicsCiAgICAgICAgICAgICAgICAgIHVzZXJJZDogdXNlcklkCiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgY2FzZSA1OgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQzLnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUzKTsKICAgICAgfSkpKCk7CiAgICB9LAogICAgdXBhZHRlVXNlcjogZnVuY3Rpb24gdXBhZHRlVXNlcihfcmVmMTEsIF9yZWYxMikgewogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlNCgpIHsKICAgICAgICB2YXIgY29tbWl0LCB1c2VyLCBzYXZlZFVzZXI7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWU0JChfY29udGV4dDQpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQ0LnByZXYgPSBfY29udGV4dDQubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIGNvbW1pdCA9IF9yZWYxMS5jb21taXQ7CiAgICAgICAgICAgICAgICB1c2VyID0gX3JlZjEyLnVzZXI7CiAgICAgICAgICAgICAgICBfY29udGV4dDQubmV4dCA9IDQ7CiAgICAgICAgICAgICAgICByZXR1cm4gdXNlclNlcnZpY2Uuc2F2ZSh1c2VyKTsKCiAgICAgICAgICAgICAgY2FzZSA0OgogICAgICAgICAgICAgICAgc2F2ZWRVc2VyID0gX2NvbnRleHQ0LnNlbnQ7CiAgICAgICAgICAgICAgICBjb21taXQoewogICAgICAgICAgICAgICAgICB0eXBlOiAndXBkYXRlVXNlcicsCiAgICAgICAgICAgICAgICAgIHVzZXI6IHNhdmVkVXNlcgogICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQ0LmFicnVwdCgicmV0dXJuIiwgc2F2ZWRVc2VyKTsKCiAgICAgICAgICAgICAgY2FzZSA3OgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQ0LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWU0KTsKICAgICAgfSkpKCk7CiAgICB9LAogICAgYWRkVXNlcjogZnVuY3Rpb24gYWRkVXNlcihfcmVmMTMsIF9yZWYxNCkgewogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlNSgpIHsKICAgICAgICB2YXIgY29tbWl0LCB1c2VyLCBzYXZlZFVzZXI7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWU1JChfY29udGV4dDUpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQ1LnByZXYgPSBfY29udGV4dDUubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIGNvbW1pdCA9IF9yZWYxMy5jb21taXQ7CiAgICAgICAgICAgICAgICB1c2VyID0gX3JlZjE0LnVzZXI7CiAgICAgICAgICAgICAgICBfY29udGV4dDUubmV4dCA9IDQ7CiAgICAgICAgICAgICAgICByZXR1cm4gdXNlclNlcnZpY2Uuc2F2ZSh1c2VyKTsKCiAgICAgICAgICAgICAgY2FzZSA0OgogICAgICAgICAgICAgICAgc2F2ZWRVc2VyID0gX2NvbnRleHQ1LnNlbnQ7CiAgICAgICAgICAgICAgICBjb21taXQoewogICAgICAgICAgICAgICAgICB0eXBlOiAnYWRkVXNlcicsCiAgICAgICAgICAgICAgICAgIHVzZXI6IHNhdmVkVXNlcgogICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQ1LmFicnVwdCgicmV0dXJuIiwgc2F2ZWRVc2VyKTsKCiAgICAgICAgICAgICAgY2FzZSA3OgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQ1LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWU1KTsKICAgICAgfSkpKCk7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/src/modules/user.store.js"],"names":["userService","userStore","state","users","currUser","getters","user","mutations","setUsers","setUser","updateUser","idx","findIndex","_id","splice","deleteUser","userId","addUser","unshift","actions","loadUsers","commit","getUsers","type","loadUser","getById","removeUser","remove","upadteUser","save","savedUser"],"mappings":";;;;AAAA,SAASA,WAAT,QAA4B,4BAA5B;AAEA,OAAO,IAAMC,SAAS,GAAG;AACvBC,EAAAA,KAAK,EAAE;AACLC,IAAAA,KAAK,EAAE,EADF;AAELC,IAAAA,QAAQ,EAAE;AAFL,GADgB;AAKvBC,EAAAA,OAAO,EAAE;AACPF,IAAAA,KADO,iBACDD,KADC,EACM;AACX,aAAOA,KAAK,CAACC,KAAb;AACD,KAHM;AAIPG,IAAAA,IAJO,gBAIFJ,KAJE,EAIK;AACV,aAAOA,KAAK,CAACE,QAAb;AACD;AANM,GALc;AAavBG,EAAAA,SAAS,EAAE;AACTC,IAAAA,QADS,oBACAN,KADA,QACkB;AAAA,UAATC,KAAS,QAATA,KAAS;AACzBD,MAAAA,KAAK,CAACC,KAAN,GAAcA,KAAd;AACD,KAHQ;AAITM,IAAAA,OAJS,mBAIDP,KAJC,SAIgB;AAAA,UAARI,IAAQ,SAARA,IAAQ;AACvBJ,MAAAA,KAAK,CAACE,QAAN,GAAiBE,IAAjB;AACD,KANQ;AAOTI,IAAAA,UAPS,sBAOER,KAPF,SAOmB;AAAA,UAARI,IAAQ,SAARA,IAAQ;AAC1B,UAAMK,GAAG,GAAGT,KAAK,CAACC,KAAN,CAAYS,SAAZ,CAAsB,UAAAR,QAAQ;AAAA,eAAIE,IAAI,CAACO,GAAL,KAAaT,QAAQ,CAACS,GAA1B;AAAA,OAA9B,CAAZ;AACAX,MAAAA,KAAK,CAACC,KAAN,CAAYW,MAAZ,CAAmBH,GAAnB,EAAwB,CAAxB,EAA2BL,IAA3B;AACD,KAVQ;AAWTS,IAAAA,UAXS,sBAWEb,KAXF,SAWqB;AAAA,UAAVc,MAAU,SAAVA,MAAU;AAC5B,UAAML,GAAG,GAAGT,KAAK,CAACC,KAAN,CAAYS,SAAZ,CAAsB,UAAAN,IAAI;AAAA,eAAIA,IAAI,CAACO,GAAL,KAAaG,MAAjB;AAAA,OAA1B,CAAZ;AACAd,MAAAA,KAAK,CAACC,KAAN,CAAYW,MAAZ,CAAmBH,GAAnB,EAAwB,CAAxB;AACD,KAdQ;AAeTM,IAAAA,OAfS,mBAeDf,KAfC,SAegB;AAAA,UAARI,IAAQ,SAARA,IAAQ;AACvBJ,MAAAA,KAAK,CAACC,KAAN,CAAYe,OAAZ,CAAoBZ,IAApB;AACD;AAjBQ,GAbY;AAgCvBa,EAAAA,OAAO,EAAE;AACDC,IAAAA,SADC,4BACmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAATC,gBAAAA,MAAS,SAATA,MAAS;AAAA;AAAA,uBACJrB,WAAW,CAACsB,QAAZ,EADI;;AAAA;AAClBnB,gBAAAA,KADkB;AAExBkB,gBAAAA,MAAM,CAAC;AAAEE,kBAAAA,IAAI,EAAE,UAAR;AAAoBpB,kBAAAA,KAAK,EAALA;AAApB,iBAAD,CAAN;;AAFwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGzB,KAJM;AAKDqB,IAAAA,QALC,kCAK6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAApBH,gBAAAA,MAAoB,SAApBA,MAAoB;AAAVL,gBAAAA,MAAU,SAAVA,MAAU;AAAA;AAAA,uBACfhB,WAAW,CAACyB,OAAZ,CAAoBT,MAApB,CADe;;AAAA;AAC5BV,gBAAAA,IAD4B;AAElCe,gBAAAA,MAAM,CAAC;AAAEE,kBAAAA,IAAI,EAAE,SAAR;AAAmBjB,kBAAAA,IAAI,EAAJA;AAAnB,iBAAD,CAAN;;AAFkC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGnC,KARM;AASDoB,IAAAA,UATC,qCASgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAArBL,gBAAAA,MAAqB,SAArBA,MAAqB;AAAVL,gBAAAA,MAAU,UAAVA,MAAU;AAAA;AAAA,uBAC/BhB,WAAW,CAAC2B,MAAZ,CAAmBX,MAAnB,CAD+B;;AAAA;AAEvCK,gBAAAA,MAAM,CAAC;AAAEE,kBAAAA,IAAI,EAAE,YAAR;AAAsBP,kBAAAA,MAAM,EAANA;AAAtB,iBAAD,CAAN;;AAFuC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGtC,KAZM;AAaDY,IAAAA,UAbC,sCAagC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAApBP,gBAAAA,MAAoB,UAApBA,MAAoB;AAARf,gBAAAA,IAAQ,UAARA,IAAQ;AAAA;AAAA,uBACbN,WAAW,CAAC6B,IAAZ,CAAiBvB,IAAjB,CADa;;AAAA;AAC/BwB,gBAAAA,SAD+B;AAErCT,gBAAAA,MAAM,CAAC;AAAEE,kBAAAA,IAAI,EAAE,YAAR;AAAsBjB,kBAAAA,IAAI,EAAEwB;AAA5B,iBAAD,CAAN;AAFqC,kDAG9BA,SAH8B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAItC,KAjBM;AAkBDb,IAAAA,OAlBC,mCAkB6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAApBI,gBAAAA,MAAoB,UAApBA,MAAoB;AAARf,gBAAAA,IAAQ,UAARA,IAAQ;AAAA;AAAA,uBACVN,WAAW,CAAC6B,IAAZ,CAAiBvB,IAAjB,CADU;;AAAA;AAC5BwB,gBAAAA,SAD4B;AAElCT,gBAAAA,MAAM,CAAC;AAAEE,kBAAAA,IAAI,EAAE,SAAR;AAAmBjB,kBAAAA,IAAI,EAAEwB;AAAzB,iBAAD,CAAN;AAFkC,kDAG3BA,SAH2B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAInC;AAtBM;AAhCc,CAAlB","sourcesContent":["import { userService } from '@/services/user.service.js'\n\nexport const userStore = {\n  state: {\n    users: [],\n    currUser: null\n  },\n  getters: {\n    users(state) {\n      return state.users\n    },\n    user(state) {\n      return state.currUser\n    }\n  },\n  mutations: {\n    setUsers(state, { users }) {\n      state.users = users\n    },\n    setUser(state, { user }) {\n      state.currUser = user\n    },\n    updateUser(state, { user }) {\n      const idx = state.users.findIndex(currUser => user._id === currUser._id)\n      state.users.splice(idx, 1, user)\n    },\n    deleteUser(state, { userId }) {\n      const idx = state.users.findIndex(user => user._id === userId)\n      state.users.splice(idx, 1)\n    },\n    addUser(state, { user }) {\n      state.users.unshift(user)\n    }\n  },\n  actions: {\n    async loadUsers({commit}) {\n      const users = await userService.getUsers()\n      commit({ type: 'setUsers', users })\n    },\n    async loadUser({commit},{ userId }) {\n      const user = await userService.getById(userId)\n      commit({ type: 'setUser', user })\n    },\n    async removeUser({commit}, { userId }) {\n      await userService.remove(userId)\n    commit({ type: 'removeUser', userId })\n    },\n    async upadteUser({ commit }, { user }) {\n      const savedUser = await userService.save(user)\n      commit({ type: 'updateUser', user: savedUser })\n      return savedUser\n    },\n    async addUser({ commit }, { user }) {\n      const savedUser = await userService.save(user)\n      commit({ type: 'addUser', user: savedUser })\n      return savedUser\n    }\n  }\n}\n"]}]}