{"remainingRequest":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/babel-loader/lib/index.js!/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/eslint-loader/index.js??ref--13-0!/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/src/modules/board.store.js","dependencies":[{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/src/modules/board.store.js","mtime":1606776852217},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/src/modules/board.store.js"],"names":["boardService","boardStore","state","boards","currBoard","searchBoard","filterBy","status","priority","person","searchTerm","isLoading","getters","filter","board","name","toLowerCase","includes","console","log","filteredBoard","JSON","parse","stringify","groups","group","tasks","task","txt","length","forEach","members","member","_id","defaultBoardId","mutations","setBoards","miniBoards","map","setBoard","removeBoard","boardId","setSearch","setFilterBy","toggleIsLoading","actions","loadBoards","context","userId","user","query","commit","type","loadBoard","getById","setTimeout","remove","saveBoard","dispatch","rootGetters","guestUser","push","save","savedBoard"],"mappings":"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","sourcesContent":["import { boardService } from '@/services/board.service.js'\nexport const boardStore = {\n  state: {\n    boards: [],\n    currBoard: null,\n    searchBoard: null,\n    filterBy: { status: 'All', priority: 'All', person: 'All', searchTerm: '' },\n    isLoading: false\n  },\n  getters: {\n    boards(state) {\n      if (!state.searchBoard) return state.boards\n      return state.boards.filter(board =>\n        board.name.toLowerCase().includes(state.searchBoard.toLowerCase())\n      )\n    },\n    board(state) {\n      const filterBy = state.filterBy\n      console.log('filterBy:', filterBy)\n      let filteredBoard = JSON.parse(JSON.stringify(state.currBoard))\n      if (filterBy.status !== 'All') {\n        filteredBoard.groups.filter(group => {\n          group.tasks = group.tasks.filter(task => {\n            return task.status.txt === filterBy.status\n          })\n        })\n        filteredBoard.groups = filteredBoard.groups.filter(\n          group => (group = group.tasks.length !== 0)\n        )\n      }\n      if (filterBy.priority !== 'All') {\n        filteredBoard.groups.forEach(group => {\n          group.tasks = group.tasks.filter(task => {\n            return task.priority.txt === filterBy.priority\n          })\n        })\n        filteredBoard.groups = filteredBoard.groups.filter(\n          group => (group = group.tasks.length !== 0)\n        )\n      }\n      if (filterBy.person !== 'All') {\n        filteredBoard.groups.forEach(group => {\n          group.tasks = group.tasks.filter(task => {\n            task.members = task.members.filter(member => {\n              console.log('member:', member)\n              console.log('filterBy.person:', filterBy.person)\n              return member._id === filterBy.person\n            })\n          })\n        })\n      }\n      if (filterBy.searchTerm !== '') {\n        filteredBoard.groups.forEach(group => {\n          group.tasks = group.tasks.filter(task => {\n            return task.txt\n              .toLowerCase()\n              .includes(filterBy.searchTerm.toLowerCase())\n          })\n        })\n        filteredBoard.groups = filteredBoard.groups.filter(\n          group => (group = group.tasks.length !== 0)\n        )\n      }\n      console.log('filteredBoard:', filteredBoard)\n      // filteredBoard.groups.filter(group => group.tasks)\n      return filteredBoard\n    },\n    defaultBoardId(state) {\n      return state.boards[0]._id\n    },\n    filterBy(state) {\n      return JSON.parse(JSON.stringify(state.filterBy))\n    },\n    isLoading(state) {\n      return state.isLoading\n    }\n  },\n  mutations: {\n    setBoards(state, { boards }) {\n      const miniBoards = boards.map(board => {\n        board = { _id: board._id, name: board.name }\n        return board\n      })\n      state.boards = miniBoards\n    },\n    setBoard(state, { board }) {\n      state.currBoard = board\n    },\n    removeBoard(state, { boardId }) {\n      state.boards = state.boards.filter(board => board._id !== boardId)\n    },\n    setSearch(state, { searchBoard }) {\n      state.searchBoard = searchBoard\n    },\n    setFilterBy(state, { filterBy }) {\n      state.filterBy = filterBy\n    },\n    toggleIsLoading(state) {\n      state.isLoading = !state.isLoading\n    }\n  },\n  actions: {\n    async loadBoards(context) {\n      const userId = context.getters.user._id\n      console.log('UserId from board store @Boards loading:', userId)\n      const boards = await boardService.query(userId)\n      context.commit({ type: 'setBoards', boards })\n    },\n    async loadBoard({ commit }, { boardId }) {\n      commit({ type: 'toggleIsLoading' })\n      const board = await boardService.getById(boardId)\n      commit({ type: 'setBoard', board })\n      setTimeout(() => {\n        commit({ type: 'toggleIsLoading' })\n      }, 2000)\n    },\n    async removeBoard({ commit }, { boardId }) {\n      await boardService.remove(boardId)\n      commit({ type: 'removeBoard', boardId })\n    },\n    async saveBoard({ commit, dispatch, rootGetters }, { board }) {\n      console.log('board i got on store',board)\n      const guestUser = rootGetters.guestUser\n      const userId = rootGetters.user._id\n      //Avoiding guest user duplication in members parameter\n      if (userId !== guestUser._id) {\n        board.members.push(guestUser)\n      }\n      const savedBoard = await boardService.save(board)\n      if (board._id) {\n        commit({ type: 'setBoard', board: savedBoard })\n      } else {\n        console.log('im in the else')\n        dispatch({ type: 'loadBoards' })\n      }\n      return savedBoard._id\n    }\n  }\n}\n"]}]}