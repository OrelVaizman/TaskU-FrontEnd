{"remainingRequest":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/babel-loader/lib/index.js!/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/src/cmps/progress-bar.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/src/cmps/progress-bar.vue","mtime":1609778254052},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KZXhwb3J0IGRlZmF1bHQgewogIGNvbXBvbmVudHM6IHt9LAogIHByb3BzOiB7CiAgICBwcm9ncmVzc0JhckRhdGE6IHsKICAgICAgdHlwZTogT2JqZWN0CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["progress-bar.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AA4BA,eAAA;AACA,EAAA,UAAA,EAAA,EADA;AAEA,EAAA,KAAA,EAAA;AACA,IAAA,eAAA,EAAA;AACA,MAAA,IAAA,EAAA;AADA;AADA;AAFA,CAAA","sourcesContent":["<template>\n  <section class=\"progressbar flex\">\n    <div\n      class=\"item-progressbar\"\n      v-for=\"(status, idx) in progressBarData\"\n      :key=\"idx\"\n      v-tooltip.top=\"\n        status.name +\n          ' ' +\n          status.fraction +\n          ' ' +\n          Math.round(status.percentage) +\n          '%'\n      \"\n      :style=\"\n        'width:' +\n          status.percentage +\n          '%;' +\n          ' height:20px;' +\n          ' background-color:' +\n          status.statusColor +\n          ';'\n      \"\n    ></div>\n  </section>\n</template>\n\n<script>\nexport default {\n  components: {},\n  props: {\n    progressBarData: {\n      type: Object\n    }\n  }\n}\n</script>\n\n<style></style>\n"],"sourceRoot":"src/cmps"}]}