{"remainingRequest":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/babel-loader/lib/index.js!/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/src/cmps/task-preview.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/src/cmps/task-preview.vue","mtime":1606840767953},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["task-preview.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuGA,OAAA,UAAA,MAAA,oBAAA;AACA,SAAA,QAAA,QAAA,8BAAA;AACA,OAAA,WAAA,MAAA,gBAAA;AACA,SAAA,YAAA,QAAA,0BAAA;AACA,OAAA,MAAA,MAAA,QAAA;AAEA,eAAA;AACA,EAAA,UAAA,EAAA;AAAA,IAAA,WAAA,EAAA,WAAA;AAAA,IAAA,UAAA,EAAA;AAAA,GADA;AAEA,EAAA,IAAA,EAAA,cAFA;AAGA,EAAA,IAHA,kBAGA;AACA,WAAA;AACA,MAAA,QAAA,EAAA,IADA;AAEA,MAAA,gBAAA,EAAA,KAFA;AAGA,MAAA,cAAA,EAAA,KAHA;AAIA,MAAA,mBAAA,EAAA;AAJA,KAAA;AAMA,GAVA;AAWA,EAAA,KAAA,EAAA;AACA,IAAA,SAAA,EAAA,MADA;AAEA,IAAA,IAAA,EAAA,MAFA;AAGA,IAAA,QAAA,EAAA,KAHA;AAIA,IAAA,UAAA,EAAA,KAJA;AAKA,IAAA,OAAA,EAAA,MALA;AAMA,IAAA,YAAA,EAAA,CAAA,KAAA,EAAA,MAAA,CANA;AAOA,IAAA,QAAA,EAAA,MAPA;AAQA,IAAA,IAAA,EAAA;AARA,GAXA;AAqBA,EAAA,QAAA,EAAA;AACA,IAAA,WADA,yBACA;AACA,aAAA,KAAA,IAAA,CAAA,KAAA,CAAA,MAAA,GAAA,CAAA,GAAA,KAAA,GAAA,IAAA;AACA,KAHA;AAIA,IAAA,cAJA,4BAIA;AACA,aAAA,KAAA,IAAA,CAAA,KAAA,CAAA,MAAA,GAAA,CAAA,GAAA,iBAAA,GAAA,EAAA;AACA,KANA;AAOA,IAAA,aAPA,2BAOA;AACA,aAAA,KAAA,IAAA,CAAA,OAAA,CAAA,MAAA,GAAA,CAAA,GAAA,KAAA,GAAA,IAAA;AACA,KATA;AAUA,IAAA,OAVA,qBAUA;AACA,aAAA;AAAA,QAAA,eAAA,EAAA,KAAA;AAAA,OAAA;AACA,KAZA;AAaA,IAAA,oBAbA,kCAaA;AACA,UAAA,YAAA,GAAA,KAAA,YAAA;AACA,UAAA,WAAA,GAAA,KAAA,QAAA,CAAA,OAAA;;AACA,UAAA,WAAA,EAAA;AACA,YAAA,oBAAA,GAAA,YAAA,CAAA,MAAA,CAAA,UAAA,OAAA,EAAA;AACA,iBAAA,WAAA,CAAA,KAAA,CAAA,UAAA,OAAA,EAAA;AACA,mBAAA,OAAA,CAAA,GAAA,KAAA,OAAA,CAAA,GAAA;AACA,WAFA,CAAA;AAGA,SAJA,CAAA;AAKA,eAAA,oBAAA;AACA,OAPA,MAOA;AACA,eAAA,YAAA;AACA;AACA;AA1BA,GArBA;AAiDA,EAAA,OAAA,EAAA;AACA,IAAA,cADA,4BACA;AACA,UAAA,IAAA,GAAA,MAAA,CAAA,KAAA,QAAA,CAAA,OAAA,CAAA,CAAA,MAAA,CAAA,IAAA,CAAA;AACA,UAAA,GAAA,0CAAA,IAAA,CAAA;AACA,UAAA,WAAA,GAAA,YAAA,CAAA,gBAAA,CAAA,GAAA,EAAA,KAAA,IAAA,CAAA;AACA,WAAA,QAAA,CAAA,UAAA,CAAA,IAAA,CAAA,WAAA;AACA,MAAA,QAAA,CAAA,KAAA,CAAA,qBAAA,EAAA,WAAA;AACA,WAAA,OAAA,CAAA;AACA,QAAA,OAAA,EAAA,kBADA;AAEA,QAAA,QAAA,EAAA,aAFA;AAGA,QAAA,QAAA,EAAA;AAHA,OAAA;AAMA,WAAA,UAAA;AACA,KAdA;AAeA,IAAA,YAfA,0BAeA;AACA,WAAA,mBAAA,GAAA,CAAA,KAAA,mBAAA;AACA,KAjBA;AAkBA,IAAA,aAlBA,yBAkBA,MAlBA,EAkBA;AACA,UAAA,GAAA,oBAAA,MAAA,CAAA,QAAA,uBAAA;AACA,UAAA,WAAA,GAAA,YAAA,CAAA,gBAAA,CAAA,GAAA,EAAA,KAAA,IAAA,CAAA;AACA,WAAA,QAAA,CAAA,OAAA,CAAA,OAAA,CAAA,MAAA;AACA,WAAA,QAAA,CAAA,UAAA,CAAA,IAAA,CAAA,WAAA;AACA,MAAA,QAAA,CAAA,KAAA,CAAA,qBAAA,EAAA,WAAA;AACA,WAAA,OAAA,CAAA;AACA,QAAA,OAAA,EAAA,oBADA;AAEA,QAAA,QAAA,EAAA,aAFA;AAGA,QAAA,QAAA,EAAA;AAHA,OAAA;AAKA,WAAA,UAAA;AACA,KA9BA;AA+BA,IAAA,gBA/BA,4BA+BA,MA/BA,EA+BA;AACA,UAAA,GAAA,GAAA,KAAA,QAAA,CAAA,OAAA,CAAA,SAAA,CACA,UAAA,OAAA;AAAA,eAAA,OAAA,CAAA,GAAA,KAAA,MAAA,CAAA,GAAA;AAAA,OADA,CAAA;AAGA,UAAA,GAAA,oBAAA,MAAA,CAAA,QAAA,2BAAA;AACA,UAAA,WAAA,GAAA,YAAA,CAAA,gBAAA,CAAA,GAAA,EAAA,KAAA,IAAA,CAAA;AACA,WAAA,QAAA,CAAA,OAAA,CAAA,MAAA,CAAA,GAAA,EAAA,CAAA;AACA,WAAA,QAAA,CAAA,UAAA,CAAA,IAAA,CAAA,WAAA;AACA,MAAA,QAAA,CAAA,KAAA,CAAA,qBAAA,EAAA,WAAA;AACA,WAAA,OAAA,CAAA;AACA,QAAA,OAAA,EAAA,oBADA;AAEA,QAAA,QAAA,EAAA,aAFA;AAGA,QAAA,QAAA,EAAA;AAHA,OAAA;AAKA,WAAA,UAAA;AACA,KA9CA;AA+CA,IAAA,WA/CA,uBA+CA,QA/CA,EA+CA;AACA,uCAAA,QAAA;AACA,KAjDA;AAkDA,IAAA,cAlDA,4BAkDA;AACA,WAAA,gBAAA,GAAA,CAAA,KAAA,gBAAA;AACA,KApDA;AAqDA,IAAA,YArDA,0BAqDA;AACA,WAAA,cAAA,GAAA,CAAA,KAAA,cAAA;AACA,KAvDA;AAwDA,IAAA,UAxDA,wBAwDA;AACA,WAAA,KAAA,CAAA,YAAA,EAAA,KAAA,QAAA,CAAA,EAAA;AACA,KA1DA;AA2DA,IAAA,aA3DA,yBA2DA,EA3DA,EA2DA;AACA,UAAA,OAAA,GAAA,KAAA,QAAA,CAAA,GAAA;AACA,WAAA,QAAA,CAAA,GAAA,GAAA,EAAA,CAAA,MAAA,CAAA,SAAA;AACA,UAAA,GAAA,mBAAA,OAAA,+BAAA,EAAA,CAAA,MAAA,CAAA,SAAA,MAAA;AACA,UAAA,WAAA,GAAA,YAAA,CAAA,gBAAA,CAAA,GAAA,EAAA,KAAA,IAAA,CAAA;AACA,WAAA,QAAA,CAAA,UAAA,CAAA,IAAA,CAAA,WAAA;AACA,MAAA,QAAA,CAAA,KAAA,CAAA,qBAAA,EAAA,WAAA;AACA,WAAA,OAAA,CAAA;AACA,QAAA,OAAA,EAAA,kBADA;AAEA,QAAA,QAAA,EAAA,aAFA;AAGA,QAAA,QAAA,EAAA;AAHA,OAAA;AAKA,WAAA,UAAA;AACA,KAxEA;AAyEA,IAAA,UAzEA,wBAyEA;AACA,WAAA,KAAA,CAAA,YAAA,EAAA,KAAA,QAAA;AACA,KA3EA;AA4EA,IAAA,iBA5EA,+BA4EA;AACA,UAAA,KAAA,MAAA,CAAA,MAAA,CAAA,MAAA,KAAA,KAAA,IAAA,CAAA,EAAA,EAAA;AACA;AACA;;AACA,WAAA,OAAA,CAAA,IAAA,kBACA,KAAA,MAAA,CAAA,MAAA,CAAA,OADA,mBACA,KAAA,IAAA,CAAA,EADA;AAGA,KAnFA;AAoFA,IAAA,mBApFA,+BAoFA,IApFA,EAoFA;AACA,UAAA,KAAA,QAAA,CAAA,EAAA,KAAA,KAAA,MAAA,CAAA,MAAA,CAAA,MAAA,EAAA;AACA,aAAA,QAAA,GAAA,IAAA;AACA;AACA,KAxFA;AAyFA,IAAA,kBAzFA,8BAyFA,GAzFA,EAyFA;AACA,UAAA,GAAA,0CAAA,GAAA,CAAA,GAAA,CAAA;AACA,UAAA,WAAA,GAAA,YAAA,CAAA,gBAAA,CAAA,GAAA,EAAA,KAAA,IAAA,CAAA,CAFA,CAGA;;AACA,WAAA,QAAA,CAAA,QAAA,CAAA,GAAA,GAAA,GAAA,CAAA,GAAA;AACA,WAAA,QAAA,CAAA,QAAA,CAAA,KAAA,GAAA,GAAA,CAAA,KAAA;AACA,WAAA,QAAA,CAAA,UAAA,CAAA,IAAA,CAAA,WAAA;AACA,MAAA,QAAA,CAAA,KAAA,CAAA,qBAAA,EAAA,WAAA;AACA,WAAA,OAAA,CAAA;AACA,QAAA,OAAA,EAAA,sBADA;AAEA,QAAA,QAAA,EAAA,aAFA;AAGA,QAAA,QAAA,EAAA;AAHA,OAAA;AAKA,WAAA,UAAA;AACA,WAAA,cAAA,GAAA,KAAA;AACA,KAxGA;AAyGA,IAAA,gBAzGA,4BAyGA,GAzGA,EAyGA;AACA,UAAA,GAAA,wCAAA,GAAA,CAAA,GAAA,CAAA;AACA,UAAA,WAAA,GAAA,YAAA,CAAA,gBAAA,CAAA,GAAA,EAAA,KAAA,IAAA,CAAA,CAFA,CAGA;;AACA,WAAA,QAAA,CAAA,MAAA,CAAA,GAAA,GAAA,GAAA,CAAA,GAAA;AACA,WAAA,QAAA,CAAA,MAAA,CAAA,KAAA,GAAA,GAAA,CAAA,KAAA;AACA,WAAA,QAAA,CAAA,UAAA,CAAA,IAAA,CAAA,WAAA;AACA,MAAA,QAAA,CAAA,KAAA,CAAA,qBAAA,EAAA,WAAA;AACA,WAAA,OAAA,CAAA;AACA,QAAA,OAAA,EAAA,oBADA;AAEA,QAAA,QAAA,EAAA,aAFA;AAGA,QAAA,QAAA,EAAA;AAHA,OAAA;AAKA,WAAA,UAAA;AACA,WAAA,cAAA,GAAA,KAAA;AACA,KAxHA;AAyHA,IAAA,WAzHA,yBAyHA;AACA,WAAA,mBAAA,GAAA,KAAA;AACA,WAAA,gBAAA,GAAA,KAAA;AACA,WAAA,cAAA,GAAA,KAAA;AACA;AA7HA,GAjDA;AAgLA,EAAA,OAhLA,qBAgLA;AACA,IAAA,QAAA,CAAA,GAAA,CAAA,mBAAA,EAAA,KAAA,mBAAA;AACA,SAAA,QAAA,GAAA,KAAA,IAAA;AACA,IAAA,OAAA,CAAA,GAAA,CAAA,yCAAA;AACA;AApLA,CAAA","sourcesContent":["<template>\n  <li\n    v-if=\"taskCopy\"\n    class=\"task-preview flex space-between align-center width100\"\n  >\n    <div class=\"flex space-between align-center width100\">\n      <span class=\"task-color\" :style=\"taskBgc\"></span>\n      <button class=\"btn-close\" @click=\"deleteTask\">\n        <i v-tooltip.top=\"'Delete Task'\" class=\"task-icon btn-trash fa-icon far fa-trash-alt\"></i>\n      </button>\n\n      <div class=\"task-txt\">\n        <span\n          class=\"editable\"\n          @blur=\"updateTaskTxt\"\n          @keydown.enter=\"updateTaskTxt\"\n          contenteditable\n          >{{ taskCopy.txt }}</span\n        >\n      </div>\n      <el-badge\n        :hidden=\"postsLegnth\"\n        :value=\"task.posts.length\"\n        class=\"item\"\n        type=\"primary\"\n      >\n        <i\n          @click=\"sendToTaskDetails\"\n          v-tooltip.top=\"'Task Details'\"\n          :style=\"postosColorBtn\" class=\"task-icon far fa-comment fa-icon\"\n        ></i>\n      </el-badge>\n    </div>\n    <div class=\"task-details flex\">\n      <div class=\"headers flex\">\n        <span>\n          <el-badge\n            :hidden=\"membersLegnth\"\n            :value=\"task.members.length\"\n            class=\"item\"\n            type=\"primary\"\n          >\n            <i\n              @click.stop=\"toggleMember\"\n              v-tooltip.top=\"'Task Members'\"\n              class=\"task-icon far fa-user-circle fa-icon\"\n            ></i>\n          </el-badge>\n        </span>\n\n        <add-members\n          v-if=\"isTaskMembersShowen\"\n          firstTitle=\"Task Members\"\n          secondTitle=\"Board Members\"\n          :members=\"taskCopy.members\"\n          :allMembers=\"filteredBoardMembers\"\n          @addMember=\"addTaskMember\"\n          @removeMember=\"removeTaskMember\"\n        />\n        <span\n          @click=\"toggleStatuses\"\n          class=\"status relative\"\n          :style=\"getStyleStr(taskCopy.status.color)\"\n          >{{ taskCopy.status.txt }}\n          <label-picker\n            v-if=\"isStatusesShowen\"\n            :opts=\"statuses\"\n            type=\"status\"\n            @updateTaskStatus=\"updateTaskStatus\"\n        /></span>\n\n        <span\n          @click=\"togglePriors\"\n          class=\"priority relative\"\n          :style=\"getStyleStr(taskCopy.priority.color)\"\n          >{{ taskCopy.priority.txt }}\n          <label-picker\n            v-if=\"isPriorsShowen\"\n            :opts=\"priorities\"\n            type=\"priority\"\n            @updateTaskPriority=\"updateTaskPriority\"\n        /></span>\n\n        <span class=\"date-picker\">\n          <el-date-picker v-tooltip.top=\"'Due Date'\"\n            class=\"date-input\"\n            @change=\"updateTaskDate\"\n            v-model=\"taskCopy.dueDate\"\n            type=\"date\"\n            placeholder=\"Pick a date\"\n          >\n          </el-date-picker>\n        </span>\n      </div>\n    </div>\n    <div\n      class=\"back-drop-layer\"\n      v-if=\"isTaskMembersShowen || isStatusesShowen || isPriorsShowen\"\n      @click.stop=\"closePopups\"\n    ></div>\n  </li>\n</template>\n<script>\nimport addMembers from '@/cmps/add-members'\nimport { eventBus } from '@/services/event-bus.service'\nimport labelPicker from './label-picker'\nimport { boardService } from '@/services/board.service'\nimport moment from 'moment'\n\nexport default {\n  components: { labelPicker, addMembers },\n  name: 'task-preview',\n  data() {\n    return {\n      taskCopy: null,\n      isStatusesShowen: false,\n      isPriorsShowen: false,\n      isTaskMembersShowen: false,\n    }\n  },\n  props: {\n    taskColor: String,\n    task: Object,\n    statuses: Array,\n    priorities: Array,\n    groupId: String,\n    boardMembers: [Array, Object],\n    activity: Object,\n    user: Object,\n  },\n  computed: {\n    postsLegnth() {\n      return this.task.posts.length > 0 ? false : true\n    },\n    postosColorBtn(){\n    return this.task.posts.length > 0 ? 'color: #0085ff;': ''\n    },\n    membersLegnth() {\n      return this.task.members.length > 0 ? false : true\n    },\n    taskBgc() {\n      return { backgroundColor: this.taskColor }\n    },\n    filteredBoardMembers() {\n      const boardMembers = this.boardMembers\n      const taskMembers = this.taskCopy.members\n      if (taskMembers) {\n        const filteredBoardMembers = boardMembers.filter((bMember) => {\n          return taskMembers.every((tMember) => {\n            return tMember._id !== bMember._id\n          })\n        })\n        return filteredBoardMembers\n      } else {\n        return boardMembers\n      }\n    },\n  },\n  methods: {\n    updateTaskDate() {\n      const date = moment(this.taskCopy.dueDate).format('ll')\n      const txt = `Task due date was changed to ${date}`\n      let newActivity = boardService.getEmptyActivity(txt, this.user)\n      this.taskCopy.activities.push(newActivity)\n      eventBus.$emit('updateBoardActivity', newActivity)\n      this.$notify({\n          message: 'Update task date',\n          position: 'bottom-left',\n          duration:2000,\n        });\n\n      this.updateTask()\n    },\n    toggleMember() {\n      this.isTaskMembersShowen = !this.isTaskMembersShowen\n    },\n    addTaskMember(member) {\n      const txt = `Member ${member.fullName} was added to task`\n      let newActivity = boardService.getEmptyActivity(txt, this.user)\n      this.taskCopy.members.unshift(member)\n      this.taskCopy.activities.push(newActivity)\n       eventBus.$emit('updateBoardActivity', newActivity)\n      this.$notify({\n          message: 'Update task member',\n          position: 'bottom-left',\n          duration:2000,\n        });\n      this.updateTask()\n    },\n    removeTaskMember(member) {\n      const idx = this.taskCopy.members.findIndex(\n        (tMember) => tMember._id === member._id\n      )\n      const txt = `Member ${member.fullName} was removed from task`\n      let newActivity = boardService.getEmptyActivity(txt, this.user)\n      this.taskCopy.members.splice(idx, 1)\n      this.taskCopy.activities.push(newActivity)\n       eventBus.$emit('updateBoardActivity', newActivity)\n      this.$notify({\n          message: 'Update task member',\n          position: 'bottom-left',\n          duration:2000,\n        });\n      this.updateTask()\n    },\n    getStyleStr(colorStr) {\n      return `backgroundColor:${colorStr}`\n    },\n    toggleStatuses() {\n      this.isStatusesShowen = !this.isStatusesShowen\n    },\n    togglePriors() {\n      this.isPriorsShowen = !this.isPriorsShowen\n    },\n    deleteTask() {\n      this.$emit('deleteTask', this.taskCopy.id)\n    },\n    updateTaskTxt(ev) {\n      const prevTxt = this.taskCopy.txt\n      this.taskCopy.txt = ev.target.innerText\n      const txt = `Task '${prevTxt}' was changed to '${ev.target.innerText}'`\n      let newActivity = boardService.getEmptyActivity(txt, this.user)\n      this.taskCopy.activities.push(newActivity)\n       eventBus.$emit('updateBoardActivity', newActivity)\n      this.$notify({\n          message: 'Update task name',\n          position: 'bottom-left',\n          duration:2000,\n        });\n      this.updateTask()\n    },\n    updateTask() {\n      this.$emit('updateTask', this.taskCopy)\n    },\n    sendToTaskDetails() {\n      if (this.$route.params.taskId === this.task.id) {\n        return\n      }\n      this.$router.push(\n        `/board/${this.$route.params.boardId}/task/${this.task.id}`\n      )\n    },\n    updateComponentTask(task) {\n      if (this.taskCopy.id === this.$route.params.taskId) {\n        this.taskCopy = task\n      }\n    },\n    updateTaskPriority(opt) {\n      const txt = `Task priority was updated to ${opt.txt}`\n      let newActivity = boardService.getEmptyActivity(txt, this.user)\n      // const prevPrior = this.taskCopy.priority.txt\n      this.taskCopy.priority.txt = opt.txt\n      this.taskCopy.priority.color = opt.color\n      this.taskCopy.activities.push(newActivity)\n       eventBus.$emit('updateBoardActivity', newActivity)\n      this.$notify({\n          message: 'Update task priority',\n          position: 'bottom-left',\n          duration:2000,\n        });\n      this.updateTask()\n      this.isPriorsShowen = false\n    },\n    updateTaskStatus(opt) {\n      const txt = `Task status was updated to ${opt.txt}`\n      let newActivity = boardService.getEmptyActivity(txt, this.user)\n      // const prevStatus = this.taskCopy.status.txt\n      this.taskCopy.status.txt = opt.txt\n      this.taskCopy.status.color = opt.color\n      this.taskCopy.activities.push(newActivity)\n             eventBus.$emit('updateBoardActivity', newActivity)\n      this.$notify({\n          message: 'Update task status',\n          position: 'bottom-left',\n          duration:2000,\n        });\n      this.updateTask()\n      this.isPriorsShowen = false\n    },\n    closePopups() {\n      this.isTaskMembersShowen = false\n      this.isStatusesShowen = false\n      this.isPriorsShowen = false\n    },\n  },\n  created() {\n    eventBus.$on('updateTaskPreview', this.updateComponentTask)\n    this.taskCopy = this.task\n    console.log('I am task preview, here is my task man:', )\n  },\n}\n</script>\n"],"sourceRoot":"src/cmps"}]}