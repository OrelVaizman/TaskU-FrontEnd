{"remainingRequest":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/babel-loader/lib/index.js!/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/src/cmps/filter-users.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/src/cmps/filter-users.vue","mtime":1607101919725},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IEF2YXRhciBmcm9tICdAL2NtcHMvdXNlci1hdmF0YXIudnVlJzsKZXhwb3J0IGRlZmF1bHQgewogIHByb3BzOiB7CiAgICB1c2VyczogQXJyYXksCiAgICB0aXRsZTogU3RyaW5nCiAgfSwKICBtZXRob2RzOiB7CiAgICB1cGRhdGVGaWx0ZXI6IGZ1bmN0aW9uIHVwZGF0ZUZpbHRlcihmaWx0ZXJCeSkgewogICAgICB2YXIgZmlsdGVyT2JqID0gewogICAgICAgIHRpdGxlOiB0aGlzLnRpdGxlLnRvTG93ZXJDYXNlKCksCiAgICAgICAgb3B0OiBmaWx0ZXJCeQogICAgICB9OwogICAgICB0aGlzLiRlbWl0KCd1cGRhdGVGaWx0ZXInLCBmaWx0ZXJPYmopOwogICAgfQogIH0sCiAgY29tcG9uZW50czogewogICAgQXZhdGFyOiBBdmF0YXIKICB9Cn07"},{"version":3,"sources":["filter-users.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAqBA,OAAA,MAAA,MAAA,wBAAA;AAGA,eAAA;AACA,EAAA,KAAA,EAAA;AACA,IAAA,KAAA,EAAA,KADA;AAEA,IAAA,KAAA,EAAA;AAFA,GADA;AAKA,EAAA,OAAA,EAAA;AACA,IAAA,YADA,wBACA,QADA,EACA;AACA,UAAA,SAAA,GAAA;AAAA,QAAA,KAAA,EAAA,KAAA,KAAA,CAAA,WAAA,EAAA;AAAA,QAAA,GAAA,EAAA;AAAA,OAAA;AACA,WAAA,KAAA,CAAA,cAAA,EAAA,SAAA;AACA;AAJA,GALA;AAWA,EAAA,UAAA,EAAA;AACA,IAAA,MAAA,EAAA;AADA;AAXA,CAAA","sourcesContent":["<template>\n  <section class=\"filter-form flex column\">\n    <h4 class=\"filter-title\">{{ title }}</h4>\n    <button class=\"filter-btn\" @click=\"updateFilter('All')\">All</button>\n    <button\n      class=\"filter-btn relative\"\n      @click=\"updateFilter(user._id)\"\n      v-for=\"user in users\"\n      :key=\"user._id\"\n      type=\"submit\"\n    >\n      <div class=\"user-avatar\">\n             <avatar :user=\"user\" />\n\n      </div>\n      <span v-if=\"user.fullName\" class=\"filter-txt user-filter\">{{ user.fullName }}</span>\n    </button>\n  </section>\n</template>\n\n<script>\nimport Avatar from '@/cmps/user-avatar.vue'\n\n\nexport default {\n  props: {\n    users: Array,\n    title: String\n  },\n  methods: {\n    updateFilter(filterBy) {\n      const filterObj = { title: this.title.toLowerCase(), opt: filterBy }\n      this.$emit('updateFilter', filterObj)\n    }\n  },\n  components: {\n    Avatar\n  }\n}\n</script>\n\n<style></style>\n"],"sourceRoot":"src/cmps"}]}