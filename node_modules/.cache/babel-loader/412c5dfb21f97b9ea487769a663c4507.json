{"remainingRequest":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/babel-loader/lib/index.js!/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/src/cmps/board-list.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/src/cmps/board-list.vue","mtime":1606359701478},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IGxvZGFzaCBmcm9tICdsb2Rhc2gnOwppbXBvcnQgcG9wdXBNZW51IGZyb20gJy4uL2NtcHMvcG9wdXAtbWVudSc7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnYm9hcmQtbGlzdCcsCiAgcHJvcHM6IHsKICAgIGJvYXJkczogW0FycmF5LCBPYmplY3RdCiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgc2VhcmNoQm9hcmQ6ICcnLAogICAgICBpc1BvcHVwU2hvd2VuOiBmYWxzZSwKICAgICAgcG9wdXBPcHRpb25zOiBbewogICAgICAgIHR4dDogJ0RlbGV0ZSB0aGlzIGJvYXJkJywKICAgICAgICBmdW5jOiB0aGlzLnJlbW92ZUN1cnJCb2FyZCwKICAgICAgICBpY29uU3RyOiAndHJhc2gnCiAgICAgIH1dLAogICAgICBjdXJyQm9hcmRJZDogbnVsbAogICAgfTsKICB9LAogIGNvbXB1dGVkOiB7fSwKICBtZXRob2RzOiB7CiAgICBlbWl0U2VhcmNoOiBmdW5jdGlvbiBlbWl0U2VhcmNoKCkgewogICAgICB2YXIgc2VhcmNoQm9hcmQgPSBKU09OLnBhcnNlKEpTT04uc3RyaW5naWZ5KHRoaXMuc2VhcmNoQm9hcmQpKTsKICAgICAgdGhpcy4kZW1pdCgnc2VhcmNoQm9hcmQnLCBzZWFyY2hCb2FyZCk7CiAgICB9LAogICAgcmVtb3ZlQ3VyckJvYXJkOiBmdW5jdGlvbiByZW1vdmVDdXJyQm9hcmQoKSB7CiAgICAgIGNvbnNvbGUubG9nKCdib2FyZElkOicsIHRoaXMuY3VyckJvYXJkSWQpOwogICAgICB0aGlzLiRlbWl0KCdyZW1vdmVCb2FyZCcsIHRoaXMuY3VyckJvYXJkSWQpOwogICAgfSwKICAgIGFkZEJvYXJkOiBmdW5jdGlvbiBhZGRCb2FyZCgpIHsKICAgICAgdGhpcy4kZW1pdCgnYWRkTmV3Qm9hcmQnKTsKICAgIH0sCiAgICB0b2dnbGVQb3B1cDogZnVuY3Rpb24gdG9nZ2xlUG9wdXAoYm9hcmRJZCkgewogICAgICB0aGlzLmN1cnJCb2FyZElkID0gdGhpcy5pc1BvcHVwU2hvd2VuID8gJycgOiBib2FyZElkOwogICAgICB0aGlzLmlzUG9wdXBTaG93ZW4gPSAhdGhpcy5pc1BvcHVwU2hvd2VuOwogICAgfQogIH0sCiAgY3JlYXRlZDogZnVuY3Rpb24gY3JlYXRlZCgpIHsKICAgIHRoaXMuZW1pdFNlYXJjaCA9IGxvZGFzaC5kZWJvdW5jZSh0aGlzLmVtaXRTZWFyY2gsIDUwMCk7CiAgfSwKICBjb21wb25lbnRzOiB7CiAgICBwb3B1cE1lbnU6IHBvcHVwTWVudQogIH0KfTs="},{"version":3,"sources":["board-list.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmCA,OAAA,MAAA,MAAA,QAAA;AACA,OAAA,SAAA,MAAA,oBAAA;AACA,eAAA;AACA,EAAA,IAAA,EAAA,YADA;AAEA,EAAA,KAAA,EAAA;AACA,IAAA,MAAA,EAAA,CAAA,KAAA,EAAA,MAAA;AADA,GAFA;AAKA,EAAA,IALA,kBAKA;AACA,WAAA;AACA,MAAA,WAAA,EAAA,EADA;AAEA,MAAA,aAAA,EAAA,KAFA;AAGA,MAAA,YAAA,EAAA,CACA;AACA,QAAA,GAAA,EAAA,mBADA;AAEA,QAAA,IAAA,EAAA,KAAA,eAFA;AAGA,QAAA,OAAA,EAAA;AAHA,OADA,CAHA;AAUA,MAAA,WAAA,EAAA;AAVA,KAAA;AAYA,GAlBA;AAmBA,EAAA,QAAA,EAAA,EAnBA;AAoBA,EAAA,OAAA,EAAA;AACA,IAAA,UADA,wBACA;AACA,UAAA,WAAA,GAAA,IAAA,CAAA,KAAA,CAAA,IAAA,CAAA,SAAA,CAAA,KAAA,WAAA,CAAA,CAAA;AACA,WAAA,KAAA,CAAA,aAAA,EAAA,WAAA;AACA,KAJA;AAKA,IAAA,eALA,6BAKA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,UAAA,EAAA,KAAA,WAAA;AACA,WAAA,KAAA,CAAA,aAAA,EAAA,KAAA,WAAA;AACA,KARA;AASA,IAAA,QATA,sBASA;AACA,WAAA,KAAA,CAAA,aAAA;AACA,KAXA;AAYA,IAAA,WAZA,uBAYA,OAZA,EAYA;AACA,WAAA,WAAA,GAAA,KAAA,aAAA,GAAA,EAAA,GAAA,OAAA;AACA,WAAA,aAAA,GAAA,CAAA,KAAA,aAAA;AACA;AAfA,GApBA;AAqCA,EAAA,OArCA,qBAqCA;AACA,SAAA,UAAA,GAAA,MAAA,CAAA,QAAA,CAAA,KAAA,UAAA,EAAA,GAAA,CAAA;AACA,GAvCA;AAwCA,EAAA,UAAA,EAAA;AACA,IAAA,SAAA,EAAA;AADA;AAxCA,CAAA","sourcesContent":["<template>\n    <section class=\"board-list flex column\">\n        <div class=\"top-bar flex space-around align-center\">\n            <h1 class=\"title-board-list\">Boards</h1>\n            <i @click=\"addBoard\" class=\"btn-add fas fa-plus-circle\"></i>\n        </div>\n        <input\n            class=\"board-list-search\"\n            type=\"text\"\n            @input=\"emitSearch\"\n            v-model=\"searchBoard\"\n            placeholder=\"Search\"\n        />\n\n        <ul v-if=\"boards\" class=\"boards-list clean-list\">\n            <li class=\"board-item\" v-for=\"board in boards\" :key=\"board._id\">\n                <!-- <i @click=\"removeCurrBoard(board._id)\" class=\"trash-icon fas fa-trash\"></i> -->\n                <i\n                    @click=\"togglePopup(board._id)\"\n                    class=\"minimenu-icon fas fa-ellipsis-h\"\n                ></i>\n                <router-link :to=\"'/board/' + board._id\">{{\n                    board.name\n                }}</router-link>\n                <popupMenu\n                    v-if=\"isPopupShowen && currBoardId === board._id\"\n                    :menuItems=\"popupOptions\"\n                    @closePopup=\"togglePopup\"\n                />\n            </li>\n        </ul>\n    </section>\n</template>\n\n<script>\nimport lodash from 'lodash'\nimport popupMenu from '../cmps/popup-menu'\nexport default {\n    name: 'board-list',\n    props: {\n        boards: [Array, Object],\n    },\n    data() {\n        return {\n            searchBoard: '',\n            isPopupShowen: false,\n            popupOptions: [\n                {\n                    txt: 'Delete this board',\n                    func: this.removeCurrBoard,\n                    iconStr: 'trash',\n                },\n            ],\n            currBoardId: null,\n        }\n    },\n    computed: {},\n    methods: {\n        emitSearch() {\n            const searchBoard = JSON.parse(JSON.stringify(this.searchBoard))\n            this.$emit('searchBoard', searchBoard)\n        },\n        removeCurrBoard() {\n            console.log('boardId:', this.currBoardId)\n            this.$emit('removeBoard', this.currBoardId)\n        },\n        addBoard() {\n            this.$emit('addNewBoard')\n        },\n        togglePopup(boardId) {\n            this.currBoardId = this.isPopupShowen ? '' : boardId\n            this.isPopupShowen = !this.isPopupShowen\n        },\n    },\n    created() {\n        this.emitSearch = lodash.debounce(this.emitSearch, 500)\n    },\n    components: {\n        popupMenu,\n    },\n}\n</script>\n"],"sourceRoot":"src/cmps"}]}