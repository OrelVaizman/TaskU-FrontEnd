{"remainingRequest":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/babel-loader/lib/index.js!/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/src/views/board-app.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/src/views/board-app.vue","mtime":1606841189766},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["board-app.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <section v-if=\"!isLoading\" class=\"board-app flex\">\n        <board-list\n            :isExpanded=\"isListExpanded\"\n            @removeBoard=\"removeCurrBoard\"\n            @addNewBoard=\"addBoard\"\n            :boards=\"boards\"\n            title=\"Boards\"\n        >\n            <button\n                slot=\"expand-btn\"\n                @click=\"toggleExpandList\"\n                @mouseover=\"expandList\"\n                :style=\"expendStyle\"\n                :class=\"{\n                    'expand-list-btn': true,\n                    notExpanded: !isListExpanded,\n                }\"\n            >\n                <i\n                    v-tooltip.right=\"'Expend/Hide List'\"\n                    :class=\"expendBtnStyle\"\n                ></i>\n            </button>\n\n            <board-search @searchBoard=\"setSearch\" slot=\"search\" />\n        </board-list>\n\n        <div class=\"board-app-container width100\">\n            <board-header\n                :updateBoardName=\"updateBoardName\"\n                :updateBoardDesc=\"updateBoardDesc\"\n                :board=\"board\"\n                :addGroup=\"addGroup\"\n                @removeMember=\"removeBoardMember\"\n                @addMember=\"addBoardMember\"\n                :forceRerender=\"forceRerender\"\n            />\n            <group-list\n                v-if=\"board\"\n                :key=\"componentKey\"\n                :groups=\"board.groups\"\n                :boardName=\"board.name\"\n                @deleteGroup=\"deleteGroup\"\n                @updateGroup=\"updateGroup\"\n                @updateGroups=\"updateGroups\"\n                @duplicateGroup=\"duplicateGroup\"\n                @forceRender=\"forceRerender\"\n            />\n        </div>\n        <div v-if=\"isTaskDetailsHover\" class=\"backdrop-layer\"></div>\n\n        <task-details\n            v-if=\"this.$route.params.taskId\"\n            @close=\"isTaskDetailsHover = false\"\n            @mouseover.native=\"isTaskDetailsHover = true\"\n            @mouseleave.native=\"isTaskDetailsHover = false\"\n        />\n        <div\n            v-tooltip.top=\"'Chat Board'\"\n            v-show=\"isChatingBtnShown\"\n            class=\"chat-icon-btn-container flex align-center justify-center\"\n        >\n            <i @click=\"toggleChat\" class=\"fas chat-icon fa-comments\"></i>\n        </div>\n        <chat-app @closeChat=\"toggleChat\" v-if=\"isChating\" />\n    </section>\n    <div v-else class=\"flex justify-center align-center\">\n        <img src=\"@/assets/imgs/loader.gif\" class=\"loader-app\" />\n    </div>\n</template>\n<script>\nimport { eventBus } from '@/services/event-bus.service'\nimport chatApp from '@/cmps/board-chat'\n// import addMembers from '@/cmps/add-members'\nimport groupList from '@/cmps/group-list'\nimport boardList from '@/cmps/board-list.vue'\nimport taskDetails from '../views/task-details'\nimport { boardService } from '@/services/board.service'\n// import boardFilter from '@/cmps/board-filter.vue'\nimport boardSearch from '@/cmps/board-search'\nimport { utilService } from '@/services/util.service'\nimport boardHeader from '../cmps/board-header.vue'\n\nexport default {\n    name: 'board-app',\n    data() {\n        return {\n            isChatingBtnShown: true,\n            isChating: false,\n            isListExpanded: true,\n            isMembersShowen: false,\n            currTaskDetails: null,\n            isTaskDetailsHover: false,\n            componentKey: 0,\n        }\n    },\n    computed: {\n        chatControl() {\n            return this.isChatingBtnShown ? 'Hide Chat' : 'Show Chat'\n        },\n        expendStyle() {\n            return this.isListExpanded\n                ? { borderLeft: 1 + 'px' + ' solid ' + 'rgb(228, 228, 228)' }\n                : { marginLeft: 15 + 'px' }\n        },\n        expendBtnStyle() {\n            return this.isListExpanded\n                ? 'expend-btn fas fa-chevron-left'\n                : 'expend-btn fas fa-chevron-right'\n        },\n        isLoading() {\n            console.log(\n                'this.$store.getters.isLoading:',\n                this.$store.getters.isLoading\n            )\n            return this.$store.getters.isLoading\n        },\n        user() {\n            return this.$store.getters.user\n        },\n        board() {\n            return this.$store.getters.board\n        },\n        boards() {\n            return this.$store.getters.boards\n        },\n    },\n    methods: {\n        toogleChatBtn() {\n            this.isChatingBtnShown = !this.isChatingBtnShown\n        },\n        expandList() {\n            this.isListExpanded = true\n        },\n        toggleExpandList() {\n            this.isListExpanded = !this.isListExpanded\n        },\n        toggleChat() {\n            this.isChating = !this.isChating\n        },\n        duplicateGroup(group) {\n            group.id = utilService.makeId()\n            this.board.groups.push(group)\n            const txt = `${this.user.fullName} duplicated group the group ${group.txt} `\n            let newActivity = boardService.getEmptyActivity(txt, this.user)\n            this.board.activities.push(newActivity)\n            this.$store.dispatch({ type: 'saveBoard', board: this.board })\n            this.$notify({\n                message: 'Duplicated group was added',\n                position: 'bottom-left',\n                duration: 2000,\n            })\n            this.forceRerender()\n        },\n\n        updateBoardName(ev) {\n            this.board.name = ev.target.innerText\n            const txt = `${this.user.fullName} update Board name`\n            let newActivity = boardService.getEmptyActivity(txt, this.user)\n            this.board.activities.push(newActivity)\n\n            this.$store.dispatch({ type: 'saveBoard', board: this.board })\n            this.$notify({\n                message: 'Board name updated ',\n                position: 'bottom-left',\n                duration: 2000,\n            })\n            this.forceRerender()\n        },\n        updateBoardDesc(ev) {\n            this.board.description = ev.target.innerText\n            const txt = `${this.user.fullName} update Board description`\n            let newActivity = boardService.getEmptyActivity(txt, this.user)\n            this.board.activities.push(newActivity)\n            this.$store.dispatch({ type: 'saveBoard', board: this.board })\n            this.$notify({\n                message: 'Board description updeated',\n                position: 'bottom-left',\n                duration: 2000,\n            })\n            this.forceRerender()\n        },\n        forceRerender() {\n            this.componentKey += 1\n        },\n        addBoardMember(user) {\n            console.log('user:', user)\n            this.board.members.unshift(user)\n            const txt = `${this.user.fullName} add ${user.fullName}  to board`\n            let newActivity = boardService.getEmptyActivity(txt, this.user)\n            this.board.activities.push(newActivity)\n            this.$store.dispatch({ type: 'saveBoard', board: this.board })\n            this.$notify({\n                message: 'Add new member to board',\n                position: 'bottom-left',\n                duration: 2000,\n            })\n        },\n        removeBoardMember(member) {\n            const idx = this.board.members.findIndex(\n                (bMember) => bMember._id === member._id\n            )\n            this.board.members.splice(idx, 1)\n            const txt = `${this.user.fullName} remove  group`\n            let newActivity = boardService.getEmptyActivity(txt, this.user)\n            this.board.activities.push(newActivity)\n            this.$store.dispatch({ type: 'saveBoard', board: this.board })\n            this.$notify({\n                message: 'The member has been removed from the board',\n                position: 'bottom-left',\n                duration: 2000,\n            })\n        },\n        setSearch(searchBoard) {\n            this.$store.commit({ type: 'setSearch', searchBoard })\n            this.$store.dispatch({ type: 'loadBoards' })\n        },\n        removeCurrBoard(boardId) {\n            const txt = `${this.user.fullName} remove Board`\n            let newActivity = boardService.getEmptyActivity(txt, this.user)\n            this.board.activities.push(newActivity)\n            this.$store.dispatch({ type: 'removeBoard', boardId })\n            this.$notify({\n                message: 'The board has been deleted',\n                position: 'bottom-left',\n                duration: 2000,\n            })\n        },\n        addBoard() {\n            this.$prompt('Please enter a name to your board', 'Add New Board', {\n                confirmButtonText: 'OK',\n                cancelButtonText: 'Cancel',\n            })\n                .then(({ value }) => {\n                    const board = boardService.getEmptyBoard()\n                    board.name = value\n                    board.creator = this.user\n                    board.members.push(this.user)\n                    console.log(\n                        'I got that board before sending to store',\n                        board\n                    )\n                    this.$store.dispatch({ type: 'saveBoard', board })\n                    this.$message({\n                        type: 'success',\n                        message: 'Your Board:' + value + ' add ',\n                    })\n                })\n                .catch(() => {\n                    this.$message({\n                        type: 'info',\n                        message: 'Your action  canceled',\n                    })\n                })\n        },\n        loadBoard() {\n            this.$store.dispatch({\n                type: 'loadBoard',\n                boardId: this.$route.params.boardId,\n            })\n        },\n        addGroup() {\n            const newGroup = boardService.getEmptyGroup()\n            this.board.groups.push(newGroup)\n            const txt = `${this.user.fullName} has added a new group!`\n            let newActivity = boardService.getEmptyActivity(txt, this.user)\n            this.board.activities.push(newActivity)\n            this.$store.dispatch({\n                type: 'saveBoard',\n                board: this.board,\n            })\n            this.$notify({\n                message: 'A new group was added',\n                position: 'bottom-left',\n                duration: 2000,\n            })\n            this.forceRerender()\n        },\n        deleteGroup(groupId) {\n            const idx = this.board.groups.findIndex(\n                (group) => group.id === groupId\n            )\n            this.board.groups.splice(idx, 1)\n            const txt = `${this.user.fullName} deleted group`\n            let newActivity = boardService.getEmptyActivity(txt, this.user)\n            this.board.activities.push(newActivity)\n            this.$store.dispatch({\n                type: 'saveBoard',\n                board: this.board,\n            })\n            this.$notify({\n                message: 'The group has been deleted',\n                position: 'bottom-left',\n                duration: 2000,\n            })\n            this.forceRerender()\n        },\n        updateGroup(updatedGroup) {\n            const idx = this.board.groups.findIndex(\n                (group) => group.id === updatedGroup.id\n            )\n            this.board.groups.splice(idx, 1, updatedGroup)\n            const txt = `${this.user.fullName} updated  group`\n            let newActivity = boardService.getEmptyActivity(txt, this.user)\n            this.board.activities.push(newActivity)\n            this.$store.dispatch({\n                type: 'saveBoard',\n                board: this.board,\n            })\n            this.$notify({\n                message: 'Group has been updated',\n                position: 'bottom-left',\n                duration: 2000,\n            })\n            this.forceRerender()\n        },\n        updateBoardActivity(activity) {\n            this.board.activities.unshift(activity)\n            console.log('this.board.activities:', this.board.activities)\n            this.$store.dispatch({\n                type: 'saveBoard',\n                board: this.board,\n            })\n        },\n        updateGroups(groups) {\n            this.board.groups = groups\n            const txt = `${this.user.fullName} updated the groups`\n            let newActivity = boardService.getEmptyActivity(txt, this.user)\n            this.board.activities.push(newActivity)\n            this.$store.dispatch({\n                type: 'saveBoard',\n                board: this.board,\n            })\n            this.$notify({\n                message: 'The Groups has been saved',\n                position: 'bottom-left',\n                duration: 2000,\n            })\n            this.forceRerender()\n        },\n    },\n    watch: {\n        async '$route.params.boardId'() {\n            await this.loadBoard()\n            this.forceRerender()\n        },\n    },\n    async created() {\n        eventBus.$on('updateBoardActivity', this.updateBoardActivity)\n        await this.$store.dispatch({ type: 'loadUsers' })\n        await this.$store.dispatch({ type: 'loadBoards' })\n        this.loadBoard()\n    },\n    components: {\n        groupList,\n        boardList,\n        // boardFilter,\n        // addMembers,\n        taskDetails,\n        boardSearch,\n        chatApp,\n        boardHeader,\n    },\n}\n</script>\n"],"sourceRoot":"src/views"}]}