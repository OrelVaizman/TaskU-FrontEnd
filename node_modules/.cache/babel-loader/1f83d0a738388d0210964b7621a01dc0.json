{"remainingRequest":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/thread-loader/dist/cjs.js!/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/babel-loader/lib/index.js!/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/src/views/task-details.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/src/views/task-details.vue","mtime":1607418824560},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmluZCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmZpbmQtaW5kZXgiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5mb3ItZWFjaCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LnNwbGljZSI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuZm9yLWVhY2giOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgc2lkZUJhciBmcm9tICdAL2NtcHMvc2lkZWJhci52dWUnOwppbXBvcnQgdGFza1Bvc3RzIGZyb20gJ0AvY21wcy90YXNrLXBvc3RzJzsKaW1wb3J0IHRhc2tBY3Rpdml0aWVzIGZyb20gJ0AvY21wcy90YXNrLWFjdGl2aXRpZXMnOwppbXBvcnQgeyBldmVudEJ1cyB9IGZyb20gJ0Avc2VydmljZXMvZXZlbnQtYnVzLnNlcnZpY2UnOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ3Rhc2stZGV0YWlscycsCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHRhc2s6IG51bGwsCiAgICAgIGdyb3VwSWQ6IG51bGwsCiAgICAgIGNvbXBvbmVudEtleTogMCwKICAgICAgbmV3UG9zdDogbnVsbAogICAgfTsKICB9LAogIGNyZWF0ZWQ6IGZ1bmN0aW9uIGNyZWF0ZWQoKSB7CiAgICB2YXIgdGFza0luZm8gPSB0aGlzLmdldFRhc2tJbmZvQnlJZCgpOwogICAgdGhpcy50YXNrID0gdGFza0luZm8udGFzazsKICAgIHRoaXMuZ3JvdXBJZCA9IHRhc2tJbmZvLmdyb3VwSWQ7CiAgfSwKICBtZXRob2RzOiB7CiAgICBkZWxldGVQb3N0OiBmdW5jdGlvbiBkZWxldGVQb3N0KHBvc3RJZCkgewogICAgICBjb25zb2xlLmxvZygnaGVyZScsIHBvc3RJZCk7CiAgICAgIHZhciBwb3N0SWR4ID0gdGhpcy50YXNrLnBvc3RzLmZpbmRJbmRleChmdW5jdGlvbiAocG9zdCkgewogICAgICAgIHJldHVybiBwb3N0LmlkID09PSBwb3N0SWQ7CiAgICAgIH0pOwogICAgICB0aGlzLnRhc2sucG9zdHMuc3BsaWNlKHBvc3RJZHgsIDEpOwogICAgICB0aGlzLiRzdG9yZS5kaXNwYXRjaCh7CiAgICAgICAgdHlwZTogJ3NhdmVCb2FyZCcsCiAgICAgICAgYm9hcmQ6IHRoaXMuYm9hcmQKICAgICAgfSk7CiAgICAgIGV2ZW50QnVzLiRlbWl0KCdmb3JjZVJlcmVuZGVyJyk7CiAgICB9LAogICAgZ2V0U3R5bGVTdHI6IGZ1bmN0aW9uIGdldFN0eWxlU3RyKGNvbG9yU3RyKSB7CiAgICAgIHJldHVybiAiYmFja2dyb3VuZENvbG9yOiIuY29uY2F0KGNvbG9yU3RyKTsKICAgIH0sCiAgICBjbG9zZUJ0bjogZnVuY3Rpb24gY2xvc2VCdG4oKSB7CiAgICAgIHRoaXMuJHJvdXRlci5wdXNoKCIvYm9hcmQvIi5jb25jYXQodGhpcy4kcm91dGUucGFyYW1zLmJvYXJkSWQpKTsKICAgIH0sCiAgICBnZXRUYXNrc1BhdGg6IGZ1bmN0aW9uIGdldFRhc2tzUGF0aCgpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIHZhciBncm91cElkeCA9IHRoaXMuYm9hcmQuZ3JvdXBzLmZpbmRJbmRleChmdW5jdGlvbiAoZ3JvdXApIHsKICAgICAgICByZXR1cm4gZ3JvdXAuaWQgPT09IF90aGlzLmdyb3VwSWQ7CiAgICAgIH0pOwogICAgICB2YXIgdGFza3MgPSB0aGlzLmJvYXJkLmdyb3Vwc1tncm91cElkeF0udGFza3M7CiAgICAgIHJldHVybiB0YXNrczsKICAgIH0sCiAgICB1cGRhdGVUYXNrVHh0OiBmdW5jdGlvbiB1cGRhdGVUYXNrVHh0KGV2KSB7CiAgICAgIHZhciBfdGhpczIgPSB0aGlzOwoKICAgICAgZXYudGFyZ2V0LmJsdXIoKTsKICAgICAgaWYgKGV2LnRhcmdldC5pbm5lclRleHQgPT09IHRoaXMudGFzay50eHQpIHJldHVybjtlbHNlIHsKICAgICAgICB0aGlzLnRhc2sudHh0ID0gZXYudGFyZ2V0LmlubmVyVGV4dDsKICAgICAgICB2YXIgdGFza3MgPSB0aGlzLmdldFRhc2tzUGF0aCgpOwogICAgICAgIHZhciB0YXNrSWR4ID0gdGFza3MuZmluZEluZGV4KGZ1bmN0aW9uICh0YXNrKSB7CiAgICAgICAgICByZXR1cm4gdGFzay5pZCA9PT0gX3RoaXMyLnRhc2suaWQ7CiAgICAgICAgfSk7CiAgICAgICAgdGFza3Muc3BsaWNlKHRhc2tJZHgsIDEsIHRoaXMudGFzayk7CiAgICAgICAgdGhpcy4kc3RvcmUuZGlzcGF0Y2goewogICAgICAgICAgdHlwZTogJ3NhdmVCb2FyZCcsCiAgICAgICAgICBib2FyZDogdGhpcy5ib2FyZAogICAgICAgIH0pOwogICAgICAgIGV2ZW50QnVzLiRlbWl0KCd1cGRhdGVUYXNrUHJldmlldycsIHRoaXMudGFzayk7CiAgICAgIH0KICAgIH0sCiAgICB1cGRhdGVQb3N0czogZnVuY3Rpb24gdXBkYXRlUG9zdHMocG9zdHMsIGFjdGl2aXR5KSB7CiAgICAgIHZhciBfdGhpczMgPSB0aGlzOwoKICAgICAgdmFyIHRhc2tzID0gdGhpcy5nZXRUYXNrc1BhdGgoKTsKICAgICAgdmFyIHRhc2tJZHggPSB0YXNrcy5maW5kSW5kZXgoZnVuY3Rpb24gKHRhc2spIHsKICAgICAgICByZXR1cm4gdGFzay5pZCA9PT0gX3RoaXMzLnRhc2suaWQ7CiAgICAgIH0pOwogICAgICB0YXNrc1t0YXNrSWR4XS5wb3N0cyA9IHBvc3RzOwogICAgICB0aGlzLmJvYXJkLmFjdGl2aXRpZXMudW5zaGlmdChhY3Rpdml0eSk7CiAgICAgIHRoaXMuJHN0b3JlLmRpc3BhdGNoKHsKICAgICAgICB0eXBlOiAnc2F2ZUJvYXJkJywKICAgICAgICBib2FyZDogdGhpcy5ib2FyZAogICAgICB9KTsKICAgICAgZXZlbnRCdXMuJGVtaXQoJ3VwZGF0ZVRhc2tQcmV2aWV3JywgdGhpcy50YXNrKTsKICAgIH0sCiAgICBnZXRUYXNrSW5mb0J5SWQ6IGZ1bmN0aW9uIGdldFRhc2tJbmZvQnlJZCgpIHsKICAgICAgdmFyIHRhc2tJbmZvID0ge307CiAgICAgIHZhciB0YXNrSWQgPSB0aGlzLiRyb3V0ZS5wYXJhbXMudGFza0lkOwogICAgICB2YXIgZ3JvdXAgPSB0aGlzLmJvYXJkLmdyb3Vwcy5maW5kKGZ1bmN0aW9uIChncm91cCkgewogICAgICAgIHJldHVybiBncm91cC50YXNrcy5maW5kKGZ1bmN0aW9uICh0YXNrKSB7CiAgICAgICAgICByZXR1cm4gdGFzay5pZCA9PT0gdGFza0lkOwogICAgICAgIH0pOwogICAgICB9KTsKICAgICAgdGFza0luZm8udGFzayA9IGdyb3VwLnRhc2tzLmZpbmQoZnVuY3Rpb24gKHRhc2spIHsKICAgICAgICByZXR1cm4gdGFzay5pZCA9PT0gdGFza0lkOwogICAgICB9KTsKICAgICAgdGFza0luZm8uZ3JvdXBJZCA9IGdyb3VwLmlkOwogICAgICByZXR1cm4gdGFza0luZm87CiAgICB9LAogICAgZm9yY2VSZXJlbmRlcjogZnVuY3Rpb24gZm9yY2VSZXJlbmRlcigpIHsKICAgICAgdGhpcy5jb21wb25lbnRLZXkgKz0gMTsKICAgIH0KICB9LAogIGNvbXB1dGVkOiB7CiAgICBib2FyZDogZnVuY3Rpb24gYm9hcmQoKSB7CiAgICAgIHJldHVybiB0aGlzLiRzdG9yZS5nZXR0ZXJzLmJvYXJkOwogICAgfSwKICAgIHVzZXI6IGZ1bmN0aW9uIHVzZXIoKSB7CiAgICAgIHJldHVybiB0aGlzLiRzdG9yZS5nZXR0ZXJzLnVzZXI7CiAgICB9LAogICAgcG9zdHM6IGZ1bmN0aW9uIHBvc3RzKCkgewogICAgICByZXR1cm4gdGhpcy50YXNrLnBvc3RzOwogICAgfSwKICAgIHRhc2tBY3Rpdml0aWVzOiBmdW5jdGlvbiB0YXNrQWN0aXZpdGllcygpIHsKICAgICAgdmFyIHRhc2tBY3Rpdml0aWVzID0gW107CiAgICAgIHZhciBib2FyZEFjdGl2aXRpZXMgPSBKU09OLnBhcnNlKEpTT04uc3RyaW5naWZ5KHRoaXMuJHN0b3JlLmdldHRlcnMuYm9hcmRBY3Rpdml0aWVzKSk7CiAgICAgIHZhciB0YXNrSWQgPSB0aGlzLiRyb3V0ZS5wYXJhbXMudGFza0lkOwogICAgICBib2FyZEFjdGl2aXRpZXMuZm9yRWFjaChmdW5jdGlvbiAoYWN0aXZpdHkpIHsKICAgICAgICBpZiAoYWN0aXZpdHkudGFza0lkID09PSB0YXNrSWQpIHRhc2tBY3Rpdml0aWVzLnB1c2goYWN0aXZpdHkpOwogICAgICB9KTsKICAgICAgcmV0dXJuIHRhc2tBY3Rpdml0aWVzOwogICAgfQogIH0sCiAgd2F0Y2g6IHsKICAgICckcm91dGUucGFyYW1zLnRhc2tJZCc6IGZ1bmN0aW9uICRyb3V0ZVBhcmFtc1Rhc2tJZCgpIHsKICAgICAgdmFyIHRhc2tJbmZvID0gdGhpcy5nZXRUYXNrSW5mb0J5SWQoKTsKICAgICAgdGhpcy5ncm91cElkID0gdGFza0luZm8uZ3JvdXBJZDsKICAgICAgdGhpcy50YXNrID0gSlNPTi5wYXJzZShKU09OLnN0cmluZ2lmeSh0YXNrSW5mby50YXNrKSk7CiAgICB9CiAgfSwKICBkZXN0cm95ZWQ6IGZ1bmN0aW9uIGRlc3Ryb3llZCgpIHsKICAgIGV2ZW50QnVzLiRlbWl0KCd1cGRhdGVUYXNrUHJldmlld0Rlc3RvcnknLCB0aGlzLnRhc2spOwogIH0sCiAgY29tcG9uZW50czogewogICAgdGFza1Bvc3RzOiB0YXNrUG9zdHMsCiAgICB0YXNrQWN0aXZpdGllczogdGFza0FjdGl2aXRpZXMsCiAgICBzaWRlQmFyOiBzaWRlQmFyCiAgfQp9Ow=="},{"version":3,"sources":["task-details.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmCA,OAAA,OAAA,MAAA,oBAAA;AACA,OAAA,SAAA,MAAA,mBAAA;AACA,OAAA,cAAA,MAAA,wBAAA;AACA,SAAA,QAAA,QAAA,8BAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,cADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,IAAA,EAAA,IADA;AAEA,MAAA,OAAA,EAAA,IAFA;AAGA,MAAA,YAAA,EAAA,CAHA;AAIA,MAAA,OAAA,EAAA;AAJA,KAAA;AAMA,GATA;AAUA,EAAA,OAVA,qBAUA;AACA,QAAA,QAAA,GAAA,KAAA,eAAA,EAAA;AACA,SAAA,IAAA,GAAA,QAAA,CAAA,IAAA;AACA,SAAA,OAAA,GAAA,QAAA,CAAA,OAAA;AACA,GAdA;AAeA,EAAA,OAAA,EAAA;AACA,IAAA,UADA,sBACA,MADA,EACA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,MAAA,EAAA,MAAA;AACA,UAAA,OAAA,GAAA,KAAA,IAAA,CAAA,KAAA,CAAA,SAAA,CAAA,UAAA,IAAA;AAAA,eAAA,IAAA,CAAA,EAAA,KAAA,MAAA;AAAA,OAAA,CAAA;AACA,WAAA,IAAA,CAAA,KAAA,CAAA,MAAA,CAAA,OAAA,EAAA,CAAA;AACA,WAAA,MAAA,CAAA,QAAA,CAAA;AACA,QAAA,IAAA,EAAA,WADA;AAEA,QAAA,KAAA,EAAA,KAAA;AAFA,OAAA;AAIA,MAAA,QAAA,CAAA,KAAA,CAAA,eAAA;AACA,KAVA;AAWA,IAAA,WAXA,uBAWA,QAXA,EAWA;AACA,uCAAA,QAAA;AACA,KAbA;AAcA,IAAA,QAdA,sBAcA;AACA,WAAA,OAAA,CAAA,IAAA,kBAAA,KAAA,MAAA,CAAA,MAAA,CAAA,OAAA;AACA,KAhBA;AAiBA,IAAA,YAjBA,0BAiBA;AAAA;;AACA,UAAA,QAAA,GAAA,KAAA,KAAA,CAAA,MAAA,CAAA,SAAA,CACA,UAAA,KAAA;AAAA,eAAA,KAAA,CAAA,EAAA,KAAA,KAAA,CAAA,OAAA;AAAA,OADA,CAAA;AAGA,UAAA,KAAA,GAAA,KAAA,KAAA,CAAA,MAAA,CAAA,QAAA,EAAA,KAAA;AACA,aAAA,KAAA;AACA,KAvBA;AAwBA,IAAA,aAxBA,yBAwBA,EAxBA,EAwBA;AAAA;;AACA,MAAA,EAAA,CAAA,MAAA,CAAA,IAAA;AACA,UAAA,EAAA,CAAA,MAAA,CAAA,SAAA,KAAA,KAAA,IAAA,CAAA,GAAA,EAAA,OAAA,KACA;AACA,aAAA,IAAA,CAAA,GAAA,GAAA,EAAA,CAAA,MAAA,CAAA,SAAA;AACA,YAAA,KAAA,GAAA,KAAA,YAAA,EAAA;AACA,YAAA,OAAA,GAAA,KAAA,CAAA,SAAA,CAAA,UAAA,IAAA;AAAA,iBAAA,IAAA,CAAA,EAAA,KAAA,MAAA,CAAA,IAAA,CAAA,EAAA;AAAA,SAAA,CAAA;AACA,QAAA,KAAA,CAAA,MAAA,CAAA,OAAA,EAAA,CAAA,EAAA,KAAA,IAAA;AACA,aAAA,MAAA,CAAA,QAAA,CAAA;AACA,UAAA,IAAA,EAAA,WADA;AAEA,UAAA,KAAA,EAAA,KAAA;AAFA,SAAA;AAIA,QAAA,QAAA,CAAA,KAAA,CAAA,mBAAA,EAAA,KAAA,IAAA;AACA;AACA,KAtCA;AAuCA,IAAA,WAvCA,uBAuCA,KAvCA,EAuCA,QAvCA,EAuCA;AAAA;;AACA,UAAA,KAAA,GAAA,KAAA,YAAA,EAAA;AACA,UAAA,OAAA,GAAA,KAAA,CAAA,SAAA,CAAA,UAAA,IAAA;AAAA,eAAA,IAAA,CAAA,EAAA,KAAA,MAAA,CAAA,IAAA,CAAA,EAAA;AAAA,OAAA,CAAA;AACA,MAAA,KAAA,CAAA,OAAA,CAAA,CAAA,KAAA,GAAA,KAAA;AACA,WAAA,KAAA,CAAA,UAAA,CAAA,OAAA,CAAA,QAAA;AACA,WAAA,MAAA,CAAA,QAAA,CAAA;AACA,QAAA,IAAA,EAAA,WADA;AAEA,QAAA,KAAA,EAAA,KAAA;AAFA,OAAA;AAKA,MAAA,QAAA,CAAA,KAAA,CAAA,mBAAA,EAAA,KAAA,IAAA;AACA,KAlDA;AAmDA,IAAA,eAnDA,6BAmDA;AACA,UAAA,QAAA,GAAA,EAAA;AACA,UAAA,MAAA,GAAA,KAAA,MAAA,CAAA,MAAA,CAAA,MAAA;AACA,UAAA,KAAA,GAAA,KAAA,KAAA,CAAA,MAAA,CAAA,IAAA,CAAA,UAAA,KAAA;AAAA,eACA,KAAA,CAAA,KAAA,CAAA,IAAA,CAAA,UAAA,IAAA;AAAA,iBAAA,IAAA,CAAA,EAAA,KAAA,MAAA;AAAA,SAAA,CADA;AAAA,OAAA,CAAA;AAGA,MAAA,QAAA,CAAA,IAAA,GAAA,KAAA,CAAA,KAAA,CAAA,IAAA,CAAA,UAAA,IAAA;AAAA,eAAA,IAAA,CAAA,EAAA,KAAA,MAAA;AAAA,OAAA,CAAA;AACA,MAAA,QAAA,CAAA,OAAA,GAAA,KAAA,CAAA,EAAA;AACA,aAAA,QAAA;AACA,KA5DA;AA6DA,IAAA,aA7DA,2BA6DA;AACA,WAAA,YAAA,IAAA,CAAA;AACA;AA/DA,GAfA;AAgFA,EAAA,QAAA,EAAA;AACA,IAAA,KADA,mBACA;AACA,aAAA,KAAA,MAAA,CAAA,OAAA,CAAA,KAAA;AACA,KAHA;AAIA,IAAA,IAJA,kBAIA;AACA,aAAA,KAAA,MAAA,CAAA,OAAA,CAAA,IAAA;AACA,KANA;AAOA,IAAA,KAPA,mBAOA;AACA,aAAA,KAAA,IAAA,CAAA,KAAA;AACA,KATA;AAUA,IAAA,cAVA,4BAUA;AACA,UAAA,cAAA,GAAA,EAAA;AACA,UAAA,eAAA,GAAA,IAAA,CAAA,KAAA,CACA,IAAA,CAAA,SAAA,CAAA,KAAA,MAAA,CAAA,OAAA,CAAA,eAAA,CADA,CAAA;AAGA,UAAA,MAAA,GAAA,KAAA,MAAA,CAAA,MAAA,CAAA,MAAA;AACA,MAAA,eAAA,CAAA,OAAA,CAAA,UAAA,QAAA,EAAA;AACA,YAAA,QAAA,CAAA,MAAA,KAAA,MAAA,EAAA,cAAA,CAAA,IAAA,CAAA,QAAA;AACA,OAFA;AAGA,aAAA,cAAA;AACA;AApBA,GAhFA;AAsGA,EAAA,KAAA,EAAA;AACA,0BADA,gCACA;AACA,UAAA,QAAA,GAAA,KAAA,eAAA,EAAA;AACA,WAAA,OAAA,GAAA,QAAA,CAAA,OAAA;AACA,WAAA,IAAA,GAAA,IAAA,CAAA,KAAA,CAAA,IAAA,CAAA,SAAA,CAAA,QAAA,CAAA,IAAA,CAAA,CAAA;AACA;AALA,GAtGA;AA6GA,EAAA,SA7GA,uBA6GA;AACA,IAAA,QAAA,CAAA,KAAA,CAAA,0BAAA,EAAA,KAAA,IAAA;AACA,GA/GA;AAgHA,EAAA,UAAA,EAAA;AACA,IAAA,SAAA,EAAA,SADA;AAEA,IAAA,cAAA,EAAA,cAFA;AAGA,IAAA,OAAA,EAAA;AAHA;AAhHA,CAAA","sourcesContent":["<template>\n  <side-bar @closeBtn=\"closeBtn\">\n    <section v-if=\"task\" class=\"task-details-section\">\n      <div class=\"task-title-container\">\n        <h2\n          class=\"task-title editable\"\n          spellcheck=\"false\"\n          @blur.stop=\"updateTaskTxt\"\n          @keyup.enter=\"updateTaskTxt\"\n          contenteditable\n        >\n          {{ task.txt }}\n        </h2>\n      </div>\n      <el-tabs>\n        <el-tab-pane label=\"Task Posts\">\n          <task-posts\n            v-if=\"posts\"\n            @updatePosts=\"updatePosts\"\n            @deletePost=\"deletePost\"\n            :task=\"task\"\n            :posts=\"posts\"\n          />\n        </el-tab-pane>\n        <el-tab-pane label=\"Task Activities\">\n          <task-activities\n            v-if=\"taskActivities && taskActivities.length\"\n            :activities=\"taskActivities\"\n          />\n        </el-tab-pane>\n      </el-tabs>\n    </section>\n  </side-bar>\n</template>\n<script>\nimport sideBar from '@/cmps/sidebar.vue'\nimport taskPosts from '@/cmps/task-posts'\nimport taskActivities from '@/cmps/task-activities'\nimport { eventBus } from '@/services/event-bus.service'\n\nexport default {\n  name: 'task-details',\n  data() {\n    return {\n      task: null,\n      groupId: null,\n      componentKey: 0,\n      newPost: null\n    }\n  },\n  created() {\n    const taskInfo = this.getTaskInfoById()\n    this.task = taskInfo.task\n    this.groupId = taskInfo.groupId\n  },\n  methods: {\n    deletePost(postId) {\n      console.log('here', postId)\n      const postIdx = this.task.posts.findIndex(post => post.id === postId)\n      this.task.posts.splice(postIdx, 1)\n      this.$store.dispatch({\n        type: 'saveBoard',\n        board: this.board\n      })\n      eventBus.$emit('forceRerender')\n    },\n    getStyleStr(colorStr) {\n      return `backgroundColor:${colorStr}`\n    },\n    closeBtn() {\n      this.$router.push(`/board/${this.$route.params.boardId}`)\n    },\n    getTasksPath() {\n      const groupIdx = this.board.groups.findIndex(\n        group => group.id === this.groupId\n      )\n      const tasks = this.board.groups[groupIdx].tasks\n      return tasks\n    },\n    updateTaskTxt(ev) {\n      ev.target.blur()\n      if (ev.target.innerText === this.task.txt) return\n      else {\n        this.task.txt = ev.target.innerText\n        const tasks = this.getTasksPath()\n        const taskIdx = tasks.findIndex(task => task.id === this.task.id)\n        tasks.splice(taskIdx, 1, this.task)\n        this.$store.dispatch({\n          type: 'saveBoard',\n          board: this.board\n        })\n        eventBus.$emit('updateTaskPreview', this.task)\n      }\n    },\n    updatePosts(posts, activity) {\n      const tasks = this.getTasksPath()\n      const taskIdx = tasks.findIndex(task => task.id === this.task.id)\n      tasks[taskIdx].posts = posts\n      this.board.activities.unshift(activity)\n      this.$store.dispatch({\n        type: 'saveBoard',\n        board: this.board\n      })\n\n      eventBus.$emit('updateTaskPreview', this.task)\n    },\n    getTaskInfoById() {\n      let taskInfo = {}\n      const taskId = this.$route.params.taskId\n      const group = this.board.groups.find(group =>\n        group.tasks.find(task => task.id === taskId)\n      )\n      taskInfo.task = group.tasks.find(task => task.id === taskId)\n      taskInfo.groupId = group.id\n      return taskInfo\n    },\n    forceRerender() {\n      this.componentKey += 1\n    }\n  },\n  computed: {\n    board() {\n      return this.$store.getters.board\n    },\n    user() {\n      return this.$store.getters.user\n    },\n    posts() {\n      return this.task.posts\n    },\n    taskActivities() {\n      let taskActivities = []\n      const boardActivities = JSON.parse(\n        JSON.stringify(this.$store.getters.boardActivities)\n      )\n      const taskId = this.$route.params.taskId\n      boardActivities.forEach(activity => {\n        if (activity.taskId === taskId) taskActivities.push(activity)\n      })\n      return taskActivities\n    }\n  },\n  watch: {\n    '$route.params.taskId'() {\n      const taskInfo = this.getTaskInfoById()\n      this.groupId = taskInfo.groupId\n      this.task = JSON.parse(JSON.stringify(taskInfo.task))\n    }\n  },\n  destroyed() {\n    eventBus.$emit('updateTaskPreviewDestory', this.task)\n  },\n  components: {\n    taskPosts,\n    taskActivities,\n    sideBar\n  }\n}\n</script>\n"],"sourceRoot":"src/views"}]}