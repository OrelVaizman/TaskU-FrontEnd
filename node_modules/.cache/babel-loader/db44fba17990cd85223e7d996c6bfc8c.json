{"remainingRequest":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/babel-loader/lib/index.js!/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/src/cmps/group-preview.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/src/cmps/group-preview.vue","mtime":1606750301946},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkucmVkdWNlIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZSI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCBwcm9ncmVzc0JhciBmcm9tICdAL2NtcHMvcHJvZ3Jlc3MtYmFyJzsKaW1wb3J0IHRhc2tMaXN0IGZyb20gJy4vdGFzay1saXN0LnZ1ZSc7CmltcG9ydCBjb2xvcnNNZW51IGZyb20gJy4vY29sb3JzLW1lbnUnOwppbXBvcnQgeyBldmVudEJ1cyB9IGZyb20gJ0Avc2VydmljZXMvZXZlbnQtYnVzLnNlcnZpY2UnOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ2dyb3VwLXByZXZpZXcnLAogIHByb3BzOiB7CiAgICBncm91cDogT2JqZWN0LAogICAgZGVsZXRlR3JvdXA6IEZ1bmN0aW9uCiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgaXNFeHBhbmRlZDogdHJ1ZSwKICAgICAgZ3JvdXBDb3B5OiBudWxsLAogICAgICBpc0FjdGlvbnNTaG93ZW46IGZhbHNlLAogICAgICBpc0NvbG9yc1Nob3dlbjogZmFsc2UKICAgIH07CiAgfSwKICBtZXRob2RzOiB7CiAgICBhZGROZXdUYXNrOiBmdW5jdGlvbiBhZGROZXdUYXNrKCkgewogICAgICBjb25zb2xlLmxvZygnKioqKioqKioqKkFERERJTkcgTkVXIFRBU0sqKioqKioqJyk7CiAgICAgIGV2ZW50QnVzLiRlbWl0KCdhZGRFbXB0eVRhc2snLCB0aGlzLmdyb3VwQ29weS5pZCk7CiAgICB9LAogICAgZm9jdXNHcm91cE5hbWU6IGZ1bmN0aW9uIGZvY3VzR3JvdXBOYW1lKCkgewogICAgICB0aGlzLiRyZWZzLmdyb3VwTmFtZS5mb2N1cygpOwogICAgICB0aGlzLmlzQWN0aW9uc1Nob3dlbiA9IGZhbHNlOwogICAgfSwKICAgIGdldFN0eWxlU3RyOiBmdW5jdGlvbiBnZXRTdHlsZVN0cihjb2xvclN0cikgewogICAgICByZXR1cm4gImJhY2tncm91bmRDb2xvcjoiLmNvbmNhdChjb2xvclN0cik7CiAgICB9LAogICAgZHVwbGljYXRlR3JvdXA6IGZ1bmN0aW9uIGR1cGxpY2F0ZUdyb3VwKCkgewogICAgICB0aGlzLiRlbWl0KCdkdXBsaWNhdGVHcm91cCcsIHRoaXMuZ3JvdXBDb3B5KTsKICAgIH0sCiAgICBlbWl0Rm9yY2VSZW5kZXI6IGZ1bmN0aW9uIGVtaXRGb3JjZVJlbmRlcigpIHsKICAgICAgdGhpcy4kZW1pdCgnZW1pdEZvcmNlUmVuZGVyJyk7CiAgICB9LAogICAgdG9nZ2xlQ29sb3JzTWVudTogZnVuY3Rpb24gdG9nZ2xlQ29sb3JzTWVudSgpIHsKICAgICAgdGhpcy5pc0NvbG9yc1Nob3dlbiA9ICF0aGlzLmlzQ29sb3JzU2hvd2VuOwogICAgfSwKICAgIHRvZ2dsZUdyb3VwQWN0aW9uczogZnVuY3Rpb24gdG9nZ2xlR3JvdXBBY3Rpb25zKCkgewogICAgICB0aGlzLmlzQWN0aW9uc1Nob3dlbiA9ICF0aGlzLmlzQWN0aW9uc1Nob3dlbjsKICAgIH0sCiAgICBlbWl0RGVsZXRlOiBmdW5jdGlvbiBlbWl0RGVsZXRlKGdyb3VwSWQpIHsKICAgICAgdGhpcy4kZW1pdCgnZGVsZXRlR3JvdXAnLCBncm91cElkKTsKICAgICAgdGhpcy5pc0V4cGFuZGVkID0gZmFsc2U7CiAgICB9LAogICAgdG9nZ2xlR3JvdXA6IGZ1bmN0aW9uIHRvZ2dsZUdyb3VwKCkgewogICAgICB0aGlzLmlzRXhwYW5kZWQgPSAhdGhpcy5pc0V4cGFuZGVkOwogICAgICB0aGlzLmlzQWN0aW9uc1Nob3dlbiA9IGZhbHNlOwogICAgfSwKICAgIGV4cGFuZEdyb3VwOiBmdW5jdGlvbiBleHBhbmRHcm91cCgpIHsKICAgICAgdGhpcy5pc0V4cGFuZGVkID0gdHJ1ZTsKICAgICAgdGhpcy5pc0FjdGlvbnNTaG93ZW4gPSBmYWxzZTsKICAgIH0sCiAgICBzZXRHcm91cENvbG9yOiBmdW5jdGlvbiBzZXRHcm91cENvbG9yKGNvbG9yKSB7CiAgICAgIHRoaXMuaXNBY3Rpb25zU2hvd2VuID0gZmFsc2U7CiAgICAgIHRoaXMuZ3JvdXBDb3B5LmNvbG9yID0gY29sb3I7CiAgICAgIHRoaXMuaXNDb2xvcnNTaG93ZW4gPSBmYWxzZTsKICAgICAgdGhpcy4kZW1pdCgndXBkYXRlR3JvdXAnLCB0aGlzLmdyb3VwQ29weSk7CiAgICB9LAogICAgdXBkYXRlR3JvdXBOYW1lOiBmdW5jdGlvbiB1cGRhdGVHcm91cE5hbWUoZXYpIHsKICAgICAgdGhpcy5ncm91cENvcHkubmFtZSA9IGV2LnRhcmdldC5pbm5lclRleHQ7CiAgICAgIHRoaXMuJGVtaXQoJ3VwZGF0ZUdyb3VwJywgdGhpcy5ncm91cENvcHkpOwogICAgfQogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIHByb2dyZXNzQmFyRGF0YTogZnVuY3Rpb24gcHJvZ3Jlc3NCYXJEYXRhKCkgewogICAgICB2YXIgc3RhdHVzUGVyY2VudGFnZU1hcCA9IHRoaXMuZ3JvdXAudGFza3MucmVkdWNlKGZ1bmN0aW9uIChhY2MsIHRhc2spIHsKICAgICAgICBpZiAoIWFjY1t0YXNrLnN0YXR1cy50eHRdKSBhY2NbdGFzay5zdGF0dXMudHh0XSA9IHsKICAgICAgICAgIGNvdW50OiAwLAogICAgICAgICAgc3RhdHVzQ29sb3I6IHRhc2suc3RhdHVzLmNvbG9yCiAgICAgICAgfTsKICAgICAgICBhY2NbdGFzay5zdGF0dXMudHh0XS5jb3VudCsrOwogICAgICAgIHJldHVybiBhY2M7CiAgICAgIH0sIHt9KTsKICAgICAgdmFyIHRvdGFsU3VtID0gdGhpcy5ncm91cC50YXNrcy5sZW5ndGg7CgogICAgICBmb3IgKHZhciBrZXkgaW4gc3RhdHVzUGVyY2VudGFnZU1hcCkgewogICAgICAgIHN0YXR1c1BlcmNlbnRhZ2VNYXBba2V5XS5mcmFjdGlvbiA9ICIiLmNvbmNhdChzdGF0dXNQZXJjZW50YWdlTWFwW2tleV0uY291bnQsICIgLyAiKS5jb25jYXQodG90YWxTdW0pOwogICAgICAgIHN0YXR1c1BlcmNlbnRhZ2VNYXBba2V5XS5wZXJjZW50YWdlID0gc3RhdHVzUGVyY2VudGFnZU1hcFtrZXldLmNvdW50IC8gdG90YWxTdW0gKiAxMDA7CiAgICAgICAgc3RhdHVzUGVyY2VudGFnZU1hcFtrZXldLm5hbWUgPSBrZXk7CiAgICAgIH0KCiAgICAgIHJldHVybiBzdGF0dXNQZXJjZW50YWdlTWFwOwogICAgfSwKICAgIHByb2dyZXNzQmFyUHJpbzogZnVuY3Rpb24gcHJvZ3Jlc3NCYXJQcmlvKCkgewogICAgICB2YXIgcHJpb3JpdHlQZXJjZW50YWdlTWFwID0gdGhpcy5ncm91cC50YXNrcy5yZWR1Y2UoZnVuY3Rpb24gKGFjYywgdGFzaykgewogICAgICAgIGlmICghYWNjW3Rhc2sucHJpb3JpdHkudHh0XSkgYWNjW3Rhc2sucHJpb3JpdHkudHh0XSA9IHsKICAgICAgICAgIGNvdW50OiAwLAogICAgICAgICAgc3RhdHVzQ29sb3I6IHRhc2sucHJpb3JpdHkuY29sb3IKICAgICAgICB9OwogICAgICAgIGFjY1t0YXNrLnByaW9yaXR5LnR4dF0uY291bnQrKzsKICAgICAgICByZXR1cm4gYWNjOwogICAgICB9LCB7fSk7CiAgICAgIHZhciB0b3RhbFN1bSA9IHRoaXMuZ3JvdXAudGFza3MubGVuZ3RoOwoKICAgICAgZm9yICh2YXIga2V5IGluIHByaW9yaXR5UGVyY2VudGFnZU1hcCkgewogICAgICAgIHByaW9yaXR5UGVyY2VudGFnZU1hcFtrZXldLmZyYWN0aW9uID0gIiIuY29uY2F0KHByaW9yaXR5UGVyY2VudGFnZU1hcFtrZXldLmNvdW50LCAiIC8gIikuY29uY2F0KHRvdGFsU3VtKTsKICAgICAgICBwcmlvcml0eVBlcmNlbnRhZ2VNYXBba2V5XS5wZXJjZW50YWdlID0gcHJpb3JpdHlQZXJjZW50YWdlTWFwW2tleV0uY291bnQgLyB0b3RhbFN1bSAqIDEwMDsKICAgICAgICBwcmlvcml0eVBlcmNlbnRhZ2VNYXBba2V5XS5uYW1lID0ga2V5OwogICAgICB9CgogICAgICByZXR1cm4gcHJpb3JpdHlQZXJjZW50YWdlTWFwOwogICAgfSwKICAgIHRhc2tzQ291bnQ6IGZ1bmN0aW9uIHRhc2tzQ291bnQoKSB7CiAgICAgIHJldHVybiAiIi5jb25jYXQodGhpcy5ncm91cENvcHkudGFza3MubGVuZ3RoLCAiIGl0ZW1zIik7CiAgICB9LAogICAgZXhwYW5kZWQ6IGZ1bmN0aW9uIGV4cGFuZGVkKCkgewogICAgICByZXR1cm4gdGhpcy5pc0V4cGFuZGVkID8gdHJ1ZSA6IGZhbHNlOwogICAgfSwKICAgIGdyb3VwQ29sb3I6IGZ1bmN0aW9uIGdyb3VwQ29sb3IoKSB7CiAgICAgIHJldHVybiB7CiAgICAgICAgY29sb3I6IHRoaXMuZ3JvdXBDb3B5LmNvbG9yCiAgICAgIH07CiAgICB9CiAgfSwKICBjcmVhdGVkOiBmdW5jdGlvbiBjcmVhdGVkKCkgewogICAgdGhpcy5ncm91cENvcHkgPSB0aGlzLmdyb3VwOwogIH0sCiAgY29tcG9uZW50czogewogICAgdGFza0xpc3Q6IHRhc2tMaXN0LAogICAgY29sb3JzTWVudTogY29sb3JzTWVudSwKICAgIHByb2dyZXNzQmFyOiBwcm9ncmVzc0JhcgogIH0KfTs="},{"version":3,"sources":["group-preview.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <section>\n    <li\n      :class=\"{\n        'group-preview width100 flex space-between align-center': true,\n        expanded: expanded,\n      }\"\n      @click=\"expandGroup\"\n    >\n      <div class=\"group-actions-container flex relative align-center\">\n        <div class=\"expand-btn-container\">\n          <button\n            :style=\"getStyleStr(group.color)\"\n            class=\"expand-btn\"\n            @click.stop=\"toggleGroupActions\"\n          >\n            <i class=\"expand-arrow fas fa-arrow-down\"></i>\n          </button>\n        </div>\n        <h4\n          class=\"group-headers group-name editable\"\n          ref=\"groupName\"\n          :style=\"groupColor\"\n          @blur=\"updateGroupName\"\n          @keydown.enter=\"updateGroupName\"\n          contenteditable\n        >\n          {{ groupCopy.name }}\n        </h4>\n        <div class=\"flex column group-actions\" v-if=\"isActionsShowen\">\n          <div class=\"group-action flex align-center\" @click.stop=\"toggleGroup\">\n            <button  class=\"act-btn\">\n              <i class=\"fas fa-expand-alt fa-icon-act\"></i>\n            </button>\n            <span class=\"act-txt\">Expand</span>\n          </div>\n          <div\n            class=\"group-action flex align-center\"\n            @click.stop=\"addNewTask\"\n          >\n            <button class=\"act-btn\">\n              <i class=\"fas fa-plus\"></i>\n            </button>\n            <span class=\"act-txt\">New Task</span>\n          </div>\n          <div\n            class=\"group-action flex align-center\"\n            @click.stop=\"deleteGroup(groupCopy.id)\"\n          >\n            <button class=\"act-btn\">\n              <i class=\"fas fa-trash fa-icon-act\"></i>\n            </button>\n            <span class=\"act-txt\">Delete</span>\n          </div>\n          <div\n            class=\"group-action flex align-center\"\n            @click.stop=\"toggleColorsMenu\"\n          >\n            <button class=\"act-btn\">\n              <i class=\"fas fa-paint-brush fa-icon-act\"></i>\n            </button>\n            <span class=\"act-txt\">Change Color</span>\n          </div>\n          <div\n            class=\"group-action flex align-center\"\n            @click.stop=\"duplicateGroup\"\n          >\n            <button class=\"act-btn\">\n              <i class=\"far fa-copy fa-icon-act\"></i>\n            </button>\n            <span class=\"act-txt\">Duplicate</span>\n          </div>\n          <div\n            class=\"group-action flex align-center\"\n            @click.stop=\"focusGroupName\"\n          >\n            <button class=\"act-btn\">\n              <i class=\"far fa-edit fa-icon-act\"></i>\n            </button>\n            <span class=\"act-txt\">Change name</span>\n          </div>\n          <colors-menu v-if=\"isColorsShowen\" @setColor=\"setGroupColor\" />\n        </div>\n      </div>\n      <span v-if=\"!isExpanded\">{{ tasksCount }}</span>\n      <div v-if=\"isExpanded\" class=\"flex space-between align-center\">\n        <div class=\"group-headers headers flex\">\n          <h4 class=\"list-title\">Members</h4>\n          <h4 class=\"list-title\">Status</h4>\n          <h4 class=\"list-title\">Priority</h4>\n          <h4 class=\"list-title date\">Due Date</h4>\n        </div>\n      </div>\n      <task-list\n        :taskColor=\"group.color\"\n        v-if=\"isExpanded\"\n        :tasks=\"groupCopy.tasks\"\n        :groupId=\"groupCopy.id\"\n        @forceRender=\"emitForceRender\"\n      />\n<div class=\"progress-bar-section flex\">\n   <!-- <h2> -->\n<!-- {{progressBarPrio}} -->\n\n  <!-- </h2>  -->\n<progress-bar :progressBarData=\"progressBarData\" />\n\n<progress-bar :progressBarData=\"progressBarPrio\" />\n</div>\n    </li>\n    <div\n      class=\"back-drop-layer\"\n      v-if=\"isActionsShowen\"\n      @click=\"toggleGroupActions\"\n    ></div>\n  </section>\n</template>\n\n<script>\nimport progressBar from '@/cmps/progress-bar'\nimport taskList from './task-list.vue'\nimport colorsMenu from './colors-menu'\nimport { eventBus } from '@/services/event-bus.service'\n\nexport default {\n  name: 'group-preview',\n  props: {\n    group: Object,\n    deleteGroup: Function,\n  },\n  data() {\n    return {\n      isExpanded: true,\n      groupCopy: null,\n      isActionsShowen: false,\n      isColorsShowen: false,\n    }\n  },\n  methods: {\n    addNewTask() {\n      console.log('**********ADDDING NEW TASK*******')\n      eventBus.$emit('addEmptyTask', this.groupCopy.id)\n    },\n    focusGroupName() {\n      this.$refs.groupName.focus()\n      this.isActionsShowen = false\n    },\n    getStyleStr(colorStr) {\n      return `backgroundColor:${colorStr}`\n    },\n    duplicateGroup() {\n      this.$emit('duplicateGroup', this.groupCopy)\n    },\n    emitForceRender() {\n      this.$emit('emitForceRender')\n    },\n    toggleColorsMenu() {\n      this.isColorsShowen = !this.isColorsShowen\n    },\n    toggleGroupActions() {\n      this.isActionsShowen = !this.isActionsShowen\n    },\n    emitDelete(groupId) {\n      this.$emit('deleteGroup', groupId)\n      this.isExpanded = false\n    },\n    toggleGroup() {\n      this.isExpanded = !this.isExpanded\n      this.isActionsShowen = false\n    },\n    expandGroup() {\n      this.isExpanded = true\n      this.isActionsShowen = false\n    },\n    setGroupColor(color) {\n      this.isActionsShowen = false\n      this.groupCopy.color = color\n      this.isColorsShowen = false\n      this.$emit('updateGroup', this.groupCopy)\n    },\n    updateGroupName(ev) {\n      this.groupCopy.name = ev.target.innerText\n      this.$emit('updateGroup', this.groupCopy)\n    },\n\n  },\n  computed: {\n    progressBarData() {\n      let statusPercentageMap = this.group.tasks.reduce((acc, task) => {      \n        if (!acc[task.status.txt]) acc[task.status.txt] = {count:0,statusColor:task.status.color};\n        acc[task.status.txt].count++\n        return acc\n      }, {})\n      const totalSum = this.group.tasks.length\n      for (let key in statusPercentageMap) {\n        statusPercentageMap[key].fraction = (`${statusPercentageMap[key].count} / ${totalSum}`)\n        statusPercentageMap[key].percentage = (statusPercentageMap[key].count / totalSum) * 100\n        statusPercentageMap[key].name = key;\n      }\n      return statusPercentageMap\n     \n    },\n        progressBarPrio() {\n      let priorityPercentageMap = this.group.tasks.reduce((acc, task) => {      \n        if (!acc[task.priority.txt]) acc[task.priority.txt] = {count:0,statusColor:task.priority.color};\n        acc[task.priority.txt].count++\n        return acc\n      }, {})\n      const totalSum = this.group.tasks.length\n      for (let key in priorityPercentageMap) {\n        priorityPercentageMap[key].fraction = (`${priorityPercentageMap[key].count} / ${totalSum}`)\n        priorityPercentageMap[key].percentage = (priorityPercentageMap[key].count / totalSum) * 100\n        priorityPercentageMap[key].name = key;\n      }\n      return priorityPercentageMap\n     \n    },\n    tasksCount() {\n      return `${this.groupCopy.tasks.length} items`\n    },\n    expanded() {\n      return this.isExpanded ? true : false\n    },\n    groupColor() {\n      return { color: this.groupCopy.color }\n    },\n  },\n  created() {\n    this.groupCopy = this.group\n  },\n  components: {\n    taskList,\n    colorsMenu,\n    progressBar\n  },\n}\n</script>\n,\n"],"sourceRoot":"src/cmps"}]}