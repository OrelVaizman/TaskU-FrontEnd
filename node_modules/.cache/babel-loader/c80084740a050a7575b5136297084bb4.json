{"remainingRequest":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/babel-loader/lib/index.js!/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/src/views/task-details.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/src/views/task-details.vue","mtime":1607325630152},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmluZCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmZpbmQtaW5kZXgiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5mb3ItZWFjaCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LnNwbGljZSI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuZm9yLWVhY2giOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgc2lkZUJhciBmcm9tICdAL2NtcHMvc2lkZWJhci52dWUnOwppbXBvcnQgdGFza1Bvc3RzIGZyb20gJ0AvY21wcy90YXNrLXBvc3RzJzsKaW1wb3J0IHRhc2tBY3Rpdml0aWVzIGZyb20gJ0AvY21wcy90YXNrLWFjdGl2aXRpZXMnOwppbXBvcnQgeyBldmVudEJ1cyB9IGZyb20gJ0Avc2VydmljZXMvZXZlbnQtYnVzLnNlcnZpY2UnOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ3Rhc2stZGV0YWlscycsCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHRhc2s6IG51bGwsCiAgICAgIGdyb3VwSWQ6IG51bGwsCiAgICAgIGNvbXBvbmVudEtleTogMCwKICAgICAgbmV3UG9zdDogbnVsbAogICAgfTsKICB9LAogIGNyZWF0ZWQ6IGZ1bmN0aW9uIGNyZWF0ZWQoKSB7CiAgICB2YXIgdGFza0luZm8gPSB0aGlzLmdldFRhc2tJbmZvQnlJZCgpOwogICAgdGhpcy50YXNrID0gdGFza0luZm8udGFzazsKICAgIHRoaXMuZ3JvdXBJZCA9IHRhc2tJbmZvLmdyb3VwSWQ7CiAgfSwKICBtZXRob2RzOiB7CiAgICBnZXRTdHlsZVN0cjogZnVuY3Rpb24gZ2V0U3R5bGVTdHIoY29sb3JTdHIpIHsKICAgICAgcmV0dXJuICJiYWNrZ3JvdW5kQ29sb3I6Ii5jb25jYXQoY29sb3JTdHIpOwogICAgfSwKICAgIGNsb3NlQnRuOiBmdW5jdGlvbiBjbG9zZUJ0bigpIHsKICAgICAgdGhpcy4kcm91dGVyLnB1c2goIi9ib2FyZC8iLmNvbmNhdCh0aGlzLiRyb3V0ZS5wYXJhbXMuYm9hcmRJZCkpOwogICAgfSwKICAgIGdldFRhc2tzUGF0aDogZnVuY3Rpb24gZ2V0VGFza3NQYXRoKCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgdmFyIGdyb3VwSWR4ID0gdGhpcy5ib2FyZC5ncm91cHMuZmluZEluZGV4KGZ1bmN0aW9uIChncm91cCkgewogICAgICAgIHJldHVybiBncm91cC5pZCA9PT0gX3RoaXMuZ3JvdXBJZDsKICAgICAgfSk7CiAgICAgIHZhciB0YXNrcyA9IHRoaXMuYm9hcmQuZ3JvdXBzW2dyb3VwSWR4XS50YXNrczsKICAgICAgcmV0dXJuIHRhc2tzOwogICAgfSwKICAgIHVwZGF0ZVRhc2tUeHQ6IGZ1bmN0aW9uIHVwZGF0ZVRhc2tUeHQoZXYpIHsKICAgICAgdmFyIF90aGlzMiA9IHRoaXM7CgogICAgICBldi50YXJnZXQuYmx1cigpOwogICAgICBpZiAoZXYudGFyZ2V0LmlubmVyVGV4dCA9PT0gdGhpcy50YXNrLnR4dCkgcmV0dXJuO2Vsc2UgewogICAgICAgIHRoaXMudGFzay50eHQgPSBldi50YXJnZXQuaW5uZXJUZXh0OwogICAgICAgIHZhciB0YXNrcyA9IHRoaXMuZ2V0VGFza3NQYXRoKCk7CiAgICAgICAgdmFyIHRhc2tJZHggPSB0YXNrcy5maW5kSW5kZXgoZnVuY3Rpb24gKHRhc2spIHsKICAgICAgICAgIHJldHVybiB0YXNrLmlkID09PSBfdGhpczIudGFzay5pZDsKICAgICAgICB9KTsKICAgICAgICB0YXNrcy5zcGxpY2UodGFza0lkeCwgMSwgdGhpcy50YXNrKTsKICAgICAgICB0aGlzLiRzdG9yZS5kaXNwYXRjaCh7CiAgICAgICAgICB0eXBlOiAnc2F2ZUJvYXJkJywKICAgICAgICAgIGJvYXJkOiB0aGlzLmJvYXJkCiAgICAgICAgfSk7CiAgICAgICAgZXZlbnRCdXMuJGVtaXQoJ3VwZGF0ZVRhc2tQcmV2aWV3JywgdGhpcy50YXNrKTsKICAgICAgfQogICAgfSwKICAgIHVwZGF0ZVBvc3RzOiBmdW5jdGlvbiB1cGRhdGVQb3N0cyhwb3N0cywgYWN0aXZpdHkpIHsKICAgICAgdmFyIF90aGlzMyA9IHRoaXM7CgogICAgICB2YXIgdGFza3MgPSB0aGlzLmdldFRhc2tzUGF0aCgpOwogICAgICB2YXIgdGFza0lkeCA9IHRhc2tzLmZpbmRJbmRleChmdW5jdGlvbiAodGFzaykgewogICAgICAgIHJldHVybiB0YXNrLmlkID09PSBfdGhpczMudGFzay5pZDsKICAgICAgfSk7CiAgICAgIHRhc2tzW3Rhc2tJZHhdLnBvc3RzID0gcG9zdHM7CiAgICAgIHRoaXMuYm9hcmQuYWN0aXZpdGllcy51bnNoaWZ0KGFjdGl2aXR5KTsKICAgICAgdGhpcy4kc3RvcmUuZGlzcGF0Y2goewogICAgICAgIHR5cGU6ICdzYXZlQm9hcmQnLAogICAgICAgIGJvYXJkOiB0aGlzLmJvYXJkCiAgICAgIH0pOwogICAgICBldmVudEJ1cy4kZW1pdCgndXBkYXRlVGFza1ByZXZpZXcnLCB0aGlzLnRhc2spOwogICAgfSwKICAgIGdldFRhc2tJbmZvQnlJZDogZnVuY3Rpb24gZ2V0VGFza0luZm9CeUlkKCkgewogICAgICB2YXIgdGFza0luZm8gPSB7fTsKICAgICAgdmFyIHRhc2tJZCA9IHRoaXMuJHJvdXRlLnBhcmFtcy50YXNrSWQ7CiAgICAgIHZhciBncm91cCA9IHRoaXMuYm9hcmQuZ3JvdXBzLmZpbmQoZnVuY3Rpb24gKGdyb3VwKSB7CiAgICAgICAgcmV0dXJuIGdyb3VwLnRhc2tzLmZpbmQoZnVuY3Rpb24gKHRhc2spIHsKICAgICAgICAgIHJldHVybiB0YXNrLmlkID09PSB0YXNrSWQ7CiAgICAgICAgfSk7CiAgICAgIH0pOwogICAgICB0YXNrSW5mby50YXNrID0gZ3JvdXAudGFza3MuZmluZChmdW5jdGlvbiAodGFzaykgewogICAgICAgIHJldHVybiB0YXNrLmlkID09PSB0YXNrSWQ7CiAgICAgIH0pOwogICAgICB0YXNrSW5mby5ncm91cElkID0gZ3JvdXAuaWQ7CiAgICAgIHJldHVybiB0YXNrSW5mbzsKICAgIH0sCiAgICBmb3JjZVJlcmVuZGVyOiBmdW5jdGlvbiBmb3JjZVJlcmVuZGVyKCkgewogICAgICB0aGlzLmNvbXBvbmVudEtleSArPSAxOwogICAgfQogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIGJvYXJkOiBmdW5jdGlvbiBib2FyZCgpIHsKICAgICAgcmV0dXJuIHRoaXMuJHN0b3JlLmdldHRlcnMuYm9hcmQ7CiAgICB9LAogICAgdXNlcjogZnVuY3Rpb24gdXNlcigpIHsKICAgICAgcmV0dXJuIHRoaXMuJHN0b3JlLmdldHRlcnMudXNlcjsKICAgIH0sCiAgICBwb3N0czogZnVuY3Rpb24gcG9zdHMoKSB7CiAgICAgIHJldHVybiB0aGlzLnRhc2sucG9zdHM7CiAgICB9LAogICAgdGFza0FjdGl2aXRpZXM6IGZ1bmN0aW9uIHRhc2tBY3Rpdml0aWVzKCkgewogICAgICB2YXIgdGFza0FjdGl2aXRpZXMgPSBbXTsKICAgICAgdmFyIGJvYXJkQWN0aXZpdGllcyA9IEpTT04ucGFyc2UoSlNPTi5zdHJpbmdpZnkodGhpcy4kc3RvcmUuZ2V0dGVycy5ib2FyZEFjdGl2aXRpZXMpKTsKICAgICAgdmFyIHRhc2tJZCA9IHRoaXMuJHJvdXRlLnBhcmFtcy50YXNrSWQ7CiAgICAgIGJvYXJkQWN0aXZpdGllcy5mb3JFYWNoKGZ1bmN0aW9uIChhY3Rpdml0eSkgewogICAgICAgIGlmIChhY3Rpdml0eS50YXNrSWQgPT09IHRhc2tJZCkgdGFza0FjdGl2aXRpZXMucHVzaChhY3Rpdml0eSk7CiAgICAgIH0pOwogICAgICByZXR1cm4gdGFza0FjdGl2aXRpZXM7CiAgICB9CiAgfSwKICB3YXRjaDogewogICAgJyRyb3V0ZS5wYXJhbXMudGFza0lkJzogZnVuY3Rpb24gJHJvdXRlUGFyYW1zVGFza0lkKCkgewogICAgICB2YXIgdGFza0luZm8gPSB0aGlzLmdldFRhc2tJbmZvQnlJZCgpOwogICAgICB0aGlzLmdyb3VwSWQgPSB0YXNrSW5mby5ncm91cElkOwogICAgICB0aGlzLnRhc2sgPSBKU09OLnBhcnNlKEpTT04uc3RyaW5naWZ5KHRhc2tJbmZvLnRhc2spKTsKICAgIH0KICB9LAogIGRlc3Ryb3llZDogZnVuY3Rpb24gZGVzdHJveWVkKCkgewogICAgY29uc29sZS5sb2coJ3RoaXMudGFzayBkZXN0b3J5OicsIHRoaXMudGFzayk7CiAgICBldmVudEJ1cy4kZW1pdCgndXBkYXRlVGFza1ByZXZpZXdEZXN0b3J5JywgdGhpcy50YXNrKTsKICB9LAogIGNvbXBvbmVudHM6IHsKICAgIHRhc2tQb3N0czogdGFza1Bvc3RzLAogICAgdGFza0FjdGl2aXRpZXM6IHRhc2tBY3Rpdml0aWVzLAogICAgc2lkZUJhcjogc2lkZUJhcgogIH0KfTs="},{"version":3,"sources":["task-details.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <side-bar @closeBtn=\"closeBtn\">\n    <section v-if=\"task\" class=\"task-details-section\">\n      <div class=\"task-title-container\">\n        <h2\n          class=\"task-title editable\"\n          spellcheck=\"false\"\n          @blur.stop=\"updateTaskTxt\"\n          @keyup.enter=\"updateTaskTxt\"\n          contenteditable\n        >\n          {{ task.txt }}\n        </h2>\n        <div class=\"details-mobile flex\">\n          <span\n            class=\"priority-details relative task-item\"\n            :style=\"getStyleStr(task.priority.color)\"\n            >{{ task.priority.txt }}\n            <!-- <label-picker\n            :opts=\"priorities\"\n            type=\"priority\"\n        /> -->\n          </span>\n\n          <span class=\"date-picker-details task-item\">\n            <el-date-picker\n              v-tooltip.top=\"'Due Date'\"\n              class=\"date-input\"\n              v-model=\"task.dueDate\"\n              type=\"date\"\n              placeholder=\"Pick a date\"\n            >\n            </el-date-picker>\n          </span>\n        </div>\n      </div>\n      <el-tabs>\n        <el-tab-pane label=\"Task Posts\">\n          <task-posts\n            v-if=\"posts\"\n            @updatePosts=\"updatePosts\"\n            :task=\"task\"\n            :posts=\"posts\"\n          />\n        </el-tab-pane>\n        <el-tab-pane label=\"Task Activities\">\n          <task-activities\n            v-if=\"taskActivities && taskActivities.length\"\n            :activities=\"taskActivities\"\n          />\n        </el-tab-pane>\n      </el-tabs>\n    </section>\n  </side-bar>\n</template>\n<script>\nimport sideBar from '@/cmps/sidebar.vue'\nimport taskPosts from '@/cmps/task-posts'\nimport taskActivities from '@/cmps/task-activities'\nimport { eventBus } from '@/services/event-bus.service'\n\nexport default {\n  name: 'task-details',\n  data() {\n    return {\n      task: null,\n      groupId: null,\n      componentKey: 0,\n      newPost: null\n    }\n  },\n  created() {\n    const taskInfo = this.getTaskInfoById()\n    this.task = taskInfo.task\n    this.groupId = taskInfo.groupId\n  },\n  methods: {\n    getStyleStr(colorStr) {\n      return `backgroundColor:${colorStr}`\n    },\n    closeBtn() {\n      this.$router.push(`/board/${this.$route.params.boardId}`)\n    },\n    getTasksPath() {\n      const groupIdx = this.board.groups.findIndex(\n        group => group.id === this.groupId\n      )\n      const tasks = this.board.groups[groupIdx].tasks\n      return tasks\n    },\n    updateTaskTxt(ev) {\n      ev.target.blur()\n      if (ev.target.innerText === this.task.txt) return\n      else {\n        this.task.txt = ev.target.innerText\n        const tasks = this.getTasksPath()\n        const taskIdx = tasks.findIndex(task => task.id === this.task.id)\n        tasks.splice(taskIdx, 1, this.task)\n        this.$store.dispatch({\n          type: 'saveBoard',\n          board: this.board\n        })\n        eventBus.$emit('updateTaskPreview', this.task)\n      }\n    },\n    updatePosts(posts, activity) {\n      const tasks = this.getTasksPath()\n      const taskIdx = tasks.findIndex(task => task.id === this.task.id)\n      tasks[taskIdx].posts = posts\n      this.board.activities.unshift(activity)\n      this.$store.dispatch({\n        type: 'saveBoard',\n        board: this.board\n      })\n\n      eventBus.$emit('updateTaskPreview', this.task)\n    },\n    getTaskInfoById() {\n      let taskInfo = {}\n      const taskId = this.$route.params.taskId\n      const group = this.board.groups.find(group =>\n        group.tasks.find(task => task.id === taskId)\n      )\n      taskInfo.task = group.tasks.find(task => task.id === taskId)\n      taskInfo.groupId = group.id\n      return taskInfo\n    },\n    forceRerender() {\n      this.componentKey += 1\n    }\n  },\n  computed: {\n    board() {\n      return this.$store.getters.board\n    },\n    user() {\n      return this.$store.getters.user\n    },\n    posts() {\n      return this.task.posts\n    },\n    taskActivities() {\n      let taskActivities = []\n      const boardActivities = JSON.parse(\n        JSON.stringify(this.$store.getters.boardActivities)\n      )\n      const taskId = this.$route.params.taskId\n      boardActivities.forEach(activity => {\n        if (activity.taskId === taskId) taskActivities.push(activity)\n      })\n      return taskActivities\n    }\n  },\n  watch: {\n    '$route.params.taskId'() {\n      const taskInfo = this.getTaskInfoById()\n      this.groupId = taskInfo.groupId\n      this.task = JSON.parse(JSON.stringify(taskInfo.task))\n    }\n  },\n  destroyed() {\n    console.log('this.task destory:', this.task)\n    eventBus.$emit('updateTaskPreviewDestory', this.task)\n  },\n  components: {\n    taskPosts,\n    taskActivities,\n    sideBar\n  }\n}\n</script>\n"],"sourceRoot":"src/views"}]}