{"remainingRequest":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/babel-loader/lib/index.js!/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/eslint-loader/index.js??ref--13-0!/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/src/modules/user.store.js","dependencies":[{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/src/modules/user.store.js","mtime":1606649903986},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmluZC1pbmRleCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LnNwbGljZSI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lIjsKaW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9Vc2Vycy9vcmVsdmFpem1hbi9EZXNrdG9wL2Rldi9GaW5hbFNwcmludC90YXNrdS1mcm9udGVuZC9UYXNrVS1mcm9udGVuZC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7CmltcG9ydCB7IHVzZXJTZXJ2aWNlIH0gZnJvbSAnQC9zZXJ2aWNlcy91c2VyLnNlcnZpY2UuanMnOwpleHBvcnQgdmFyIHVzZXJTdG9yZSA9IHsKICBzdGF0ZTogewogICAgdXNlcnM6IFtdLAogICAgY3VyclVzZXI6IG51bGwKICB9LAogIGdldHRlcnM6IHsKICAgIHVzZXJzOiBmdW5jdGlvbiB1c2VycyhzdGF0ZSkgewogICAgICByZXR1cm4gc3RhdGUudXNlcnM7CiAgICB9LAogICAgbG9nZ2VkSW5Vc2VyOiBmdW5jdGlvbiBsb2dnZWRJblVzZXIoc3RhdGUpIHsKICAgICAgcmV0dXJuIHN0YXRlLmN1cnJVc2VyOwogICAgfQogIH0sCiAgbXV0YXRpb25zOiB7CiAgICBzZXRVc2VyczogZnVuY3Rpb24gc2V0VXNlcnMoc3RhdGUsIF9yZWYpIHsKICAgICAgdmFyIHVzZXJzID0gX3JlZi51c2VyczsKICAgICAgc3RhdGUudXNlcnMgPSB1c2VyczsKICAgIH0sCiAgICBzZXRVc2VyOiBmdW5jdGlvbiBzZXRVc2VyKHN0YXRlLCBfcmVmMikgewogICAgICB2YXIgdXNlciA9IF9yZWYyLnVzZXI7CiAgICAgIHN0YXRlLmN1cnJVc2VyID0gdXNlcjsKICAgIH0sCiAgICB1cGRhdGVVc2VyOiBmdW5jdGlvbiB1cGRhdGVVc2VyKHN0YXRlLCBfcmVmMykgewogICAgICB2YXIgdXNlciA9IF9yZWYzLnVzZXI7CiAgICAgIHZhciBpZHggPSBzdGF0ZS51c2Vycy5maW5kSW5kZXgoZnVuY3Rpb24gKGN1cnJVc2VyKSB7CiAgICAgICAgcmV0dXJuIHVzZXIuX2lkID09PSBjdXJyVXNlci5faWQ7CiAgICAgIH0pOwogICAgICBzdGF0ZS51c2Vycy5zcGxpY2UoaWR4LCAxLCB1c2VyKTsKICAgIH0sCiAgICBkZWxldGVVc2VyOiBmdW5jdGlvbiBkZWxldGVVc2VyKHN0YXRlLCBfcmVmNCkgewogICAgICB2YXIgdXNlcklkID0gX3JlZjQudXNlcklkOwogICAgICB2YXIgaWR4ID0gc3RhdGUudXNlcnMuZmluZEluZGV4KGZ1bmN0aW9uICh1c2VyKSB7CiAgICAgICAgcmV0dXJuIHVzZXIuX2lkID09PSB1c2VySWQ7CiAgICAgIH0pOwogICAgICBzdGF0ZS51c2Vycy5zcGxpY2UoaWR4LCAxKTsKICAgIH0sCiAgICBhZGRVc2VyOiBmdW5jdGlvbiBhZGRVc2VyKHN0YXRlLCBfcmVmNSkgewogICAgICB2YXIgdXNlciA9IF9yZWY1LnVzZXI7CiAgICAgIHN0YXRlLnVzZXJzLnVuc2hpZnQodXNlcik7CiAgICB9CiAgfSwKICBhY3Rpb25zOiB7CiAgICBsb2FkVXNlcnM6IGZ1bmN0aW9uIGxvYWRVc2VycyhfcmVmNikgewogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICAgIHZhciBjb21taXQsIHVzZXJzOwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIGNvbW1pdCA9IF9yZWY2LmNvbW1pdDsKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAzOwogICAgICAgICAgICAgICAgcmV0dXJuIHVzZXJTZXJ2aWNlLmdldFVzZXJzKCk7CgogICAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgICAgIHVzZXJzID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgICAgICAgIGNvbW1pdCh7CiAgICAgICAgICAgICAgICAgIHR5cGU6ICdzZXRVc2VycycsCiAgICAgICAgICAgICAgICAgIHVzZXJzOiB1c2VycwogICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgIGNhc2UgNToKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUpOwogICAgICB9KSkoKTsKICAgIH0sCiAgICBsb2FkVXNlcjogZnVuY3Rpb24gbG9hZFVzZXIoX3JlZjcsIF9yZWY4KSB7CiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUyKCkgewogICAgICAgIHZhciBjb21taXQsIHVzZXJJZCwgdXNlcjsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTIkKF9jb250ZXh0MikgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDIucHJldiA9IF9jb250ZXh0Mi5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgY29tbWl0ID0gX3JlZjcuY29tbWl0OwogICAgICAgICAgICAgICAgdXNlcklkID0gX3JlZjgudXNlcklkOwogICAgICAgICAgICAgICAgY29tbWl0KHsKICAgICAgICAgICAgICAgICAgdHlwZTogJ3RvZ2dsZUlzTG9hZGluZycKICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSA1OwogICAgICAgICAgICAgICAgcmV0dXJuIHVzZXJTZXJ2aWNlLmdldEJ5SWQodXNlcklkKTsKCiAgICAgICAgICAgICAgY2FzZSA1OgogICAgICAgICAgICAgICAgdXNlciA9IF9jb250ZXh0Mi5zZW50OwogICAgICAgICAgICAgICAgY29tbWl0KHsKICAgICAgICAgICAgICAgICAgdHlwZTogJ3NldFVzZXInLAogICAgICAgICAgICAgICAgICB1c2VyOiB1c2VyCiAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkgewogICAgICAgICAgICAgICAgICBjb21taXQoewogICAgICAgICAgICAgICAgICAgIHR5cGU6ICd0b2dnbGVJc0xvYWRpbmcnCiAgICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgfSwgMjAwMCk7CgogICAgICAgICAgICAgIGNhc2UgODoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlMik7CiAgICAgIH0pKSgpOwogICAgfSwKICAgIHJlbW92ZVVzZXI6IGZ1bmN0aW9uIHJlbW92ZVVzZXIoX3JlZjksIF9yZWYxMCkgewogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMygpIHsKICAgICAgICB2YXIgY29tbWl0LCB1c2VySWQ7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUzJChfY29udGV4dDMpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQzLnByZXYgPSBfY29udGV4dDMubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIGNvbW1pdCA9IF9yZWY5LmNvbW1pdDsKICAgICAgICAgICAgICAgIHVzZXJJZCA9IF9yZWYxMC51c2VySWQ7CiAgICAgICAgICAgICAgICBfY29udGV4dDMubmV4dCA9IDQ7CiAgICAgICAgICAgICAgICByZXR1cm4gdXNlclNlcnZpY2UucmVtb3ZlKHVzZXJJZCk7CgogICAgICAgICAgICAgIGNhc2UgNDoKICAgICAgICAgICAgICAgIGNvbW1pdCh7CiAgICAgICAgICAgICAgICAgIHR5cGU6ICdyZW1vdmVVc2VyJywKICAgICAgICAgICAgICAgICAgdXNlcklkOiB1c2VySWQKICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICBjYXNlIDU6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDMuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZTMpOwogICAgICB9KSkoKTsKICAgIH0sCiAgICB1cGFkdGVVc2VyOiBmdW5jdGlvbiB1cGFkdGVVc2VyKF9yZWYxMSwgX3JlZjEyKSB7CiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWU0KCkgewogICAgICAgIHZhciBjb21taXQsIHVzZXIsIHNhdmVkVXNlcjsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTQkKF9jb250ZXh0NCkgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDQucHJldiA9IF9jb250ZXh0NC5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgY29tbWl0ID0gX3JlZjExLmNvbW1pdDsKICAgICAgICAgICAgICAgIHVzZXIgPSBfcmVmMTIudXNlcjsKICAgICAgICAgICAgICAgIF9jb250ZXh0NC5uZXh0ID0gNDsKICAgICAgICAgICAgICAgIHJldHVybiB1c2VyU2VydmljZS5zYXZlKHVzZXIpOwoKICAgICAgICAgICAgICBjYXNlIDQ6CiAgICAgICAgICAgICAgICBzYXZlZFVzZXIgPSBfY29udGV4dDQuc2VudDsKICAgICAgICAgICAgICAgIGNvbW1pdCh7CiAgICAgICAgICAgICAgICAgIHR5cGU6ICd1cGRhdGVVc2VyJywKICAgICAgICAgICAgICAgICAgdXNlcjogc2F2ZWRVc2VyCiAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDQuYWJydXB0KCJyZXR1cm4iLCBzYXZlZFVzZXIpOwoKICAgICAgICAgICAgICBjYXNlIDc6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDQuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZTQpOwogICAgICB9KSkoKTsKICAgIH0sCiAgICBhZGRVc2VyOiBmdW5jdGlvbiBhZGRVc2VyKF9yZWYxMywgX3JlZjE0KSB7CiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWU1KCkgewogICAgICAgIHZhciBjb21taXQsIHVzZXIsIHNhdmVkVXNlcjsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTUkKF9jb250ZXh0NSkgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDUucHJldiA9IF9jb250ZXh0NS5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgY29tbWl0ID0gX3JlZjEzLmNvbW1pdDsKICAgICAgICAgICAgICAgIHVzZXIgPSBfcmVmMTQudXNlcjsKICAgICAgICAgICAgICAgIF9jb250ZXh0NS5uZXh0ID0gNDsKICAgICAgICAgICAgICAgIHJldHVybiB1c2VyU2VydmljZS5zYXZlKHVzZXIpOwoKICAgICAgICAgICAgICBjYXNlIDQ6CiAgICAgICAgICAgICAgICBzYXZlZFVzZXIgPSBfY29udGV4dDUuc2VudDsKICAgICAgICAgICAgICAgIGNvbW1pdCh7CiAgICAgICAgICAgICAgICAgIHR5cGU6ICdhZGRVc2VyJywKICAgICAgICAgICAgICAgICAgdXNlcjogc2F2ZWRVc2VyCiAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDUuYWJydXB0KCJyZXR1cm4iLCBzYXZlZFVzZXIpOwoKICAgICAgICAgICAgICBjYXNlIDc6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDUuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZTUpOwogICAgICB9KSkoKTsKICAgIH0KICB9Cn07"},{"version":3,"sources":["/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/src/modules/user.store.js"],"names":["userService","userStore","state","users","currUser","getters","loggedInUser","mutations","setUsers","setUser","user","updateUser","idx","findIndex","_id","splice","deleteUser","userId","addUser","unshift","actions","loadUsers","commit","getUsers","type","loadUser","getById","setTimeout","removeUser","remove","upadteUser","save","savedUser"],"mappings":"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","sourcesContent":["import { userService } from '@/services/user.service.js'\n\nexport const userStore = {\n  state: {\n    users: [],\n    currUser: null\n  },\n  getters: {\n    users(state) {\n      return state.users\n    },\n    loggedInUser(state) {\n      return state.currUser\n    }\n  },\n  mutations: {\n    setUsers(state, { users }) {\n      state.users = users\n    },\n    setUser(state, { user }) {\n      state.currUser = user\n    },\n    updateUser(state, { user }) {\n      const idx = state.users.findIndex(currUser => user._id === currUser._id)\n      state.users.splice(idx, 1, user)\n    },\n    deleteUser(state, { userId }) {\n       const idx = state.users.findIndex(user => user._id === userId)\n      state.users.splice(idx, 1)\n    },\n    addUser(state, { user }) {\n      state.users.unshift(user)\n    }\n  },\n  actions: {\n    async loadUsers({commit}) {\n      const users = await userService.getUsers()\n      commit({ type: 'setUsers', users })\n    },\n    async loadUser({commit},{ userId }) {\n      commit({type:'toggleIsLoading'})\n      const user = await userService.getById(userId)\n      commit({ type: 'setUser', user })\n      setTimeout(()=>{\n      commit({type:'toggleIsLoading'})\n      },2000)\n    },\n    async removeUser({commit}, { userId }) {\n      await userService.remove(userId)\n    commit({ type: 'removeUser', userId })\n    },\n    async upadteUser({ commit }, { user }) {\n      const savedUser = await userService.save(user)\n      commit({ type: 'updateUser', user: savedUser })\n      return savedUser\n    },\n    async addUser({ commit }, { user }) {\n      const savedUser = await userService.save(user)\n      commit({ type: 'addUser', user: savedUser })\n      return savedUser\n    }\n  }\n}\n"]}]}