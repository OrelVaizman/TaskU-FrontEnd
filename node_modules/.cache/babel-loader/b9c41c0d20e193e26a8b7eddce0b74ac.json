{"remainingRequest":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/babel-loader/lib/index.js!/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/src/cmps/task-preview.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/src/cmps/task-preview.vue","mtime":1606657046629},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZXZlcnkiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5maWx0ZXIiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5maW5kLWluZGV4IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc3BsaWNlIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IGFkZE1lbWJlcnMgZnJvbSAnQC9jbXBzL2FkZC1tZW1iZXJzJzsKaW1wb3J0IHsgZXZlbnRCdXMgfSBmcm9tICdAL3NlcnZpY2VzL2V2ZW50LWJ1cy5zZXJ2aWNlJzsKaW1wb3J0IGxhYmVsUGlja2VyIGZyb20gJy4vbGFiZWwtcGlja2VyJzsKaW1wb3J0IHsgYm9hcmRTZXJ2aWNlIH0gZnJvbSAnQC9zZXJ2aWNlcy9ib2FyZC5zZXJ2aWNlJzsKZXhwb3J0IGRlZmF1bHQgewogIGNvbXBvbmVudHM6IHsKICAgIGxhYmVsUGlja2VyOiBsYWJlbFBpY2tlciwKICAgIGFkZE1lbWJlcnM6IGFkZE1lbWJlcnMKICB9LAogIG5hbWU6ICd0YXNrLXByZXZpZXcnLAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICB0YXNrQ29weTogbnVsbCwKICAgICAgaXNTdGF0dXNlc1Nob3dlbjogZmFsc2UsCiAgICAgIGlzUHJpb3JzU2hvd2VuOiBmYWxzZSwKICAgICAgaXNUYXNrTWVtYmVyc1Nob3dlbjogZmFsc2UKICAgIH07CiAgfSwKICBwcm9wczogewogICAgdGFza0NvbG9yOiBTdHJpbmcsCiAgICB0YXNrOiBPYmplY3QsCiAgICBzdGF0dXNlczogQXJyYXksCiAgICBwcmlvcml0aWVzOiBBcnJheSwKICAgIGdyb3VwSWQ6IFN0cmluZywKICAgIGJvYXJkTWVtYmVyczogW0FycmF5LCBPYmplY3RdLAogICAgYWN0aXZpdHk6IE9iamVjdCwKICAgIHVzZXI6IE9iamVjdAogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIHRhc2tCZ2M6IGZ1bmN0aW9uIHRhc2tCZ2MoKSB7CiAgICAgIHJldHVybiB7CiAgICAgICAgYmFja2dyb3VuZENvbG9yOiB0aGlzLnRhc2tDb2xvcgogICAgICB9OwogICAgfSwKICAgIGZpbHRlcmVkQm9hcmRNZW1iZXJzOiBmdW5jdGlvbiBmaWx0ZXJlZEJvYXJkTWVtYmVycygpIHsKICAgICAgdmFyIGJvYXJkTWVtYmVycyA9IHRoaXMuYm9hcmRNZW1iZXJzOwogICAgICB2YXIgdGFza01lbWJlcnMgPSB0aGlzLnRhc2tDb3B5Lm1lbWJlcnM7CgogICAgICBpZiAodGFza01lbWJlcnMpIHsKICAgICAgICB2YXIgZmlsdGVyZWRCb2FyZE1lbWJlcnMgPSBib2FyZE1lbWJlcnMuZmlsdGVyKGZ1bmN0aW9uIChiTWVtYmVyKSB7CiAgICAgICAgICByZXR1cm4gdGFza01lbWJlcnMuZXZlcnkoZnVuY3Rpb24gKHRNZW1iZXIpIHsKICAgICAgICAgICAgcmV0dXJuIHRNZW1iZXIuX2lkICE9PSBiTWVtYmVyLl9pZDsKICAgICAgICAgIH0pOwogICAgICAgIH0pOwogICAgICAgIHJldHVybiBmaWx0ZXJlZEJvYXJkTWVtYmVyczsKICAgICAgfSBlbHNlIHsKICAgICAgICByZXR1cm4gYm9hcmRNZW1iZXJzOwogICAgICB9CiAgICB9CiAgfSwKICBtZXRob2RzOiB7CiAgICBvcGVuTWVtYmVyUG9wdXA6IGZ1bmN0aW9uIG9wZW5NZW1iZXJQb3B1cCgpIHsKICAgICAgdGhpcy5pc1Rhc2tNZW1iZXJzU2hvd2VuID0gdHJ1ZTsKICAgIH0sCiAgICB0b2dnbGVNZW1iZXI6IGZ1bmN0aW9uIHRvZ2dsZU1lbWJlcigpIHsKICAgICAgdGhpcy5pc1Rhc2tNZW1iZXJzU2hvd2VuID0gIXRoaXMuaXNUYXNrTWVtYmVyc1Nob3dlbjsKICAgIH0sCiAgICBhZGRUYXNrTWVtYmVyOiBmdW5jdGlvbiBhZGRUYXNrTWVtYmVyKG1lbWJlcikgewogICAgICB2YXIgbmV3QWN0aXZpdHkgPSBib2FyZFNlcnZpY2UuZ2V0RW1wdHlBY3Rpdml0eSgpOwogICAgICB0aGlzLnRhc2tDb3B5Lm1lbWJlcnMudW5zaGlmdChtZW1iZXIpOwogICAgICBuZXdBY3Rpdml0eS50eHQgPSAiTWVtYmVyICIuY29uY2F0KG1lbWJlci5mdWxsTmFtZSwgIiB3YXMgYWRkZWQgdG8gdGFzayIpOwogICAgICBuZXdBY3Rpdml0eS5ieVVzZXIgPSB0aGlzLnVzZXI7CiAgICAgIHRoaXMudGFza0NvcHkuYWN0aXZpdGllcy5wdXNoKG5ld0FjdGl2aXR5KTsKICAgICAgdGhpcy51cGRhdGVUYXNrKCk7CiAgICB9LAogICAgcmVtb3ZlVGFza01lbWJlcjogZnVuY3Rpb24gcmVtb3ZlVGFza01lbWJlcihtZW1iZXIpIHsKICAgICAgdmFyIGlkeCA9IHRoaXMudGFza0NvcHkubWVtYmVycy5maW5kSW5kZXgoZnVuY3Rpb24gKHRNZW1iZXIpIHsKICAgICAgICByZXR1cm4gdE1lbWJlci5faWQgPT09IG1lbWJlci5faWQ7CiAgICAgIH0pOwogICAgICB2YXIgbmV3QWN0aXZpdHkgPSBib2FyZFNlcnZpY2UuZ2V0RW1wdHlBY3Rpdml0eSgpOwogICAgICB0aGlzLnRhc2tDb3B5Lm1lbWJlcnMuc3BsaWNlKGlkeCwgMSk7CiAgICAgIG5ld0FjdGl2aXR5LnR4dCA9ICJNZW1iZXIgIi5jb25jYXQobWVtYmVyLmZ1bGxOYW1lLCAiIHdhcyByZW1vdmVkIGZyb20gdGFzayIpOwogICAgICBuZXdBY3Rpdml0eS5ieVVzZXIgPSB0aGlzLnVzZXI7CiAgICAgIHRoaXMudGFza0NvcHkuYWN0aXZpdGllcy5wdXNoKG5ld0FjdGl2aXR5KTsKICAgICAgdGhpcy51cGRhdGVUYXNrKCk7CiAgICB9LAogICAgZ2V0U3R5bGVTdHI6IGZ1bmN0aW9uIGdldFN0eWxlU3RyKGNvbG9yU3RyKSB7CiAgICAgIHJldHVybiAiYmFja2dyb3VuZENvbG9yOiIuY29uY2F0KGNvbG9yU3RyKTsKICAgIH0sCiAgICB0b2dnbGVTdGF0dXNlczogZnVuY3Rpb24gdG9nZ2xlU3RhdHVzZXMoKSB7CiAgICAgIHRoaXMuaXNTdGF0dXNlc1Nob3dlbiA9ICF0aGlzLmlzU3RhdHVzZXNTaG93ZW47CiAgICB9LAogICAgdG9nZ2xlUHJpb3JzOiBmdW5jdGlvbiB0b2dnbGVQcmlvcnMoKSB7CiAgICAgIHRoaXMuaXNQcmlvcnNTaG93ZW4gPSAhdGhpcy5pc1ByaW9yc1Nob3dlbjsKICAgIH0sCiAgICBkZWxldGVUYXNrOiBmdW5jdGlvbiBkZWxldGVUYXNrKCkgewogICAgICB0aGlzLiRlbWl0KCdkZWxldGVUYXNrJywgdGhpcy50YXNrQ29weS5pZCk7CiAgICB9LAogICAgdXBkYXRlVGFza1R4dDogZnVuY3Rpb24gdXBkYXRlVGFza1R4dChldikgewogICAgICB2YXIgbmV3QWN0aXZpdHkgPSBib2FyZFNlcnZpY2UuZ2V0RW1wdHlBY3Rpdml0eSgpOwogICAgICB2YXIgcHJldlR4dCA9IHRoaXMudGFza0NvcHkudHh0OwogICAgICB0aGlzLnRhc2tDb3B5LnR4dCA9IGV2LnRhcmdldC5pbm5lclRleHQ7CiAgICAgIG5ld0FjdGl2aXR5LnR4dCA9ICJUYXNrICciLmNvbmNhdChwcmV2VHh0LCAiJyB3YXMgY2hhbmdlZCB0byAnIikuY29uY2F0KGV2LnRhcmdldC5pbm5lclRleHQsICInIik7CiAgICAgIG5ld0FjdGl2aXR5LmJ5VXNlciA9IHRoaXMudXNlcjsKICAgICAgdGhpcy50YXNrQ29weS5hY3Rpdml0aWVzLnB1c2gobmV3QWN0aXZpdHkpOwogICAgICB0aGlzLnVwZGF0ZVRhc2soKTsKICAgIH0sCiAgICB1cGRhdGVUYXNrOiBmdW5jdGlvbiB1cGRhdGVUYXNrKCkgewogICAgICB0aGlzLiRlbWl0KCd1cGRhdGVUYXNrJywgdGhpcy50YXNrQ29weSk7CiAgICB9LAogICAgc2VuZFRvVGFza0RldGFpbHM6IGZ1bmN0aW9uIHNlbmRUb1Rhc2tEZXRhaWxzKCkgewogICAgICBpZiAodGhpcy4kcm91dGUucGFyYW1zLnRhc2tJZCA9PT0gdGhpcy50YXNrLmlkKSB7CiAgICAgICAgcmV0dXJuOwogICAgICB9CgogICAgICB0aGlzLiRyb3V0ZXIucHVzaCgiL2JvYXJkLyIuY29uY2F0KHRoaXMuJHJvdXRlLnBhcmFtcy5ib2FyZElkLCAiL3Rhc2svIikuY29uY2F0KHRoaXMudGFzay5pZCkpOwogICAgfSwKICAgIHVwZGF0ZUNvbXBvbmVudFRhc2s6IGZ1bmN0aW9uIHVwZGF0ZUNvbXBvbmVudFRhc2sodGFzaykgewogICAgICBpZiAodGhpcy50YXNrQ29weS5pZCA9PT0gdGhpcy4kcm91dGUucGFyYW1zLnRhc2tJZCkgewogICAgICAgIHRoaXMudGFza0NvcHkgPSB0YXNrOwogICAgICB9CiAgICB9LAogICAgdXBkYXRlVGFza1ByaW9yaXR5OiBmdW5jdGlvbiB1cGRhdGVUYXNrUHJpb3JpdHkob3B0KSB7CiAgICAgIGNvbnNvbGUubG9nKCdvcHQ6Jywgb3B0KTsKICAgICAgdmFyIG5ld0FjdGl2aXR5ID0gYm9hcmRTZXJ2aWNlLmdldEVtcHR5QWN0aXZpdHkoKTsKICAgICAgdmFyIHByZXZQcmlvciA9IHRoaXMudGFza0NvcHkucHJpb3JpdHkudHh0OwogICAgICB0aGlzLnRhc2tDb3B5LnByaW9yaXR5LnR4dCA9IG9wdC50eHQ7CiAgICAgIHRoaXMudGFza0NvcHkucHJpb3JpdHkuY29sb3IgPSBvcHQuY29sb3I7CiAgICAgIGNvbnNvbGUubG9nKCdwcmV2UHJpb3I6JywgcHJldlByaW9yKTsKICAgICAgbmV3QWN0aXZpdHkudHh0ID0gIlRhc2sgcHJpb3JpdHkgd2FzIHVwZGF0ZWQgZnJvbSAiLmNvbmNhdChwcmV2UHJpb3IsICIgdG8gJyIpLmNvbmNhdChvcHQudHh0LCAiJyIpOwogICAgICBuZXdBY3Rpdml0eS5ieVVzZXIgPSB0aGlzLnVzZXI7CiAgICAgIHRoaXMudGFza0NvcHkuYWN0aXZpdGllcy5wdXNoKG5ld0FjdGl2aXR5KTsKICAgICAgdGhpcy51cGRhdGVUYXNrKCk7CiAgICAgIHRoaXMuaXNQcmlvcnNTaG93ZW4gPSBmYWxzZTsKICAgIH0sCiAgICB1cGRhdGVUYXNrU3RhdHVzOiBmdW5jdGlvbiB1cGRhdGVUYXNrU3RhdHVzKG9wdCkgewogICAgICB2YXIgbmV3QWN0aXZpdHkgPSBib2FyZFNlcnZpY2UuZ2V0RW1wdHlBY3Rpdml0eSgpOwogICAgICB2YXIgcHJldlN0YXR1cyA9IHRoaXMudGFza0NvcHkuc3RhdHVzLnR4dDsKICAgICAgdGhpcy50YXNrQ29weS5zdGF0dXMudHh0ID0gb3B0LnR4dDsKICAgICAgdGhpcy50YXNrQ29weS5zdGF0dXMuY29sb3IgPSBvcHQuY29sb3I7CiAgICAgIG5ld0FjdGl2aXR5LnR4dCA9ICJUYXNrIHN0YXR1cyB3YXMgdXBkYXRlZCBmcm9tICIuY29uY2F0KHByZXZTdGF0dXMsICIgdG8gJyIpLmNvbmNhdChvcHQudHh0LCAiJyIpOwogICAgICBuZXdBY3Rpdml0eS5ieVVzZXIgPSB0aGlzLnVzZXI7CiAgICAgIHRoaXMudGFza0NvcHkuYWN0aXZpdGllcy5wdXNoKG5ld0FjdGl2aXR5KTsKICAgICAgdGhpcy51cGRhdGVUYXNrKCk7CiAgICAgIHRoaXMuaXNQcmlvcnNTaG93ZW4gPSBmYWxzZTsKICAgIH0sCiAgICBjbG9zZVBvcHVwczogZnVuY3Rpb24gY2xvc2VQb3B1cHMoKSB7CiAgICAgIHRoaXMuaXNUYXNrTWVtYmVyc1Nob3dlbiA9IGZhbHNlOwogICAgICB0aGlzLmlzU3RhdHVzZXNTaG93ZW4gPSBmYWxzZTsKICAgICAgdGhpcy5pc1ByaW9yc1Nob3dlbiA9IGZhbHNlOwogICAgfQogIH0sCiAgY3JlYXRlZDogZnVuY3Rpb24gY3JlYXRlZCgpIHsKICAgIGV2ZW50QnVzLiRvbigndXBkYXRlVGFza1ByZXZpZXcnLCB0aGlzLnVwZGF0ZUNvbXBvbmVudFRhc2spOwogICAgdGhpcy50YXNrQ29weSA9IHRoaXMudGFzazsKICB9Cn07"},{"version":3,"sources":["task-preview.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <li\n    v-if=\"taskCopy\"\n    class=\"task-preview flex space-between align-center width100\"\n  >\n    <div class=\"flex space-between align-center width100\">\n      <span class=\"task-color\" :style=\"taskBgc\"></span>\n      <button class=\"btn-close\" @click=\"deleteTask\">X</button>\n\n      <div class=\"task-txt\">\n        <span\n          @blur=\"updateTaskTxt\"\n          @keyup.enter=\"updateTaskTxt\"\n          contenteditable\n          >{{ taskCopy.txt }}</span\n        >\n      </div>\n\n      <i @click=\"sendToTaskDetails\" class=\"far fa-comment fa-icon\"></i>\n    </div>\n    <div class=\"task-details flex\">\n      <div class=\"headers flex\">\n        <span\n          ><i\n            @click.stop=\"openMemberPopup\"\n            class=\"far fa-user-circle fa-icon\"\n          ></i\n        ></span>\n\n        <add-members\n          v-if=\"isTaskMembersShowen\"\n          firstTitle=\"Task Members\"\n          secondTitle=\"Board Members\"\n          :members=\"taskCopy.members\"\n          :allMembers=\"filteredBoardMembers\"\n          @addMember=\"addTaskMember\"\n          @removeMember=\"removeTaskMember\"\n        />\n        <span\n          @click=\"toggleStatuses\"\n          class=\"status relative\"\n          :style=\"getStyleStr(taskCopy.status.color)\"\n          >{{ taskCopy.status.txt }}\n          <label-picker\n            v-if=\"isStatusesShowen\"\n            :opts=\"statuses\"\n            type=\"status\"\n            @updateTaskStatus=\"updateTaskStatus\"\n        /></span>\n\n        <span\n          @click=\"togglePriors\"\n          class=\"priority relative\"\n          :style=\"getStyleStr(taskCopy.priority.color)\"\n          >{{ taskCopy.priority.txt }}\n          <label-picker\n            v-if=\"isPriorsShowen\"\n            :opts=\"priorities\"\n            type=\"priority\"\n            @updateTaskPriority=\"updateTaskPriority\"\n        /></span>\n\n        <span class=\"date-picker\">\n          <el-date-picker\n            class=\"date-input\"\n            @change=\"updateTask\"\n            v-model=\"taskCopy.dueDate\"\n            type=\"date\"\n            placeholder=\"Pick a date\"\n          >\n          </el-date-picker>\n        </span>\n      </div>\n    </div>\n    <div\n      class=\"back-drop-layer\"\n      v-if=\"isTaskMembersShowen || isStatusesShowen || isPriorsShowen\"\n      @click.stop=\"closePopups\"\n    ></div>\n  </li>\n</template>\n<script>\nimport addMembers from '@/cmps/add-members'\nimport { eventBus } from '@/services/event-bus.service'\nimport labelPicker from './label-picker'\nimport { boardService } from '@/services/board.service'\nexport default {\n  components: { labelPicker, addMembers },\n  name: 'task-preview',\n  data() {\n    return {\n      taskCopy: null,\n      isStatusesShowen: false,\n      isPriorsShowen: false,\n      isTaskMembersShowen: false,\n    }\n  },\n  props: {\n    taskColor: String,\n    task: Object,\n    statuses: Array,\n    priorities: Array,\n    groupId: String,\n    boardMembers: [Array, Object],\n    activity: Object,\n    user: Object,\n  },\n  computed: {\n    taskBgc() {\n      return { backgroundColor: this.taskColor }\n    },\n    filteredBoardMembers() {\n      const boardMembers = this.boardMembers\n      const taskMembers = this.taskCopy.members\n      if (taskMembers) {\n        const filteredBoardMembers = boardMembers.filter((bMember) => {\n          return taskMembers.every((tMember) => {\n            return tMember._id !== bMember._id\n          })\n        })\n        return filteredBoardMembers\n      } else {\n        return boardMembers\n      }\n    },\n  },\n  methods: {\n    openMemberPopup() {\n      this.isTaskMembersShowen = true\n    },\n    toggleMember() {\n      this.isTaskMembersShowen = !this.isTaskMembersShowen\n    },\n    addTaskMember(member) {\n      let newActivity = boardService.getEmptyActivity()\n      this.taskCopy.members.unshift(member)\n      newActivity.txt = `Member ${member.fullName} was added to task`\n      newActivity.byUser = this.user\n      this.taskCopy.activities.push(newActivity)\n      this.updateTask()\n    },\n    removeTaskMember(member) {\n      const idx = this.taskCopy.members.findIndex(\n        (tMember) => tMember._id === member._id\n      )\n      let newActivity = boardService.getEmptyActivity()\n      this.taskCopy.members.splice(idx, 1)\n      newActivity.txt = `Member ${member.fullName} was removed from task`\n      newActivity.byUser = this.user\n      this.taskCopy.activities.push(newActivity)\n      this.updateTask()\n    },\n    getStyleStr(colorStr) {\n      return `backgroundColor:${colorStr}`\n    },\n    toggleStatuses() {\n      this.isStatusesShowen = !this.isStatusesShowen\n    },\n    togglePriors() {\n      this.isPriorsShowen = !this.isPriorsShowen\n    },\n    deleteTask() {\n      this.$emit('deleteTask', this.taskCopy.id)\n    },\n    updateTaskTxt(ev) {\n      let newActivity = boardService.getEmptyActivity()\n      const prevTxt = this.taskCopy.txt\n      this.taskCopy.txt = ev.target.innerText\n      newActivity.txt = `Task '${prevTxt}' was changed to '${ev.target.innerText}'`\n      newActivity.byUser = this.user\n      this.taskCopy.activities.push(newActivity)\n      this.updateTask()\n    },\n    updateTask() {\n      this.$emit('updateTask', this.taskCopy)\n    },\n    sendToTaskDetails() {\n      if (this.$route.params.taskId === this.task.id) {\n        return\n      }\n      this.$router.push(\n        `/board/${this.$route.params.boardId}/task/${this.task.id}`\n      )\n    },\n    updateComponentTask(task) {\n      if (this.taskCopy.id === this.$route.params.taskId) {\n        this.taskCopy = task\n      }\n    },\n    updateTaskPriority(opt) {\n      console.log('opt:', opt)\n      let newActivity = boardService.getEmptyActivity()\n      const prevPrior = this.taskCopy.priority.txt\n      this.taskCopy.priority.txt = opt.txt\n      this.taskCopy.priority.color = opt.color\n      console.log('prevPrior:', prevPrior)\n      newActivity.txt = `Task priority was updated from ${prevPrior} to '${opt.txt}'`\n      newActivity.byUser = this.user\n      this.taskCopy.activities.push(newActivity)\n      this.updateTask()\n      this.isPriorsShowen = false\n    },\n    updateTaskStatus(opt) {\n      let newActivity = boardService.getEmptyActivity()\n      const prevStatus = this.taskCopy.status.txt\n      this.taskCopy.status.txt = opt.txt\n      this.taskCopy.status.color = opt.color\n      newActivity.txt = `Task status was updated from ${prevStatus} to '${opt.txt}'`\n      newActivity.byUser = this.user\n      this.taskCopy.activities.push(newActivity)\n      this.updateTask()\n      this.isPriorsShowen = false\n    },\n    closePopups() {\n      this.isTaskMembersShowen = false\n      this.isStatusesShowen = false\n      this.isPriorsShowen = false\n    },\n  },\n  created() {\n    eventBus.$on('updateTaskPreview', this.updateComponentTask)\n    this.taskCopy = this.task\n  },\n}\n</script>"],"sourceRoot":"src/cmps"}]}