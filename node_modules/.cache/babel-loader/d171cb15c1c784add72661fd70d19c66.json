{"remainingRequest":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/babel-loader/lib/index.js!/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/src/cmps/Trello/task-preview.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/src/cmps/Trello/task-preview.vue","mtime":1607212899134},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IEF2YXRhciBmcm9tICdAL2NtcHMvdXNlci1hdmF0YXIudnVlJzsKaW1wb3J0IHRhc2tEZXRhaWxzIGZyb20gJy4vdGFzay1kZXRhaWxzJzsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICd0YXNrLXByZXZpZXcnLAogIGNvbXBvbmVudHM6IHsKICAgIEF2YXRhcjogQXZhdGFyLAogICAgdGFza0RldGFpbHM6IHRhc2tEZXRhaWxzCiAgfSwKICBwcm9wczogewogICAgdGFzazogT2JqZWN0LAogICAgZ3JvdXA6IE9iamVjdAogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGlzVGFza0RldGFpbHNTaG93bjogZmFsc2UKICAgIH07CiAgfSwKICBjb21wdXRlZDogewogICAgdXNlcjogZnVuY3Rpb24gdXNlcigpIHsKICAgICAgcmV0dXJuIHRoaXMuJHN0b3JlLmdldHRlcnMudXNlcjsKICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIGRlbGV0ZVRhc2s6IGZ1bmN0aW9uIGRlbGV0ZVRhc2soKSB7CiAgICAgIHRoaXMuJGVtaXQoJ2RlbGV0ZVRhc2snLCB0aGlzLnRhc2tDb3B5KTsKICAgIH0sCiAgICB1cGRhdGVUYXNrVHh0OiBmdW5jdGlvbiB1cGRhdGVUYXNrVHh0KGV2KSB7CiAgICAgIGV2LnRhcmdldC5ibHVyKCk7CiAgICAgIGlmIChldi50YXJnZXQuaW5uZXJUZXh0ID09PSB0aGlzLnRhc2tDb3B5LnR4dCkgcmV0dXJuO2Vsc2UgewogICAgICAgIHRoaXMudGFza0NvcHkudHh0ID0gZXYudGFyZ2V0LmlubmVyVGV4dDsKICAgICAgICB0aGlzLiRub3RpZnkoewogICAgICAgICAgbWVzc2FnZTogJ1Rhc2sgdHh0IHVwZGF0ZWQnLAogICAgICAgICAgcG9zaXRpb246ICdib3R0b20tbGVmdCcsCiAgICAgICAgICBkdXJhdGlvbjogMjAwMAogICAgICAgIH0pOwogICAgICAgIHRoaXMuJGVtaXQoJ3VwZGF0ZVRhc2snLCB0aGlzLnRhc2tDb3B5KTsKICAgICAgfQogICAgfSwKICAgIG9wZW5UYXNrRGV0YWlsczogZnVuY3Rpb24gb3BlblRhc2tEZXRhaWxzKCkgewogICAgICB0aGlzLmlzVGFza0RldGFpbHNTaG93biA9IHRydWU7CiAgICB9CiAgfSwKICBjcmVhdGVkOiBmdW5jdGlvbiBjcmVhdGVkKCkgewogICAgdGhpcy50YXNrQ29weSA9IHRoaXMudGFzazsKICB9Cn07"},{"version":3,"sources":["task-preview.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8BA,OAAA,MAAA,MAAA,wBAAA;AACA,OAAA,WAAA,MAAA,gBAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,cADA;AAEA,EAAA,UAAA,EAAA;AACA,IAAA,MAAA,EAAA,MADA;AAEA,IAAA,WAAA,EAAA;AAFA,GAFA;AAMA,EAAA,KAAA,EAAA;AACA,IAAA,IAAA,EAAA,MADA;AAEA,IAAA,KAAA,EAAA;AAFA,GANA;AAUA,EAAA,IAVA,kBAUA;AACA,WAAA;AACA,MAAA,kBAAA,EAAA;AADA,KAAA;AAGA,GAdA;AAeA,EAAA,QAAA,EAAA;AACA,IAAA,IADA,kBACA;AACA,aAAA,KAAA,MAAA,CAAA,OAAA,CAAA,IAAA;AACA;AAHA,GAfA;AAoBA,EAAA,OAAA,EAAA;AACA,IAAA,UADA,wBACA;AACA,WAAA,KAAA,CAAA,YAAA,EAAA,KAAA,QAAA;AACA,KAHA;AAIA,IAAA,aAJA,yBAIA,EAJA,EAIA;AACA,MAAA,EAAA,CAAA,MAAA,CAAA,IAAA;AACA,UAAA,EAAA,CAAA,MAAA,CAAA,SAAA,KAAA,KAAA,QAAA,CAAA,GAAA,EAAA,OAAA,KACA;AACA,aAAA,QAAA,CAAA,GAAA,GAAA,EAAA,CAAA,MAAA,CAAA,SAAA;AACA,aAAA,OAAA,CAAA;AACA,UAAA,OAAA,EAAA,kBADA;AAEA,UAAA,QAAA,EAAA,aAFA;AAGA,UAAA,QAAA,EAAA;AAHA,SAAA;AAKA,aAAA,KAAA,CAAA,YAAA,EAAA,KAAA,QAAA;AACA;AACA,KAhBA;AAiBA,IAAA,eAjBA,6BAiBA;AACA,WAAA,kBAAA,GAAA,IAAA;AACA;AAnBA,GApBA;AAyCA,EAAA,OAzCA,qBAyCA;AACA,SAAA,QAAA,GAAA,KAAA,IAAA;AACA;AA3CA,CAAA","sourcesContent":["<template>\n  <section class=\"task-preview-card flex column\">\n    <div class=\"task-preivew-header flex space-between relative\">\n      <!-- <span>{{ task.txt }}</span> -->\n      <div class=\"task-txt\">\n        <span\n          class=\"editable txt-edit\"\n          spellcheck=\"false\"\n          @blur=\"updateTaskTxt\"\n          @keydown.enter=\"updateTaskTxt\"\n          contenteditable\n          >{{ taskCopy.txt }}</span\n        >\n      </div>\n      <avatar :user=\"user\" :size=\"20\" />\n    </div>\n    <button class=\"delete-btn\"  @click=\"deleteTask\"><i class=\"fas fa-trash delete-icon \"></i></button>\n    <button class=\"details-btn\" @click.stop=\"openTaskDetails\">\n      <i class=\"fas fa-file-alt details-icon\"></i>\n    </button>\n    <task-details\n      :task=\"taskCopy\"\n      :group=\"group\"\n      v-if=\"isTaskDetailsShown\"\n      :isTaskDetailsShown=\"isTaskDetailsShown\"\n    />\n  </section>\n</template>\n\n<script>\nimport Avatar from '@/cmps/user-avatar.vue'\nimport taskDetails from './task-details'\n\nexport default {\n  name: 'task-preview',\n  components: {\n    Avatar,\n    taskDetails\n  },\n  props: {\n    task: Object,\n    group: Object\n  },\n  data() {\n    return {\n      isTaskDetailsShown: false\n    }\n  },\n  computed: {\n    user() {\n      return this.$store.getters.user\n    }\n  },\n  methods: {\n    deleteTask() {\n      this.$emit('deleteTask', this.taskCopy)\n    },\n    updateTaskTxt(ev) {\n      ev.target.blur()\n      if (ev.target.innerText === this.taskCopy.txt) return\n      else {\n        this.taskCopy.txt = ev.target.innerText\n        this.$notify({\n          message: 'Task txt updated',\n          position: 'bottom-left',\n          duration: 2000\n        })\n        this.$emit('updateTask', this.taskCopy)\n      }\n    },\n    openTaskDetails() {\n      this.isTaskDetailsShown = true\n    }\n  },\n  created() {\n    this.taskCopy = this.task\n  }\n}\n</script>\n"],"sourceRoot":"src/cmps/Trello"}]}