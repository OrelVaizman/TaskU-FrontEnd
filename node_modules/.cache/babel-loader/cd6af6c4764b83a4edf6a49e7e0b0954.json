{"remainingRequest":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/babel-loader/lib/index.js!/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/eslint-loader/index.js??ref--13-0!/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/src/modules/board.store.js","dependencies":[{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/src/modules/board.store.js","mtime":1606565135490},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/src/modules/board.store.js"],"names":["boardService","boardStore","state","boards","currBoard","searchBoard","filterBy","status","priority","searchTerm","getters","filter","board","name","toLowerCase","includes","filteredBoard","JSON","parse","stringify","groups","forEach","group","tasks","task","txt","defaultBoardId","_id","mutations","setBoards","miniBoards","map","setBoard","removeBoard","boardId","setSearch","console","log","setFilterBy","actions","loadBoards","context","query","commit","type","loadBoard","getById","remove","saveBoard","dispatch","save","savedBoard"],"mappings":"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","sourcesContent":["import { boardService } from '@/services/board.service.js'\nexport const boardStore = {\n  state: {\n    boards: [],\n    currBoard: null,\n    searchBoard: null,\n    filterBy: { status: 'all', priority: 'all', searchTerm: '' }\n  },\n  getters: {\n    boards(state) {\n      if (!state.searchBoard) return state.boards\n      return state.boards.filter(board =>\n        board.name.toLowerCase().includes(state.searchBoard.toLowerCase())\n      )\n    },\n    board(state) {\n      const filterBy = state.filterBy;\n      let filteredBoard = JSON.parse(JSON.stringify(state.currBoard))\n      if (filterBy.status !== 'all') {\n        filteredBoard.groups.forEach(group => {\n          group.tasks = group.tasks.filter(task => {\n            return task.status.txt === filterBy.status\n          })\n        })\n      }\n      if (filterBy.priority !== 'all') {\n        filteredBoard.groups.forEach(group => {\n          group.tasks = group.tasks.filter(task => {\n            return task.priority.txt === filterBy.priority\n          })\n        })\n      }\n      if (filterBy.searchTerm !== '') {\n        filteredBoard.groups.forEach(group => {\n          group.tasks = group.tasks.filter(task => {\n            return task.txt.toLowerCase().includes(filterBy.searchTerm.toLowerCase())\n          })\n        })\n      }\n      return filteredBoard;\n    },\n    defaultBoardId(state) {\n      return state.boards[0]._id\n    },\n    filterBy(state) {\n      return JSON.parse(JSON.stringify(state.filterBy))\n    }\n  },\n  mutations: {\n    setBoards(state, { boards }) {\n      const miniBoards = boards.map(board => {\n        board = { _id: board._id, name: board.name }\n        return board\n      })\n      state.boards = miniBoards\n    },\n    setBoard(state, { board }) {\n      state.currBoard = board\n    },\n    removeBoard(state, { boardId }) {\n      state.boards = state.boards.filter(board => board._id !== boardId)\n    },\n    setSearch(state, { searchBoard }) {\n      console.log('searchBoard:', searchBoard)\n      state.searchBoard = searchBoard\n      console.log('state.searchBoard:', state.searchBoard)\n    },\n    setFilterBy(state, { filterBy }) {\n      console.log('filterBy in store:', filterBy);\n      state.filterBy = filterBy;\n    },\n  },\n  actions: {\n    async loadBoards(context) {\n      console.log('context:', context)\n      const boards = await boardService.query()\n      context.commit({ type: 'setBoards', boards })\n    },\n    async loadBoard({ commit }, { boardId }) {\n      const board = await boardService.getById(boardId)\n      commit({ type: 'setBoard', board })\n    },\n    async removeBoard({ commit }, { boardId }) {\n      await boardService.remove(boardId)\n      commit({ type: 'removeBoard', boardId })\n    },\n    async saveBoard({ commit, dispatch }, { board }) {\n      const savedBoard = await boardService.save(board)\n      if (board._id) {\n        commit({ type: 'setBoard', board: savedBoard })\n      } else {\n        console.log('savedBoard:', savedBoard)\n        dispatch({ type: 'loadBoards' })\n      }\n    },\n\n  }\n}\n"]}]}