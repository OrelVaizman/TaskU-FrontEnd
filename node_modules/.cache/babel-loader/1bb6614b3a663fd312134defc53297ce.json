{"remainingRequest":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/babel-loader/lib/index.js!/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/eslint-loader/index.js??ref--13-0!/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/src/modules/board.store.js","dependencies":[{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/src/modules/board.store.js","mtime":1606649903985},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/src/modules/board.store.js"],"names":["boardService","boardStore","state","boards","currBoard","searchBoard","filterBy","status","priority","searchTerm","isLoading","getters","filter","board","name","toLowerCase","includes","filteredBoard","JSON","parse","stringify","groups","forEach","group","tasks","task","txt","defaultBoardId","_id","mutations","setBoards","miniBoards","map","setBoard","removeBoard","boardId","setSearch","setFilterBy","toggleIsLoading","actions","loadBoards","context","query","commit","type","loadBoard","getById","setTimeout","remove","saveBoard","dispatch","save","savedBoard"],"mappings":"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","sourcesContent":["import { boardService } from '@/services/board.service.js'\nexport const boardStore = {\n  state: {\n    boards: [],\n    currBoard: null,\n    searchBoard: null,\n    filterBy: { status: 'All', priority: 'All', searchTerm: '' },\n    isLoading:false,\n  },\n  getters: {\n    boards(state) {\n      if (!state.searchBoard) return state.boards\n      return state.boards.filter(board =>\n        board.name.toLowerCase().includes(state.searchBoard.toLowerCase())\n      )\n    },\n    board(state) {\n      const filterBy = state.filterBy;\n      let filteredBoard = JSON.parse(JSON.stringify(state.currBoard))\n      if (filterBy.status !== 'All') {\n        filteredBoard.groups.forEach(group => {\n          group.tasks = group.tasks.filter(task => {\n            return task.status.txt === filterBy.status\n          })\n        })\n      }\n      if (filterBy.priority !== 'All') {\n        filteredBoard.groups.forEach(group => {\n          group.tasks = group.tasks.filter(task => {\n            return task.priority.txt === filterBy.priority\n          })\n        })\n      }\n      if (filterBy.searchTerm !== '') {\n        filteredBoard.groups.forEach(group => {\n          group.tasks = group.tasks.filter(task => {\n            return task.txt.toLowerCase().includes(filterBy.searchTerm.toLowerCase())\n          })\n        })\n      }\n      return filteredBoard;\n    },\n    defaultBoardId(state) {\n      return state.boards[0]._id\n    },\n    filterBy(state) {\n      return JSON.parse(JSON.stringify(state.filterBy))\n    },\n    isLoading(state){\n      return state.isLoading\n    }\n  },\n  mutations: {\n    setBoards(state, { boards }) {\n      const miniBoards = boards.map(board => {\n        board = { _id: board._id, name: board.name }\n        return board\n      })\n      state.boards = miniBoards\n    },\n    setBoard(state, { board }) {\n      state.currBoard = board\n    },\n    removeBoard(state, { boardId }) {\n      state.boards = state.boards.filter(board => board._id !== boardId)\n    },\n    setSearch(state, { searchBoard }) {\n      state.searchBoard = searchBoard\n    },\n    setFilterBy(state, { filterBy }) {\n      state.filterBy = filterBy;\n    },\n    toggleIsLoading(state){\n      state.isLoading = !state.isLoading\n    }\n  },\n  actions: {\n    async loadBoards(context) {\n      const boards = await boardService.query()\n      context.commit({ type: 'setBoards', boards })\n    },\n    async loadBoard({ commit }, { boardId }) {\n      commit({type:'toggleIsLoading'})\n      const board = await boardService.getById(boardId)\n      commit({ type: 'setBoard', board })\n      setTimeout(()=>{\n        commit({type:'toggleIsLoading'})\n      },2000)\n    },\n    async removeBoard({ commit }, { boardId }) {\n      await boardService.remove(boardId)\n      commit({ type: 'removeBoard', boardId })\n    },\n    async saveBoard({ commit, dispatch }, { board }) {\n      const savedBoard = await boardService.save(board)\n      if (board._id) {\n        commit({ type: 'setBoard', board: savedBoard })\n      } else {\n        dispatch({ type: 'loadBoards' })\n      }\n    },\n\n  }\n}\n"]}]}