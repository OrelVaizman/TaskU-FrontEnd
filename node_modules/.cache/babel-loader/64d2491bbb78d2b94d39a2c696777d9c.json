{"remainingRequest":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/babel-loader/lib/index.js!/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/eslint-loader/index.js??ref--13-0!/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/src/modules/socket.store.js","dependencies":[{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/src/modules/socket.store.js","mtime":1607212102000},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgc29ja2V0U2VydmljZSB9IGZyb20gJy4uL3NlcnZpY2VzL3NvY2tldC5zZXJ2aWNlJzsKaW1wb3J0IHN0b3JlIGZyb20gJy4uL3N0b3JlL2luZGV4JzsKaW1wb3J0IHsgZXZlbnRCdXMgfSBmcm9tICcuLi9zZXJ2aWNlcy9ldmVudC1idXMuc2VydmljZSc7CnNvY2tldFNlcnZpY2Uub24oJ3VwZGF0ZWQgYm9hcmQnLCBmdW5jdGlvbiAoYm9hcmQpIHsKICBzdG9yZS5jb21taXQoewogICAgdHlwZTogJ3NldEJvYXJkJywKICAgIGJvYXJkOiBib2FyZAogIH0pOwp9KTsKc29ja2V0U2VydmljZS5vbignbG9hZCBib2FyZHMnLCBmdW5jdGlvbiAoYm9hcmRzKSB7CiAgY29uc29sZS5sb2coJ2JvYXJkcyBsZW5ndGgnLCBib2FyZHMubGVuZ3RoKTsKICBzdG9yZS5jb21taXQoewogICAgdHlwZTogJ3NldEJvYXJkcycsCiAgICBib2FyZHM6IGJvYXJkcwogIH0pOwp9KTsKc29ja2V0U2VydmljZS5vbignaW5zZXJ0VXNlck5vdGlmJywgZnVuY3Rpb24gKG5vdGlmKSB7CiAgY29uc29sZS5sb2coJ1NvY2tldFN0b3JlIGdvdCBldiBpbnNlcnRVc2VyTm90aWYnKTsKICBzdG9yZS5jb21taXQoewogICAgdHlwZTogJ2luc2VydFVzZXJOb3RpZicsCiAgICBub3RpZjogbm90aWYKICB9KTsKfSk7CnNvY2tldFNlcnZpY2Uub24oJ3VwZGF0ZSBib2FyZCcsIGZ1bmN0aW9uIChib2FyZCkgewogIGNvbnNvbGUubG9nKCdTb2NrZXRTdG9yZSBnb3QgZXYgdXBkYXRlIGJvYXJkJyk7CiAgc3RvcmUuY29tbWl0KHsKICAgIHR5cGU6ICdzZXRCb2FyZEJ5SWQnLAogICAgYm9hcmQ6IGJvYXJkCiAgfSk7CiAgZXZlbnRCdXMuJGVtaXQoJ2ZvcmNlUmVyZW5kZXInKTsKfSk7CmV4cG9ydCB2YXIgc29ja2V0U3RvcmUgPSB7CiAgc3RhdGU6IHt9LAogIGdldHRlcnM6IHt9LAogIG11dGF0aW9uczoge30sCiAgYWN0aW9uczogewogICAgLy8gc2V0dXBTb2NrZXRzKCkgewogICAgLy8gICAgIHNvY2tldFNlcnZpY2Uuc2V0dXAoKQogICAgLy8gfSwKICAgIHVwZGF0ZUJvYXJkOiBmdW5jdGlvbiB1cGRhdGVCb2FyZChjb250ZXh0LCBfcmVmKSB7CiAgICAgIHZhciBib2FyZCA9IF9yZWYuYm9hcmQ7CiAgICAgIHNvY2tldFNlcnZpY2UuZW1pdCgndXBkYXRlIGJvYXJkJywgYm9hcmQpOwogICAgfSwKICAgIGxvYWRBbGxCb2FyZHM6IGZ1bmN0aW9uIGxvYWRBbGxCb2FyZHMoKSB7CiAgICAgIHNvY2tldFNlcnZpY2UuZW1pdCgnbG9hZCBib2FyZHMnKTsKICAgIH0sCiAgICB0dXJuT2ZmU29ja2V0OiBmdW5jdGlvbiB0dXJuT2ZmU29ja2V0KCkgewogICAgICBjb25zb2xlLmxvZygndHVybmluZyBvZmYnKTsKICAgICAgc29ja2V0U2VydmljZS50ZXJtaW5hdGUoKTsKICAgIH0sCiAgICBjcmVhdGVQcml2YXRlU29ja2V0OiBmdW5jdGlvbiBjcmVhdGVQcml2YXRlU29ja2V0KGNvbnRleHQpIHsKICAgICAgY29uc29sZS5sb2coJ2NvbnRleHQ6JywgY29udGV4dCk7CiAgICAgIHZhciB1c2VySWQgPSBjb250ZXh0LmdldHRlcnMudXNlci5faWQ7CiAgICAgIHNvY2tldFNlcnZpY2UuZW1pdCgnY3JlYXRlUHJpdmF0ZVNvY2tldCcsIHVzZXJJZCk7CiAgICB9LAogICAgZGVsZXRlUHJpdmF0ZVNvY2tldDogZnVuY3Rpb24gZGVsZXRlUHJpdmF0ZVNvY2tldChjb250ZXh0KSB7CiAgICAgIHZhciB1c2VySWQgPSBjb250ZXh0LmdldHRlcnMudXNlci5faWQ7CiAgICAgIHNvY2tldFNlcnZpY2UuZW1pdCgnZGVsZXRlUHJpdmF0ZVNvY2tldCcsIHVzZXJJZCk7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/src/modules/socket.store.js"],"names":["socketService","store","eventBus","on","board","commit","type","boards","console","log","length","notif","$emit","socketStore","state","getters","mutations","actions","updateBoard","context","emit","loadAllBoards","turnOffSocket","terminate","createPrivateSocket","userId","user","_id","deletePrivateSocket"],"mappings":"AAAA,SAASA,aAAT,QAA8B,4BAA9B;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,SAAQC,QAAR,QAAuB,+BAAvB;AAEAF,aAAa,CAACG,EAAd,CAAiB,eAAjB,EAAkC,UAAAC,KAAK,EAAI;AACvCH,EAAAA,KAAK,CAACI,MAAN,CAAa;AACTC,IAAAA,IAAI,EAAE,UADG;AAETF,IAAAA,KAAK,EAALA;AAFS,GAAb;AAIH,CALD;AAMAJ,aAAa,CAACG,EAAd,CAAiB,aAAjB,EAAgC,UAAAI,MAAM,EAAI;AACtCC,EAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BF,MAAM,CAACG,MAApC;AACAT,EAAAA,KAAK,CAACI,MAAN,CAAa;AACTC,IAAAA,IAAI,EAAE,WADG;AAETC,IAAAA,MAAM,EAANA;AAFS,GAAb;AAIH,CAND;AAOAP,aAAa,CAACG,EAAd,CAAiB,iBAAjB,EAAoC,UAACQ,KAAD,EAAW;AAC3CH,EAAAA,OAAO,CAACC,GAAR,CAAY,oCAAZ;AACAR,EAAAA,KAAK,CAACI,MAAN,CAAa;AAAEC,IAAAA,IAAI,EAAE,iBAAR;AAA2BK,IAAAA,KAAK,EAALA;AAA3B,GAAb;AACH,CAHD;AAKAX,aAAa,CAACG,EAAd,CAAiB,cAAjB,EAAiC,UAACC,KAAD,EAAW;AACxCI,EAAAA,OAAO,CAACC,GAAR,CAAY,iCAAZ;AACAR,EAAAA,KAAK,CAACI,MAAN,CAAa;AAAEC,IAAAA,IAAI,EAAE,cAAR;AAAwBF,IAAAA,KAAK,EAALA;AAAxB,GAAb;AACAF,EAAAA,QAAQ,CAACU,KAAT,CAAe,eAAf;AACH,CAJD;AAMA,OAAO,IAAMC,WAAW,GAAG;AACvBC,EAAAA,KAAK,EAAE,EADgB;AAGvBC,EAAAA,OAAO,EAAE,EAHc;AAKvBC,EAAAA,SAAS,EAAE,EALY;AAOvBC,EAAAA,OAAO,EAAE;AACL;AACA;AACA;AACAC,IAAAA,WAJK,uBAIOC,OAJP,QAI2B;AAAA,UAATf,KAAS,QAATA,KAAS;AAC5BJ,MAAAA,aAAa,CAACoB,IAAd,CAAmB,cAAnB,EAAmChB,KAAnC;AACH,KANI;AAOLiB,IAAAA,aAPK,2BAOW;AACZrB,MAAAA,aAAa,CAACoB,IAAd,CAAmB,aAAnB;AACH,KATI;AAULE,IAAAA,aAVK,2BAUW;AACZd,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACAT,MAAAA,aAAa,CAACuB,SAAd;AACH,KAbI;AAcLC,IAAAA,mBAdK,+BAceL,OAdf,EAcwB;AACzBX,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBU,OAAxB;AACA,UAAIM,MAAM,GAAGN,OAAO,CAACJ,OAAR,CAAgBW,IAAhB,CAAqBC,GAAlC;AACA3B,MAAAA,aAAa,CAACoB,IAAd,CAAmB,qBAAnB,EAA0CK,MAA1C;AACH,KAlBI;AAmBLG,IAAAA,mBAnBK,+BAmBeT,OAnBf,EAmBwB;AACzB,UAAIM,MAAM,GAAGN,OAAO,CAACJ,OAAR,CAAgBW,IAAhB,CAAqBC,GAAlC;AACA3B,MAAAA,aAAa,CAACoB,IAAd,CAAmB,qBAAnB,EAA0CK,MAA1C;AACH;AAtBI;AAPc,CAApB","sourcesContent":["import { socketService } from '../services/socket.service'\r\nimport store from '../store/index'\r\nimport {eventBus} from '../services/event-bus.service'\r\n\r\nsocketService.on('updated board', board => {\r\n    store.commit({\r\n        type: 'setBoard',\r\n        board\r\n    })\r\n})\r\nsocketService.on('load boards', boards => {\r\n    console.log('boards length', boards.length)\r\n    store.commit({\r\n        type: 'setBoards',\r\n        boards\r\n    })\r\n})\r\nsocketService.on('insertUserNotif', (notif) => {\r\n    console.log('SocketStore got ev insertUserNotif',);\r\n    store.commit({ type: 'insertUserNotif', notif })\r\n})\r\n\r\nsocketService.on('update board', (board) => {\r\n    console.log('SocketStore got ev update board');\r\n    store.commit({ type: 'setBoardById', board })\r\n    eventBus.$emit('forceRerender')\r\n})\r\n\r\nexport const socketStore = {\r\n    state: {\r\n    },\r\n    getters: {\r\n    },\r\n    mutations: {\r\n    },\r\n    actions: {\r\n        // setupSockets() {\r\n        //     socketService.setup()\r\n        // },\r\n        updateBoard(context, { board }) {\r\n            socketService.emit('update board', board)\r\n        },\r\n        loadAllBoards() {\r\n            socketService.emit('load boards')\r\n        },\r\n        turnOffSocket() {\r\n            console.log('turning off');\r\n            socketService.terminate();\r\n        },\r\n        createPrivateSocket(context) {\r\n            console.log('context:', context);\r\n            let userId = context.getters.user._id\r\n            socketService.emit('createPrivateSocket', userId)\r\n        },\r\n        deletePrivateSocket(context) {\r\n            let userId = context.getters.user._id\r\n            socketService.emit('deletePrivateSocket', userId)\r\n        },\r\n    }\r\n}"]}]}