{"remainingRequest":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/babel-loader/lib/index.js!/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/src/cmps/upload-img.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/src/cmps/upload-img.vue","mtime":1609671062372},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiL1VzZXJzL29yZWx2YWl6bWFuL0Rlc2t0b3AvZGV2L0ZpbmFsU3ByaW50L3Rhc2t1LWZyb250ZW5kL1Rhc2tVLWZyb250ZW5kL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IHsgaW1nVXBsb2FkIH0gZnJvbSAnQC9zZXJ2aWNlcy9pbWctdXBsb2FkLnNlcnZpY2UnOwpleHBvcnQgZGVmYXVsdCB7CiAgcHJvcHM6IHsKICAgIGlzVXNlckRldGFpbHM6IEJvb2xlYW4KICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBpc0xvYWRpbmc6IGZhbHNlLAogICAgICBpbWdVcmw6IG51bGwKICAgIH07CiAgfSwKICBtZXRob2RzOiB7CiAgICBvblVwbG9hZEltZzogZnVuY3Rpb24gb25VcGxvYWRJbWcoZXYpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoKSB7CiAgICAgICAgdmFyIHJlczsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBfdGhpcy5pc0xvYWRpbmcgPSB0cnVlOwogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDM7CiAgICAgICAgICAgICAgICByZXR1cm4gaW1nVXBsb2FkKGV2KTsKCiAgICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICAgICAgcmVzID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgICAgICAgIF90aGlzLmltZ1VybCA9IHJlcy51cmw7CgogICAgICAgICAgICAgICAgX3RoaXMuJGVtaXQoJ3NlbmRJbWdVcmwnLCBfdGhpcy5pbWdVcmwpOwoKICAgICAgICAgICAgICAgIF90aGlzLmlzTG9hZGluZyA9IGZhbHNlOwoKICAgICAgICAgICAgICBjYXNlIDc6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlKTsKICAgICAgfSkpKCk7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["upload-img.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqCA,SAAA,SAAA,QAAA,+BAAA;AACA,eAAA;AACA,EAAA,KAAA,EAAA;AACA,IAAA,aAAA,EAAA;AADA,GADA;AAIA,EAAA,IAJA,kBAIA;AACA,WAAA;AACA,MAAA,SAAA,EAAA,KADA;AAEA,MAAA,MAAA,EAAA;AAFA,KAAA;AAIA,GATA;AAWA,EAAA,OAAA,EAAA;AACA,IAAA,WADA,uBACA,EADA,EACA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,gBAAA,KAAA,CAAA,SAAA,GAAA,IAAA;AADA;AAAA,uBAEA,SAAA,CAAA,EAAA,CAFA;;AAAA;AAEA,gBAAA,GAFA;AAGA,gBAAA,KAAA,CAAA,MAAA,GAAA,GAAA,CAAA,GAAA;;AACA,gBAAA,KAAA,CAAA,KAAA,CAAA,YAAA,EAAA,KAAA,CAAA,MAAA;;AACA,gBAAA,KAAA,CAAA,SAAA,GAAA,KAAA;;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAPA;AAXA,CAAA","sourcesContent":["<template>\n  <section\n    :class=\"{ 'upload-image-container': true, 'user-editor': isUserDetails }\"\n  >\n    <div\n      :class=\"{\n        'container-img flex column': true,\n        'user-editor': isUserDetails\n      }\"\n      v-if=\"!isLoading\"\n    >\n      <slot name=\"imgUrl\">\n        <img class=\"img-uploaded\" v-if=\"imgUrl\" :src=\"imgUrl\" alt=\"image\" />\n      </slot>\n      <label\n        :class=\"{ 'label-img': true, 'user-editor': isUserDetails }\"\n        for=\"imgUploader\"\n      >\n        <div class=\"white btn-upload-container\">\n          <slot name=\"btn-upload\">\n            <i\n              v-tooltip.top=\"'Upload Image'\"\n              :class=\"{\n                'fad fa-upload upload-icon': true,\n                'user-editor': isUserDetails\n              }\"\n            ></i>\n          </slot>\n        </div>\n        <input @change=\"onUploadImg\" type=\"file\" id=\"imgUploader\" />\n      </label>\n    </div>\n    <img v-else src=\"@/assets/imgs/loader.gif\" class=\"img-loader\" />\n  </section>\n</template>\n\n<script>\nimport { imgUpload } from '@/services/img-upload.service'\nexport default {\n  props: {\n    isUserDetails: Boolean\n  },\n  data() {\n    return {\n      isLoading: false,\n      imgUrl: null\n    }\n  },\n\n  methods: {\n    async onUploadImg(ev) {\n      this.isLoading = true\n      const res = await imgUpload(ev)\n      this.imgUrl = res.url\n      this.$emit('sendImgUrl', this.imgUrl)\n      this.isLoading = false\n    }\n  }\n}\n</script>\n\n<style></style>\n"],"sourceRoot":"src/cmps"}]}