{"remainingRequest":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/babel-loader/lib/index.js!/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/src/views/board-app.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/src/views/board-app.vue","mtime":1607364413951},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sLmRlc2NyaXB0aW9uIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmluZC1pbmRleCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LnNwbGljZSI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmZ1bmN0aW9uLm5hbWUiOwppbXBvcnQgInJlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZSI7CmltcG9ydCBfYXN5bmNUb0dlbmVyYXRvciBmcm9tICIvVXNlcnMvb3JlbHZhaXptYW4vRGVza3RvcC9kZXYvRmluYWxTcHJpbnQvdGFza3UtZnJvbnRlbmQvVGFza1UtZnJvbnRlbmQvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgeyBldmVudEJ1cyB9IGZyb20gJ0Avc2VydmljZXMvZXZlbnQtYnVzLnNlcnZpY2UnOwppbXBvcnQgY2hhdEFwcCBmcm9tICdAL2NtcHMvYm9hcmQtY2hhdCc7CmltcG9ydCBncm91cExpc3QgZnJvbSAnQC9jbXBzL2dyb3VwLWxpc3QnOwppbXBvcnQgYm9hcmRMaXN0IGZyb20gJ0AvY21wcy9ib2FyZC1saXN0LnZ1ZSc7CmltcG9ydCB7IGJvYXJkU2VydmljZSB9IGZyb20gJ0Avc2VydmljZXMvYm9hcmQuc2VydmljZSc7CmltcG9ydCBib2FyZFNlYXJjaCBmcm9tICdAL2NtcHMvYm9hcmQtc2VhcmNoJzsKaW1wb3J0IHsgdXRpbFNlcnZpY2UgfSBmcm9tICdAL3NlcnZpY2VzL3V0aWwuc2VydmljZSc7CmltcG9ydCBib2FyZEhlYWRlciBmcm9tICcuLi9jbXBzL2JvYXJkLWhlYWRlci52dWUnOyAvLyBpbXBvcnQgeyBzb2NrZXRTZXJ2aWNlIH0gZnJvbSAnQC9zZXJ2aWNlcy9zb2NrZXQuc2VydmljZS5qcycKCmltcG9ydCB0cmVsbG9Nb2RlIGZyb20gJ0AvY21wcy9UcmVsbG8vdHJlbGxvLW1vZGUnOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ2JvYXJkLWFwcCcsCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGlzQ2hhdGluZ0J0blNob3duOiB0cnVlLAogICAgICBpc0NoYXRpbmc6IGZhbHNlLAogICAgICBpc0xpc3RFeHBhbmRlZDogdHJ1ZSwKICAgICAgaXNNZW1iZXJzU2hvd2VuOiBmYWxzZSwKICAgICAgY3VyclRhc2tEZXRhaWxzOiBudWxsLAogICAgICBpc1Rhc2tEZXRhaWxzSG92ZXI6IGZhbHNlLAogICAgICBjb21wb25lbnRLZXk6IDAKICAgIH07CiAgfSwKICBjb21wdXRlZDogewogICAgLy8gTk9UICBSRU1PVkUgVEhJUyBGVU5DICEhISEhISEhISEKICAgIGRhcmtNb2RlOiBmdW5jdGlvbiBkYXJrTW9kZSgpIHsKICAgICAgcmV0dXJuIHRoaXMuJHN0b3JlLmdldHRlcnMuZ2V0RGFya01vZGVUb2dnbGU7CiAgICB9LAogICAgZGlzcGxheU1vZGU6IGZ1bmN0aW9uIGRpc3BsYXlNb2RlKCkgewogICAgICByZXR1cm4gdGhpcy4kc3RvcmUuZ2V0dGVycy5kaXNwbGF5TW9kZTsKICAgIH0sCiAgICBidG5DbGFzc0V4cGVuZDogZnVuY3Rpb24gYnRuQ2xhc3NFeHBlbmQoKSB7CiAgICAgIHJldHVybiB0aGlzLmlzTGlzdEV4cGFuZGVkID8gJ2V4cGVuZC1idG4gZmFzIGZhLWNoZXZyb24tbGVmdCcgOiAnZXhwZW5kLWJ0biBmYXMgZmEtY2hldnJvbi1yaWdodCc7CiAgICB9LAogICAgY2hhdENvbnRyb2w6IGZ1bmN0aW9uIGNoYXRDb250cm9sKCkgewogICAgICByZXR1cm4gdGhpcy5pc0NoYXRpbmdCdG5TaG93biA/ICdIaWRlIENoYXQnIDogJ1Nob3cgQ2hhdCc7CiAgICB9LAogICAgdXNlcjogZnVuY3Rpb24gdXNlcigpIHsKICAgICAgcmV0dXJuIHRoaXMuJHN0b3JlLmdldHRlcnMudXNlcjsKICAgIH0sCiAgICBtaW5pVXNlcjogZnVuY3Rpb24gbWluaVVzZXIoKSB7CiAgICAgIHJldHVybiB0aGlzLiRzdG9yZS5nZXR0ZXJzLm1pbmlVc2VyOwogICAgfSwKICAgIGJvYXJkOiBmdW5jdGlvbiBib2FyZCgpIHsKICAgICAgcmV0dXJuIHRoaXMuJHN0b3JlLmdldHRlcnMuYm9hcmQ7CiAgICB9LAogICAgYm9hcmRzOiBmdW5jdGlvbiBib2FyZHMoKSB7CiAgICAgIHJldHVybiB0aGlzLiRzdG9yZS5nZXR0ZXJzLmJvYXJkczsKICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIHNldERpc3BsYXlNb2RlOiBmdW5jdGlvbiBzZXREaXNwbGF5TW9kZShkaXNwbGF5TW9kZSkgewogICAgICB0aGlzLiRzdG9yZS5jb21taXQoewogICAgICAgIHR5cGU6ICdzZXREaXNwbGF5TW9kZScsCiAgICAgICAgZGlzcGxheU1vZGU6IGRpc3BsYXlNb2RlCiAgICAgIH0pOwogICAgfSwKICAgIHRvb2dsZUNoYXRCdG46IGZ1bmN0aW9uIHRvb2dsZUNoYXRCdG4oKSB7CiAgICAgIHRoaXMuaXNDaGF0aW5nQnRuU2hvd24gPSAhdGhpcy5pc0NoYXRpbmdCdG5TaG93bjsKICAgIH0sCiAgICBleHBhbmRMaXN0OiBmdW5jdGlvbiBleHBhbmRMaXN0KCkgewogICAgICB0aGlzLmlzTGlzdEV4cGFuZGVkID0gdHJ1ZTsKICAgIH0sCiAgICB0b2dnbGVFeHBhbmRMaXN0OiBmdW5jdGlvbiB0b2dnbGVFeHBhbmRMaXN0KCkgewogICAgICB0aGlzLmlzTGlzdEV4cGFuZGVkID0gIXRoaXMuaXNMaXN0RXhwYW5kZWQ7CiAgICB9LAogICAgdG9nZ2xlQ2hhdDogZnVuY3Rpb24gdG9nZ2xlQ2hhdCgpIHsKICAgICAgdGhpcy5pc0NoYXRpbmcgPSAhdGhpcy5pc0NoYXRpbmc7CiAgICB9LAogICAgZHVwbGljYXRlR3JvdXA6IGZ1bmN0aW9uIGR1cGxpY2F0ZUdyb3VwKGdyb3VwKSB7CiAgICAgIGdyb3VwLmlkID0gdXRpbFNlcnZpY2UubWFrZUlkKCk7CiAgICAgIHRoaXMuYm9hcmQuZ3JvdXBzLnB1c2goZ3JvdXApOwogICAgICB2YXIgdHh0ID0gIiIuY29uY2F0KHRoaXMudXNlci5mdWxsTmFtZSwgIiBkdXBsaWNhdGVkIGdyb3VwIHRoZSBncm91cCAiKS5jb25jYXQoZ3JvdXAubmFtZSwgIiAiKTsKICAgICAgdmFyIG5ld0FjdGl2aXR5ID0gYm9hcmRTZXJ2aWNlLmdldEVtcHR5QWN0aXZpdHkodHh0LCB0aGlzLm1pbmlVc2VyKTsKICAgICAgdGhpcy5ib2FyZC5hY3Rpdml0aWVzLnB1c2gobmV3QWN0aXZpdHkpOwogICAgICB0aGlzLiRzdG9yZS5kaXNwYXRjaCh7CiAgICAgICAgdHlwZTogJ3NhdmVCb2FyZCcsCiAgICAgICAgYm9hcmQ6IHRoaXMuYm9hcmQKICAgICAgfSk7CiAgICAgIHRoaXMuJHN0b3JlLmRpc3BhdGNoKHsKICAgICAgICB0eXBlOiAndXBkYXRlQm9hcmQnLAogICAgICAgIGJvYXJkOiB0aGlzLmJvYXJkCiAgICAgIH0pOwogICAgICB0aGlzLmZvcmNlUmVyZW5kZXIoKTsKICAgIH0sCiAgICB1cGRhdGVCb2FyZE5hbWU6IGZ1bmN0aW9uIHVwZGF0ZUJvYXJkTmFtZShldikgewogICAgICBldi50YXJnZXQuYmx1cigpOwogICAgICBpZiAoZXYudGFyZ2V0LmlubmVyVGV4dCA9PT0gdGhpcy5ib2FyZC5uYW1lKSByZXR1cm47ZWxzZSB7CiAgICAgICAgdGhpcy5ib2FyZC5uYW1lID0gZXYudGFyZ2V0LmlubmVyVGV4dDsKICAgICAgICB2YXIgdHh0ID0gIiIuY29uY2F0KHRoaXMudXNlci5mdWxsTmFtZSwgIiB1cGRhdGUgQm9hcmQgbmFtZSIpOwogICAgICAgIHZhciBuZXdBY3Rpdml0eSA9IGJvYXJkU2VydmljZS5nZXRFbXB0eUFjdGl2aXR5KHR4dCwgdGhpcy5taW5pVXNlcik7CiAgICAgICAgdGhpcy5ib2FyZC5hY3Rpdml0aWVzLnB1c2gobmV3QWN0aXZpdHkpOwogICAgICAgIHRoaXMuJHN0b3JlLmRpc3BhdGNoKHsKICAgICAgICAgIHR5cGU6ICdzYXZlQm9hcmQnLAogICAgICAgICAgYm9hcmQ6IHRoaXMuYm9hcmQKICAgICAgICB9KTsKICAgICAgICB0aGlzLiRzdG9yZS5kaXNwYXRjaCh7CiAgICAgICAgICB0eXBlOiAndXBkYXRlQm9hcmQnLAogICAgICAgICAgYm9hcmQ6IHRoaXMuYm9hcmQKICAgICAgICB9KTsKICAgICAgICB0aGlzLiRub3RpZnkoewogICAgICAgICAgbWVzc2FnZTogJ0JvYXJkIG5hbWUgdXBkYXRlZCcsCiAgICAgICAgICBwb3NpdGlvbjogJ2JvdHRvbS1sZWZ0JywKICAgICAgICAgIGR1cmF0aW9uOiAyMDAwCiAgICAgICAgfSk7CiAgICAgICAgdGhpcy5mb3JjZVJlcmVuZGVyKCk7CiAgICAgIH0KICAgIH0sCiAgICB1cGRhdGVCb2FyZERlc2M6IGZ1bmN0aW9uIHVwZGF0ZUJvYXJkRGVzYyhldikgewogICAgICBldi50YXJnZXQuYmx1cigpOwogICAgICBpZiAoZXYudGFyZ2V0LmlubmVyVGV4dCA9PT0gdGhpcy5ib2FyZC5kZXNjcmlwdGlvbikgcmV0dXJuO2Vsc2UgewogICAgICAgIHRoaXMuYm9hcmQuZGVzY3JpcHRpb24gPSBldi50YXJnZXQuaW5uZXJUZXh0OwogICAgICAgIHZhciB0eHQgPSAiIi5jb25jYXQodGhpcy51c2VyLmZ1bGxOYW1lLCAiIHVwZGF0ZSBCb2FyZCBkZXNjcmlwdGlvbiIpOwogICAgICAgIHZhciBuZXdBY3Rpdml0eSA9IGJvYXJkU2VydmljZS5nZXRFbXB0eUFjdGl2aXR5KHR4dCwgdGhpcy5taW5pVXNlcik7CiAgICAgICAgdGhpcy5ib2FyZC5hY3Rpdml0aWVzLnB1c2gobmV3QWN0aXZpdHkpOwogICAgICAgIHRoaXMuJHN0b3JlLmRpc3BhdGNoKHsKICAgICAgICAgIHR5cGU6ICdzYXZlQm9hcmQnLAogICAgICAgICAgYm9hcmQ6IHRoaXMuYm9hcmQKICAgICAgICB9KTsKICAgICAgICB0aGlzLiRub3RpZnkoewogICAgICAgICAgbWVzc2FnZTogJ0JvYXJkIGRlc2NyaXB0aW9uIHVwZGF0ZWQnLAogICAgICAgICAgcG9zaXRpb246ICdib3R0b20tbGVmdCcsCiAgICAgICAgICBkdXJhdGlvbjogMjAwMAogICAgICAgIH0pOwogICAgICAgIHRoaXMuZm9yY2VSZXJlbmRlcigpOwogICAgICB9CiAgICB9LAogICAgZm9yY2VSZXJlbmRlcjogZnVuY3Rpb24gZm9yY2VSZXJlbmRlcigpIHsKICAgICAgdGhpcy5jb21wb25lbnRLZXkgKz0gMTsKICAgIH0sCiAgICBhZGRCb2FyZE1lbWJlcjogZnVuY3Rpb24gYWRkQm9hcmRNZW1iZXIodXNlcikgewogICAgICB0aGlzLmJvYXJkLm1lbWJlcnMudW5zaGlmdCh1c2VyKTsKICAgICAgdmFyIHR4dCA9ICIiLmNvbmNhdCh0aGlzLnVzZXIuZnVsbE5hbWUsICIgYWRkICIpLmNvbmNhdCh1c2VyLmZ1bGxOYW1lLCAiIHRvIEJvYXJkIik7CiAgICAgIHZhciBuZXdBY3Rpdml0eSA9IGJvYXJkU2VydmljZS5nZXRFbXB0eUFjdGl2aXR5KHR4dCwgdGhpcy5taW5pVXNlcik7CiAgICAgIHRoaXMuYm9hcmQuYWN0aXZpdGllcy5wdXNoKG5ld0FjdGl2aXR5KTsKICAgICAgdGhpcy4kc3RvcmUuZGlzcGF0Y2goewogICAgICAgIHR5cGU6ICdzYXZlQm9hcmQnLAogICAgICAgIGJvYXJkOiB0aGlzLmJvYXJkCiAgICAgIH0pOwogICAgICB0aGlzLiRub3RpZnkoewogICAgICAgIG1lc3NhZ2U6ICdOZXcgbWVtYmVyIGFkZGVkIHRvIGJvYXJkJywKICAgICAgICBwb3NpdGlvbjogJ2JvdHRvbS1sZWZ0JywKICAgICAgICBkdXJhdGlvbjogMjAwMAogICAgICB9KTsKICAgIH0sCiAgICByZW1vdmVCb2FyZE1lbWJlcjogZnVuY3Rpb24gcmVtb3ZlQm9hcmRNZW1iZXIobWVtYmVyKSB7CiAgICAgIHZhciBpZHggPSB0aGlzLmJvYXJkLm1lbWJlcnMuZmluZEluZGV4KGZ1bmN0aW9uIChiTWVtYmVyKSB7CiAgICAgICAgcmV0dXJuIGJNZW1iZXIuX2lkID09PSBtZW1iZXIuX2lkOwogICAgICB9KTsKICAgICAgdGhpcy5ib2FyZC5tZW1iZXJzLnNwbGljZShpZHgsIDEpOwogICAgICB2YXIgdHh0ID0gIiIuY29uY2F0KHRoaXMudXNlci5mdWxsTmFtZSwgIiByZW1vdmUgICIpLmNvbmNhdChtZW1iZXIuZnVsbE5hbWUsICIgZnJvbSBCb2FyZCIpOwogICAgICB2YXIgbmV3QWN0aXZpdHkgPSBib2FyZFNlcnZpY2UuZ2V0RW1wdHlBY3Rpdml0eSh0eHQsIHRoaXMubWluaVVzZXIpOwogICAgICB0aGlzLmJvYXJkLmFjdGl2aXRpZXMucHVzaChuZXdBY3Rpdml0eSk7CiAgICAgIHRoaXMuJHN0b3JlLmRpc3BhdGNoKHsKICAgICAgICB0eXBlOiAnc2F2ZUJvYXJkJywKICAgICAgICBib2FyZDogdGhpcy5ib2FyZAogICAgICB9KTsKICAgICAgdGhpcy4kbm90aWZ5KHsKICAgICAgICBtZXNzYWdlOiAnTWVtYmVyIHJlbW92ZWQgZnJvbSBib2FyZCcsCiAgICAgICAgcG9zaXRpb246ICdib3R0b20tbGVmdCcsCiAgICAgICAgZHVyYXRpb246IDIwMDAKICAgICAgfSk7CiAgICB9LAogICAgc2V0U2VhcmNoOiBmdW5jdGlvbiBzZXRTZWFyY2goc2VhcmNoQm9hcmQpIHsKICAgICAgdGhpcy4kc3RvcmUuY29tbWl0KHsKICAgICAgICB0eXBlOiAnc2V0U2VhcmNoJywKICAgICAgICBzZWFyY2hCb2FyZDogc2VhcmNoQm9hcmQKICAgICAgfSk7CiAgICAgIHRoaXMuJHN0b3JlLmRpc3BhdGNoKHsKICAgICAgICB0eXBlOiAnbG9hZEJvYXJkcycKICAgICAgfSk7CiAgICB9LAogICAgcmVtb3ZlQ3VyckJvYXJkOiBmdW5jdGlvbiByZW1vdmVDdXJyQm9hcmQoYm9hcmRJZCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgICB2YXIgYm9hcmQsIHR4dCwgbmV3QWN0aXZpdHk7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgX2NvbnRleHQucHJldiA9IDA7CiAgICAgICAgICAgICAgICBib2FyZCA9IGJvYXJkU2VydmljZS5nZXRCeUlkKCk7CgogICAgICAgICAgICAgICAgaWYgKCEoYm9hcmQuY3JlYXRvci5faWQgIT09IF90aGlzLnVzZXJfaWQpKSB7CiAgICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA0OwogICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuYWJydXB0KCJyZXR1cm4iKTsKCiAgICAgICAgICAgICAgY2FzZSA0OgogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDY7CiAgICAgICAgICAgICAgICByZXR1cm4gX3RoaXMuJGNvbmZpcm0oJ1RoaXMgd2lsbCBwZXJtYW5lbnRseSBkZWxldGUgdGhlIGJvYXJkLiBDb250aW51ZT8nLCAnV2FybmluZycsIHsKICAgICAgICAgICAgICAgICAgY29uZmlybUJ1dHRvblRleHQ6ICdPSycsCiAgICAgICAgICAgICAgICAgIGNhbmNlbEJ1dHRvblRleHQ6ICdDYW5jZWwnLAogICAgICAgICAgICAgICAgICB0eXBlOiAnd2FybmluZycKICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICBjYXNlIDY6CiAgICAgICAgICAgICAgICB0eHQgPSAiIi5jb25jYXQoX3RoaXMudXNlci5mdWxsTmFtZSwgIiByZW1vdmUgQm9hcmQiKTsKICAgICAgICAgICAgICAgIG5ld0FjdGl2aXR5ID0gYm9hcmRTZXJ2aWNlLmdldEVtcHR5QWN0aXZpdHkodHh0LCBfdGhpcy5taW5pVXNlcik7CgogICAgICAgICAgICAgICAgX3RoaXMuYm9hcmQuYWN0aXZpdGllcy5wdXNoKG5ld0FjdGl2aXR5KTsKCiAgICAgICAgICAgICAgICBfdGhpcy4kc3RvcmUuZGlzcGF0Y2goewogICAgICAgICAgICAgICAgICB0eXBlOiAncmVtb3ZlQm9hcmQnLAogICAgICAgICAgICAgICAgICBib2FyZElkOiBib2FyZElkCiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgICBfdGhpcy4kc3RvcmUuZGlzcGF0Y2goewogICAgICAgICAgICAgICAgICB0eXBlOiAnbG9hZEFsbEJvYXJkcycsCiAgICAgICAgICAgICAgICAgIGJvYXJkczogX3RoaXMuYm9hcmRzCiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgICBfdGhpcy4kbm90aWZ5KHsKICAgICAgICAgICAgICAgICAgbWVzc2FnZTogJ0JvYXJkIGRlbGV0ZWQnLAogICAgICAgICAgICAgICAgICBwb3NpdGlvbjogJ2JvdHRvbS1sZWZ0JywKICAgICAgICAgICAgICAgICAgZHVyYXRpb246IDIwMDAKICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICAgIF90aGlzLiRtZXNzYWdlKHsKICAgICAgICAgICAgICAgICAgdHlwZTogJ3N1Y2Nlc3MnLAogICAgICAgICAgICAgICAgICBtZXNzYWdlOiAnRGVsZXRlIGNvbXBsZXRlZCcKICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAxODsKICAgICAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgICAgICBjYXNlIDE1OgogICAgICAgICAgICAgICAgX2NvbnRleHQucHJldiA9IDE1OwogICAgICAgICAgICAgICAgX2NvbnRleHQudDAgPSBfY29udGV4dFsiY2F0Y2giXSgwKTsKCiAgICAgICAgICAgICAgICBfdGhpcy4kbWVzc2FnZSh7CiAgICAgICAgICAgICAgICAgIGR1cnRpb246IDIwMDAsCiAgICAgICAgICAgICAgICAgIHNob3dDbG9zZTogdHJ1ZSwKICAgICAgICAgICAgICAgICAgdHlwZTogJ2Vycm9yJywKICAgICAgICAgICAgICAgICAgb2Zmc2V0OiAzMzUsCiAgICAgICAgICAgICAgICAgIG1lc3NhZ2U6ICdPbmx5IHRoZSBjcmVhdG9yIGNhbiBkZWxldGUgdGhlIGJvYXJkIScKICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICBjYXNlIDE4OgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZSwgbnVsbCwgW1swLCAxNV1dKTsKICAgICAgfSkpKCk7CiAgICB9LAogICAgbG9hZEJvYXJkczogZnVuY3Rpb24gbG9hZEJvYXJkcygpIHsKICAgICAgdGhpcy4kc3RvcmUuZGlzcGF0Y2goewogICAgICAgIHR5cGU6ICdsb2FkQm9hcmRzJwogICAgICB9KTsKICAgICAgdGhpcy5mb3JjZVJlcmVuZGVyKCk7CiAgICB9LAogICAgYWRkQm9hcmQ6IGZ1bmN0aW9uIGFkZEJvYXJkKCkgewogICAgICB2YXIgX3RoaXMyID0gdGhpczsKCiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUyKCkgewogICAgICAgIHZhciByZXMsIGJvYXJkLCB0eHQsIG5ld0FjdGl2aXR5OwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMiQoX2NvbnRleHQyKSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0Mi5wcmV2ID0gX2NvbnRleHQyLm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBfY29udGV4dDIucHJldiA9IDA7CiAgICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDM7CiAgICAgICAgICAgICAgICByZXR1cm4gX3RoaXMyLiRwcm9tcHQoJ1BsZWFzZSBlbnRlciBhIG5hbWUgdG8geW91ciBib2FyZCcsICdBZGQgTmV3IEJvYXJkJywgewogICAgICAgICAgICAgICAgICBjb25maXJtQnV0dG9uVGV4dDogJ09LJywKICAgICAgICAgICAgICAgICAgY2FuY2VsQnV0dG9uVGV4dDogJ0NhbmNlbCcKICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgICByZXMgPSBfY29udGV4dDIuc2VudDsKICAgICAgICAgICAgICAgIGJvYXJkID0gYm9hcmRTZXJ2aWNlLmdldEVtcHR5Qm9hcmQoKTsKICAgICAgICAgICAgICAgIGJvYXJkLm5hbWUgPSByZXMudmFsdWU7CiAgICAgICAgICAgICAgICBib2FyZC5jcmVhdG9yID0gX3RoaXMyLm1pbmlVc2VyOwogICAgICAgICAgICAgICAgYm9hcmQubWVtYmVycy5wdXNoKF90aGlzMi5taW5pVXNlcik7CiAgICAgICAgICAgICAgICB0eHQgPSAiIi5jb25jYXQoX3RoaXMyLm1pbmlVc2VyLmZ1bGxOYW1lLCAiIGNyZWF0ZSB0aGlzIEJvYXJkIik7CiAgICAgICAgICAgICAgICBuZXdBY3Rpdml0eSA9IGJvYXJkU2VydmljZS5nZXRFbXB0eUFjdGl2aXR5KHR4dCwgX3RoaXMyLm1pbmlVc2VyKTsKCiAgICAgICAgICAgICAgICBfdGhpczIuYm9hcmQuYWN0aXZpdGllcy5wdXNoKG5ld0FjdGl2aXR5KTsKCiAgICAgICAgICAgICAgICBfdGhpczIuJHN0b3JlLmRpc3BhdGNoKHsKICAgICAgICAgICAgICAgICAgdHlwZTogJ3NhdmVCb2FyZCcsCiAgICAgICAgICAgICAgICAgIGJvYXJkOiBib2FyZAogICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgICAgX3RoaXMyLiRtZXNzYWdlKHsKICAgICAgICAgICAgICAgICAgdHlwZTogJ3N1Y2Nlc3MnLAogICAgICAgICAgICAgICAgICBkdXJhdGlvbjogMjUwMCwKICAgICAgICAgICAgICAgICAgbWVzc2FnZTogJ1lvdXIgQm9hcmQ6JyArIHJlcy52YWx1ZSArICcgYWRkICcKICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gMTg7CiAgICAgICAgICAgICAgICBicmVhazsKCiAgICAgICAgICAgICAgY2FzZSAxNToKICAgICAgICAgICAgICAgIF9jb250ZXh0Mi5wcmV2ID0gMTU7CiAgICAgICAgICAgICAgICBfY29udGV4dDIudDAgPSBfY29udGV4dDJbImNhdGNoIl0oMCk7CgogICAgICAgICAgICAgICAgX3RoaXMyLiRtZXNzYWdlKHsKICAgICAgICAgICAgICAgICAgdHlwZTogJ2luZm8nLAogICAgICAgICAgICAgICAgICBkdXJhdGlvbjogMjUwMCwKICAgICAgICAgICAgICAgICAgbWVzc2FnZTogJ1lvdXIgYWN0aW9uIGNhbmNlbGVkJwogICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgIGNhc2UgMTg6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZTIsIG51bGwsIFtbMCwgMTVdXSk7CiAgICAgIH0pKSgpOwogICAgfSwKICAgIGxvYWRCb2FyZDogZnVuY3Rpb24gbG9hZEJvYXJkKCkgewogICAgICB2YXIgX3RoaXMzID0gdGhpczsKCiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUzKCkgewogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMyQoX2NvbnRleHQzKSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0My5wcmV2ID0gX2NvbnRleHQzLm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBfY29udGV4dDMucHJldiA9IDA7CiAgICAgICAgICAgICAgICBfY29udGV4dDMubmV4dCA9IDM7CiAgICAgICAgICAgICAgICByZXR1cm4gX3RoaXMzLiRzdG9yZS5kaXNwYXRjaCh7CiAgICAgICAgICAgICAgICAgIHR5cGU6ICdsb2FkQm9hcmQnLAogICAgICAgICAgICAgICAgICBib2FyZElkOiBfdGhpczMuJHJvdXRlLnBhcmFtcy5ib2FyZElkCiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICAgICAgX2NvbnRleHQzLm5leHQgPSA4OwogICAgICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgICAgIGNhc2UgNToKICAgICAgICAgICAgICAgIF9jb250ZXh0My5wcmV2ID0gNTsKICAgICAgICAgICAgICAgIF9jb250ZXh0My50MCA9IF9jb250ZXh0M1siY2F0Y2giXSgwKTsKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdFcm9yb3JvciEhJyk7CgogICAgICAgICAgICAgIGNhc2UgODoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0My5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlMywgbnVsbCwgW1swLCA1XV0pOwogICAgICB9KSkoKTsKICAgIH0sCiAgICBhZGRHcm91cDogZnVuY3Rpb24gYWRkR3JvdXAoKSB7CiAgICAgIHZhciBuZXdHcm91cCA9IGJvYXJkU2VydmljZS5nZXRFbXB0eUdyb3VwKCk7CiAgICAgIHRoaXMuYm9hcmQuZ3JvdXBzLnB1c2gobmV3R3JvdXApOwogICAgICB2YXIgdHh0ID0gIiIuY29uY2F0KHRoaXMudXNlci5mdWxsTmFtZSwgIiBoYXMgYWRkZWQgYSBuZXcgZ3JvdXAhIik7CiAgICAgIHZhciBuZXdBY3Rpdml0eSA9IGJvYXJkU2VydmljZS5nZXRFbXB0eUFjdGl2aXR5KHR4dCwgdGhpcy5taW5pVXNlcik7CiAgICAgIHRoaXMuYm9hcmQuYWN0aXZpdGllcy5wdXNoKG5ld0FjdGl2aXR5KTsKICAgICAgdGhpcy4kc3RvcmUuZGlzcGF0Y2goewogICAgICAgIHR5cGU6ICdzYXZlQm9hcmQnLAogICAgICAgIGJvYXJkOiB0aGlzLmJvYXJkCiAgICAgIH0pOwogICAgICB0aGlzLiRub3RpZnkoewogICAgICAgIG1lc3NhZ2U6ICdOZXcgZ3JvdXAgYWRkZWQnLAogICAgICAgIHBvc2l0aW9uOiAnYm90dG9tLWxlZnQnLAogICAgICAgIGR1cmF0aW9uOiAyMDAwCiAgICAgIH0pOwogICAgICB0aGlzLmZvcmNlUmVyZW5kZXIoKTsKICAgIH0sCiAgICBkZWxldGVHcm91cDogZnVuY3Rpb24gZGVsZXRlR3JvdXAoZ3JvdXBJZCkgewogICAgICB2YXIgaWR4ID0gdGhpcy5ib2FyZC5ncm91cHMuZmluZEluZGV4KGZ1bmN0aW9uIChncm91cCkgewogICAgICAgIHJldHVybiBncm91cC5pZCA9PT0gZ3JvdXBJZDsKICAgICAgfSk7CiAgICAgIHZhciB0eHQgPSAiIi5jb25jYXQodGhpcy51c2VyLmZ1bGxOYW1lLCAiIGRlbGV0ZWQgZ3JvdXAgIikuY29uY2F0KHRoaXMuYm9hcmQuZ3JvdXBzW2lkeF0udHh0KTsKICAgICAgdGhpcy5ib2FyZC5ncm91cHMuc3BsaWNlKGlkeCwgMSk7CiAgICAgIHZhciBuZXdBY3Rpdml0eSA9IGJvYXJkU2VydmljZS5nZXRFbXB0eUFjdGl2aXR5KHR4dCwgdGhpcy5taW5pVXNlcik7CiAgICAgIHRoaXMuYm9hcmQuYWN0aXZpdGllcy5wdXNoKG5ld0FjdGl2aXR5KTsKICAgICAgdGhpcy4kc3RvcmUuZGlzcGF0Y2goewogICAgICAgIHR5cGU6ICdzYXZlQm9hcmQnLAogICAgICAgIGJvYXJkOiB0aGlzLmJvYXJkCiAgICAgIH0pOwogICAgICB0aGlzLiRub3RpZnkoewogICAgICAgIG1lc3NhZ2U6ICdHcm91cCBkZWxldGVkJywKICAgICAgICBwb3NpdGlvbjogJ2JvdHRvbS1sZWZ0JywKICAgICAgICBkdXJhdGlvbjogMjAwMAogICAgICB9KTsKICAgICAgdGhpcy5mb3JjZVJlcmVuZGVyKCk7CiAgICB9LAogICAgdXBkYXRlR3JvdXA6IGZ1bmN0aW9uIHVwZGF0ZUdyb3VwKHVwZGF0ZWRHcm91cCkgewogICAgICB2YXIgaWR4ID0gdGhpcy5ib2FyZC5ncm91cHMuZmluZEluZGV4KGZ1bmN0aW9uIChncm91cCkgewogICAgICAgIHJldHVybiBncm91cC5pZCA9PT0gdXBkYXRlZEdyb3VwLmlkOwogICAgICB9KTsKICAgICAgaWYgKGlkeCA8IDApIHJldHVybjsKICAgICAgdGhpcy5ib2FyZC5ncm91cHMuc3BsaWNlKGlkeCwgMSwgdXBkYXRlZEdyb3VwKTsKICAgICAgdmFyIHR4dCA9ICIiLmNvbmNhdCh0aGlzLnVzZXIuZnVsbE5hbWUsICIgdXBkYXRlZCBncm91cCAiKS5jb25jYXQodXBkYXRlZEdyb3VwLm5hbWUpOwogICAgICB2YXIgbmV3QWN0aXZpdHkgPSBib2FyZFNlcnZpY2UuZ2V0RW1wdHlBY3Rpdml0eSh0eHQsIHRoaXMubWluaVVzZXIpOwogICAgICB0aGlzLmJvYXJkLmFjdGl2aXRpZXMucHVzaChuZXdBY3Rpdml0eSk7CiAgICAgIHRoaXMuJHN0b3JlLmRpc3BhdGNoKHsKICAgICAgICB0eXBlOiAnc2F2ZUJvYXJkJywKICAgICAgICBib2FyZDogdGhpcy5ib2FyZAogICAgICB9KTsKICAgICAgdGhpcy4kbm90aWZ5KHsKICAgICAgICBtZXNzYWdlOiAnR3JvdXAgdXBkYXRlZCcsCiAgICAgICAgcG9zaXRpb246ICdib3R0b20tbGVmdCcsCiAgICAgICAgZHVyYXRpb246IDIwMDAKICAgICAgfSk7CiAgICAgIHRoaXMuZm9yY2VSZXJlbmRlcigpOwogICAgfSwKICAgIHVwZGF0ZUdyb3VwczogZnVuY3Rpb24gdXBkYXRlR3JvdXBzKGdyb3VwcykgewogICAgICB0aGlzLmJvYXJkLmdyb3VwcyA9IGdyb3VwczsKICAgICAgdmFyIHR4dCA9ICIiLmNvbmNhdCh0aGlzLnVzZXIuZnVsbE5hbWUsICIgdXBkYXRlZCB0aGUgZ3JvdXBzIik7CiAgICAgIHZhciBuZXdBY3Rpdml0eSA9IGJvYXJkU2VydmljZS5nZXRFbXB0eUFjdGl2aXR5KHR4dCwgdGhpcy5taW5pVXNlcik7CiAgICAgIHRoaXMuYm9hcmQuYWN0aXZpdGllcy5wdXNoKG5ld0FjdGl2aXR5KTsKICAgICAgdGhpcy4kc3RvcmUuZGlzcGF0Y2goewogICAgICAgIHR5cGU6ICdzYXZlQm9hcmQnLAogICAgICAgIGJvYXJkOiB0aGlzLmJvYXJkCiAgICAgIH0pOwogICAgICB0aGlzLiRub3RpZnkoewogICAgICAgIG1lc3NhZ2U6ICdHcm91cHMgdXBkYXRlZCcsCiAgICAgICAgcG9zaXRpb246ICdib3R0b20tbGVmdCcsCiAgICAgICAgZHVyYXRpb246IDIwMDAKICAgICAgfSk7CiAgICAgIHRoaXMuZm9yY2VSZXJlbmRlcigpOwogICAgfQogIH0sCiAgd2F0Y2g6IHsKICAgICckcm91dGUucGFyYW1zLmJvYXJkSWQnOiBmdW5jdGlvbiAkcm91dGVQYXJhbXNCb2FyZElkKCkgewogICAgICB0aGlzLmxvYWRCb2FyZCgpOwogICAgICB0aGlzLmZvcmNlUmVyZW5kZXIoKTsKICAgIH0KICB9LAogIGNyZWF0ZWQ6IGZ1bmN0aW9uIGNyZWF0ZWQoKSB7CiAgICB0aGlzLiRzdG9yZS5kaXNwYXRjaCh7CiAgICAgIHR5cGU6ICdjcmVhdGVQcml2YXRlU29ja2V0JwogICAgfSk7CiAgICB0aGlzLiRzdG9yZS5kaXNwYXRjaCh7CiAgICAgIHR5cGU6ICdsb2FkVXNlcnMnCiAgICB9KTsKICAgIHRoaXMubG9hZEJvYXJkcygpOwogICAgdGhpcy5sb2FkQm9hcmQoKTsKICAgIGV2ZW50QnVzLiRvbigndXBkYXRlR3JvdXAnLCB0aGlzLnVwZGF0ZUdyb3VwKTsKICAgIGV2ZW50QnVzLiRvbignZm9yY2VSZXJlbmRlcicsIHRoaXMuZm9yY2VSZXJlbmRlcik7CiAgfSwKICBkZXN0cm95ZWQ6IGZ1bmN0aW9uIGRlc3Ryb3llZCgpIHt9LAogIGNvbXBvbmVudHM6IHsKICAgIGdyb3VwTGlzdDogZ3JvdXBMaXN0LAogICAgYm9hcmRMaXN0OiBib2FyZExpc3QsCiAgICBib2FyZFNlYXJjaDogYm9hcmRTZWFyY2gsCiAgICBjaGF0QXBwOiBjaGF0QXBwLAogICAgYm9hcmRIZWFkZXI6IGJvYXJkSGVhZGVyLAogICAgdHJlbGxvTW9kZTogdHJlbGxvTW9kZQogIH0KfTs="},{"version":3,"sources":["board-app.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+EA,SAAA,QAAA,QAAA,8BAAA;AACA,OAAA,OAAA,MAAA,mBAAA;AACA,OAAA,SAAA,MAAA,mBAAA;AACA,OAAA,SAAA,MAAA,uBAAA;AACA,SAAA,YAAA,QAAA,0BAAA;AACA,OAAA,WAAA,MAAA,qBAAA;AACA,SAAA,WAAA,QAAA,yBAAA;AACA,OAAA,WAAA,MAAA,0BAAA,C,CACA;;AACA,OAAA,UAAA,MAAA,2BAAA;AACA,eAAA;AACA,EAAA,IAAA,EAAA,WADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,iBAAA,EAAA,IADA;AAEA,MAAA,SAAA,EAAA,KAFA;AAGA,MAAA,cAAA,EAAA,IAHA;AAIA,MAAA,eAAA,EAAA,KAJA;AAKA,MAAA,eAAA,EAAA,IALA;AAMA,MAAA,kBAAA,EAAA,KANA;AAOA,MAAA,YAAA,EAAA;AAPA,KAAA;AASA,GAZA;AAaA,EAAA,QAAA,EAAA;AACA;AACA,IAAA,QAFA,sBAEA;AACA,aAAA,KAAA,MAAA,CAAA,OAAA,CAAA,iBAAA;AACA,KAJA;AAKA,IAAA,WALA,yBAKA;AACA,aAAA,KAAA,MAAA,CAAA,OAAA,CAAA,WAAA;AACA,KAPA;AAQA,IAAA,cARA,4BAQA;AACA,aAAA,KAAA,cAAA,GACA,gCADA,GAEA,iCAFA;AAGA,KAZA;AAaA,IAAA,WAbA,yBAaA;AACA,aAAA,KAAA,iBAAA,GAAA,WAAA,GAAA,WAAA;AACA,KAfA;AAgBA,IAAA,IAhBA,kBAgBA;AACA,aAAA,KAAA,MAAA,CAAA,OAAA,CAAA,IAAA;AACA,KAlBA;AAmBA,IAAA,QAnBA,sBAmBA;AACA,aAAA,KAAA,MAAA,CAAA,OAAA,CAAA,QAAA;AACA,KArBA;AAsBA,IAAA,KAtBA,mBAsBA;AACA,aAAA,KAAA,MAAA,CAAA,OAAA,CAAA,KAAA;AACA,KAxBA;AAyBA,IAAA,MAzBA,oBAyBA;AACA,aAAA,KAAA,MAAA,CAAA,OAAA,CAAA,MAAA;AACA;AA3BA,GAbA;AA0CA,EAAA,OAAA,EAAA;AACA,IAAA,cADA,0BACA,WADA,EACA;AACA,WAAA,MAAA,CAAA,MAAA,CAAA;AAAA,QAAA,IAAA,EAAA,gBAAA;AAAA,QAAA,WAAA,EAAA;AAAA,OAAA;AACA,KAHA;AAIA,IAAA,aAJA,2BAIA;AACA,WAAA,iBAAA,GAAA,CAAA,KAAA,iBAAA;AACA,KANA;AAOA,IAAA,UAPA,wBAOA;AACA,WAAA,cAAA,GAAA,IAAA;AACA,KATA;AAUA,IAAA,gBAVA,8BAUA;AACA,WAAA,cAAA,GAAA,CAAA,KAAA,cAAA;AACA,KAZA;AAaA,IAAA,UAbA,wBAaA;AACA,WAAA,SAAA,GAAA,CAAA,KAAA,SAAA;AACA,KAfA;AAgBA,IAAA,cAhBA,0BAgBA,KAhBA,EAgBA;AACA,MAAA,KAAA,CAAA,EAAA,GAAA,WAAA,CAAA,MAAA,EAAA;AACA,WAAA,KAAA,CAAA,MAAA,CAAA,IAAA,CAAA,KAAA;AACA,UAAA,GAAA,aAAA,KAAA,IAAA,CAAA,QAAA,yCAAA,KAAA,CAAA,IAAA,MAAA;AACA,UAAA,WAAA,GAAA,YAAA,CAAA,gBAAA,CAAA,GAAA,EAAA,KAAA,QAAA,CAAA;AACA,WAAA,KAAA,CAAA,UAAA,CAAA,IAAA,CAAA,WAAA;AACA,WAAA,MAAA,CAAA,QAAA,CAAA;AAAA,QAAA,IAAA,EAAA,WAAA;AAAA,QAAA,KAAA,EAAA,KAAA;AAAA,OAAA;AACA,WAAA,MAAA,CAAA,QAAA,CAAA;AAAA,QAAA,IAAA,EAAA,aAAA;AAAA,QAAA,KAAA,EAAA,KAAA;AAAA,OAAA;AACA,WAAA,aAAA;AACA,KAzBA;AA0BA,IAAA,eA1BA,2BA0BA,EA1BA,EA0BA;AACA,MAAA,EAAA,CAAA,MAAA,CAAA,IAAA;AACA,UAAA,EAAA,CAAA,MAAA,CAAA,SAAA,KAAA,KAAA,KAAA,CAAA,IAAA,EAAA,OAAA,KACA;AACA,aAAA,KAAA,CAAA,IAAA,GAAA,EAAA,CAAA,MAAA,CAAA,SAAA;AACA,YAAA,GAAA,aAAA,KAAA,IAAA,CAAA,QAAA,uBAAA;AACA,YAAA,WAAA,GAAA,YAAA,CAAA,gBAAA,CAAA,GAAA,EAAA,KAAA,QAAA,CAAA;AACA,aAAA,KAAA,CAAA,UAAA,CAAA,IAAA,CAAA,WAAA;AACA,aAAA,MAAA,CAAA,QAAA,CAAA;AAAA,UAAA,IAAA,EAAA,WAAA;AAAA,UAAA,KAAA,EAAA,KAAA;AAAA,SAAA;AACA,aAAA,MAAA,CAAA,QAAA,CAAA;AAAA,UAAA,IAAA,EAAA,aAAA;AAAA,UAAA,KAAA,EAAA,KAAA;AAAA,SAAA;AACA,aAAA,OAAA,CAAA;AACA,UAAA,OAAA,EAAA,oBADA;AAEA,UAAA,QAAA,EAAA,aAFA;AAGA,UAAA,QAAA,EAAA;AAHA,SAAA;AAKA,aAAA,aAAA;AACA;AACA,KA3CA;AA4CA,IAAA,eA5CA,2BA4CA,EA5CA,EA4CA;AACA,MAAA,EAAA,CAAA,MAAA,CAAA,IAAA;AACA,UAAA,EAAA,CAAA,MAAA,CAAA,SAAA,KAAA,KAAA,KAAA,CAAA,WAAA,EAAA,OAAA,KACA;AACA,aAAA,KAAA,CAAA,WAAA,GAAA,EAAA,CAAA,MAAA,CAAA,SAAA;AACA,YAAA,GAAA,aAAA,KAAA,IAAA,CAAA,QAAA,8BAAA;AACA,YAAA,WAAA,GAAA,YAAA,CAAA,gBAAA,CAAA,GAAA,EAAA,KAAA,QAAA,CAAA;AACA,aAAA,KAAA,CAAA,UAAA,CAAA,IAAA,CAAA,WAAA;AACA,aAAA,MAAA,CAAA,QAAA,CAAA;AAAA,UAAA,IAAA,EAAA,WAAA;AAAA,UAAA,KAAA,EAAA,KAAA;AAAA,SAAA;AACA,aAAA,OAAA,CAAA;AACA,UAAA,OAAA,EAAA,2BADA;AAEA,UAAA,QAAA,EAAA,aAFA;AAGA,UAAA,QAAA,EAAA;AAHA,SAAA;AAKA,aAAA,aAAA;AACA;AACA,KA5DA;AA6DA,IAAA,aA7DA,2BA6DA;AACA,WAAA,YAAA,IAAA,CAAA;AACA,KA/DA;AAgEA,IAAA,cAhEA,0BAgEA,IAhEA,EAgEA;AACA,WAAA,KAAA,CAAA,OAAA,CAAA,OAAA,CAAA,IAAA;AACA,UAAA,GAAA,aAAA,KAAA,IAAA,CAAA,QAAA,kBAAA,IAAA,CAAA,QAAA,cAAA;AACA,UAAA,WAAA,GAAA,YAAA,CAAA,gBAAA,CAAA,GAAA,EAAA,KAAA,QAAA,CAAA;AACA,WAAA,KAAA,CAAA,UAAA,CAAA,IAAA,CAAA,WAAA;AACA,WAAA,MAAA,CAAA,QAAA,CAAA;AAAA,QAAA,IAAA,EAAA,WAAA;AAAA,QAAA,KAAA,EAAA,KAAA;AAAA,OAAA;AACA,WAAA,OAAA,CAAA;AACA,QAAA,OAAA,EAAA,2BADA;AAEA,QAAA,QAAA,EAAA,aAFA;AAGA,QAAA,QAAA,EAAA;AAHA,OAAA;AAKA,KA3EA;AA4EA,IAAA,iBA5EA,6BA4EA,MA5EA,EA4EA;AACA,UAAA,GAAA,GAAA,KAAA,KAAA,CAAA,OAAA,CAAA,SAAA,CACA,UAAA,OAAA;AAAA,eAAA,OAAA,CAAA,GAAA,KAAA,MAAA,CAAA,GAAA;AAAA,OADA,CAAA;AAGA,WAAA,KAAA,CAAA,OAAA,CAAA,MAAA,CAAA,GAAA,EAAA,CAAA;AACA,UAAA,GAAA,aAAA,KAAA,IAAA,CAAA,QAAA,sBAAA,MAAA,CAAA,QAAA,gBAAA;AACA,UAAA,WAAA,GAAA,YAAA,CAAA,gBAAA,CAAA,GAAA,EAAA,KAAA,QAAA,CAAA;AACA,WAAA,KAAA,CAAA,UAAA,CAAA,IAAA,CAAA,WAAA;AACA,WAAA,MAAA,CAAA,QAAA,CAAA;AAAA,QAAA,IAAA,EAAA,WAAA;AAAA,QAAA,KAAA,EAAA,KAAA;AAAA,OAAA;AACA,WAAA,OAAA,CAAA;AACA,QAAA,OAAA,EAAA,2BADA;AAEA,QAAA,QAAA,EAAA,aAFA;AAGA,QAAA,QAAA,EAAA;AAHA,OAAA;AAKA,KA1FA;AA2FA,IAAA,SA3FA,qBA2FA,WA3FA,EA2FA;AACA,WAAA,MAAA,CAAA,MAAA,CAAA;AAAA,QAAA,IAAA,EAAA,WAAA;AAAA,QAAA,WAAA,EAAA;AAAA,OAAA;AACA,WAAA,MAAA,CAAA,QAAA,CAAA;AAAA,QAAA,IAAA,EAAA;AAAA,OAAA;AACA,KA9FA;AA+FA,IAAA,eA/FA,2BA+FA,OA/FA,EA+FA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA,gBAAA,KAFA,GAEA,YAAA,CAAA,OAAA,EAFA;;AAAA,sBAGA,KAAA,CAAA,OAAA,CAAA,GAAA,KAAA,KAAA,CAAA,OAHA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA,uBAMA,KAAA,CAAA,QAAA,CACA,mDADA,EAEA,SAFA,EAGA;AACA,kBAAA,iBAAA,EAAA,IADA;AAEA,kBAAA,gBAAA,EAAA,QAFA;AAGA,kBAAA,IAAA,EAAA;AAHA,iBAHA,CANA;;AAAA;AAeA,gBAAA,GAfA,aAeA,KAAA,CAAA,IAAA,CAAA,QAfA;AAgBA,gBAAA,WAhBA,GAgBA,YAAA,CAAA,gBAAA,CAAA,GAAA,EAAA,KAAA,CAAA,QAAA,CAhBA;;AAiBA,gBAAA,KAAA,CAAA,KAAA,CAAA,UAAA,CAAA,IAAA,CAAA,WAAA;;AACA,gBAAA,KAAA,CAAA,MAAA,CAAA,QAAA,CAAA;AAAA,kBAAA,IAAA,EAAA,aAAA;AAAA,kBAAA,OAAA,EAAA;AAAA,iBAAA;;AACA,gBAAA,KAAA,CAAA,MAAA,CAAA,QAAA,CAAA;AACA,kBAAA,IAAA,EAAA,eADA;AAEA,kBAAA,MAAA,EAAA,KAAA,CAAA;AAFA,iBAAA;;AAIA,gBAAA,KAAA,CAAA,OAAA,CAAA;AACA,kBAAA,OAAA,EAAA,eADA;AAEA,kBAAA,QAAA,EAAA,aAFA;AAGA,kBAAA,QAAA,EAAA;AAHA,iBAAA;;AAKA,gBAAA,KAAA,CAAA,QAAA,CAAA;AACA,kBAAA,IAAA,EAAA,SADA;AAEA,kBAAA,OAAA,EAAA;AAFA,iBAAA;;AA5BA;AAAA;;AAAA;AAAA;AAAA;;AAiCA,gBAAA,KAAA,CAAA,QAAA,CAAA;AACA,kBAAA,OAAA,EAAA,IADA;AAEA,kBAAA,SAAA,EAAA,IAFA;AAGA,kBAAA,IAAA,EAAA,OAHA;AAIA,kBAAA,MAAA,EAAA,GAJA;AAKA,kBAAA,OAAA,EAAA;AALA,iBAAA;;AAjCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAyCA,KAxIA;AAyIA,IAAA,UAzIA,wBAyIA;AACA,WAAA,MAAA,CAAA,QAAA,CAAA;AAAA,QAAA,IAAA,EAAA;AAAA,OAAA;AACA,WAAA,aAAA;AACA,KA5IA;AA6IA,IAAA,QA7IA,sBA6IA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAEA,MAAA,CAAA,OAAA,CACA,mCADA,EAEA,eAFA,EAGA;AACA,kBAAA,iBAAA,EAAA,IADA;AAEA,kBAAA,gBAAA,EAAA;AAFA,iBAHA,CAFA;;AAAA;AAEA,gBAAA,GAFA;AAUA,gBAAA,KAVA,GAUA,YAAA,CAAA,aAAA,EAVA;AAWA,gBAAA,KAAA,CAAA,IAAA,GAAA,GAAA,CAAA,KAAA;AACA,gBAAA,KAAA,CAAA,OAAA,GAAA,MAAA,CAAA,QAAA;AACA,gBAAA,KAAA,CAAA,OAAA,CAAA,IAAA,CAAA,MAAA,CAAA,QAAA;AACA,gBAAA,GAdA,aAcA,MAAA,CAAA,QAAA,CAAA,QAdA;AAeA,gBAAA,WAfA,GAeA,YAAA,CAAA,gBAAA,CAAA,GAAA,EAAA,MAAA,CAAA,QAAA,CAfA;;AAgBA,gBAAA,MAAA,CAAA,KAAA,CAAA,UAAA,CAAA,IAAA,CAAA,WAAA;;AACA,gBAAA,MAAA,CAAA,MAAA,CAAA,QAAA,CAAA;AAAA,kBAAA,IAAA,EAAA,WAAA;AAAA,kBAAA,KAAA,EAAA;AAAA,iBAAA;;AACA,gBAAA,MAAA,CAAA,QAAA,CAAA;AACA,kBAAA,IAAA,EAAA,SADA;AAEA,kBAAA,QAAA,EAAA,IAFA;AAGA,kBAAA,OAAA,EAAA,gBAAA,GAAA,CAAA,KAAA,GAAA;AAHA,iBAAA;;AAlBA;AAAA;;AAAA;AAAA;AAAA;;AAwBA,gBAAA,MAAA,CAAA,QAAA,CAAA;AACA,kBAAA,IAAA,EAAA,MADA;AAEA,kBAAA,QAAA,EAAA,IAFA;AAGA,kBAAA,OAAA,EAAA;AAHA,iBAAA;;AAxBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA8BA,KA3KA;AA4KA,IAAA,SA5KA,uBA4KA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAEA,MAAA,CAAA,MAAA,CAAA,QAAA,CAAA;AACA,kBAAA,IAAA,EAAA,WADA;AAEA,kBAAA,OAAA,EAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA;AAFA,iBAAA,CAFA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAOA,gBAAA,OAAA,CAAA,GAAA,CAAA,YAAA;;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA,KArLA;AAsLA,IAAA,QAtLA,sBAsLA;AACA,UAAA,QAAA,GAAA,YAAA,CAAA,aAAA,EAAA;AACA,WAAA,KAAA,CAAA,MAAA,CAAA,IAAA,CAAA,QAAA;AACA,UAAA,GAAA,aAAA,KAAA,IAAA,CAAA,QAAA,4BAAA;AACA,UAAA,WAAA,GAAA,YAAA,CAAA,gBAAA,CAAA,GAAA,EAAA,KAAA,QAAA,CAAA;AACA,WAAA,KAAA,CAAA,UAAA,CAAA,IAAA,CAAA,WAAA;AACA,WAAA,MAAA,CAAA,QAAA,CAAA;AACA,QAAA,IAAA,EAAA,WADA;AAEA,QAAA,KAAA,EAAA,KAAA;AAFA,OAAA;AAIA,WAAA,OAAA,CAAA;AACA,QAAA,OAAA,EAAA,iBADA;AAEA,QAAA,QAAA,EAAA,aAFA;AAGA,QAAA,QAAA,EAAA;AAHA,OAAA;AAKA,WAAA,aAAA;AACA,KAtMA;AAuMA,IAAA,WAvMA,uBAuMA,OAvMA,EAuMA;AACA,UAAA,GAAA,GAAA,KAAA,KAAA,CAAA,MAAA,CAAA,SAAA,CAAA,UAAA,KAAA;AAAA,eAAA,KAAA,CAAA,EAAA,KAAA,OAAA;AAAA,OAAA,CAAA;AACA,UAAA,GAAA,aAAA,KAAA,IAAA,CAAA,QAAA,4BAAA,KAAA,KAAA,CAAA,MAAA,CAAA,GAAA,EAAA,GAAA,CAAA;AACA,WAAA,KAAA,CAAA,MAAA,CAAA,MAAA,CAAA,GAAA,EAAA,CAAA;AACA,UAAA,WAAA,GAAA,YAAA,CAAA,gBAAA,CAAA,GAAA,EAAA,KAAA,QAAA,CAAA;AACA,WAAA,KAAA,CAAA,UAAA,CAAA,IAAA,CAAA,WAAA;AACA,WAAA,MAAA,CAAA,QAAA,CAAA;AACA,QAAA,IAAA,EAAA,WADA;AAEA,QAAA,KAAA,EAAA,KAAA;AAFA,OAAA;AAIA,WAAA,OAAA,CAAA;AACA,QAAA,OAAA,EAAA,eADA;AAEA,QAAA,QAAA,EAAA,aAFA;AAGA,QAAA,QAAA,EAAA;AAHA,OAAA;AAKA,WAAA,aAAA;AACA,KAvNA;AAwNA,IAAA,WAxNA,uBAwNA,YAxNA,EAwNA;AACA,UAAA,GAAA,GAAA,KAAA,KAAA,CAAA,MAAA,CAAA,SAAA,CACA,UAAA,KAAA;AAAA,eAAA,KAAA,CAAA,EAAA,KAAA,YAAA,CAAA,EAAA;AAAA,OADA,CAAA;AAGA,UAAA,GAAA,GAAA,CAAA,EAAA;AACA,WAAA,KAAA,CAAA,MAAA,CAAA,MAAA,CAAA,GAAA,EAAA,CAAA,EAAA,YAAA;AACA,UAAA,GAAA,aAAA,KAAA,IAAA,CAAA,QAAA,4BAAA,YAAA,CAAA,IAAA,CAAA;AACA,UAAA,WAAA,GAAA,YAAA,CAAA,gBAAA,CAAA,GAAA,EAAA,KAAA,QAAA,CAAA;AACA,WAAA,KAAA,CAAA,UAAA,CAAA,IAAA,CAAA,WAAA;AACA,WAAA,MAAA,CAAA,QAAA,CAAA;AACA,QAAA,IAAA,EAAA,WADA;AAEA,QAAA,KAAA,EAAA,KAAA;AAFA,OAAA;AAIA,WAAA,OAAA,CAAA;AACA,QAAA,OAAA,EAAA,eADA;AAEA,QAAA,QAAA,EAAA,aAFA;AAGA,QAAA,QAAA,EAAA;AAHA,OAAA;AAKA,WAAA,aAAA;AACA,KA3OA;AA4OA,IAAA,YA5OA,wBA4OA,MA5OA,EA4OA;AACA,WAAA,KAAA,CAAA,MAAA,GAAA,MAAA;AACA,UAAA,GAAA,aAAA,KAAA,IAAA,CAAA,QAAA,wBAAA;AACA,UAAA,WAAA,GAAA,YAAA,CAAA,gBAAA,CAAA,GAAA,EAAA,KAAA,QAAA,CAAA;AACA,WAAA,KAAA,CAAA,UAAA,CAAA,IAAA,CAAA,WAAA;AACA,WAAA,MAAA,CAAA,QAAA,CAAA;AACA,QAAA,IAAA,EAAA,WADA;AAEA,QAAA,KAAA,EAAA,KAAA;AAFA,OAAA;AAIA,WAAA,OAAA,CAAA;AACA,QAAA,OAAA,EAAA,gBADA;AAEA,QAAA,QAAA,EAAA,aAFA;AAGA,QAAA,QAAA,EAAA;AAHA,OAAA;AAKA,WAAA,aAAA;AACA;AA3PA,GA1CA;AAuSA,EAAA,KAAA,EAAA;AACA,2BADA,iCACA;AACA,WAAA,SAAA;AACA,WAAA,aAAA;AACA;AAJA,GAvSA;AA6SA,EAAA,OA7SA,qBA6SA;AACA,SAAA,MAAA,CAAA,QAAA,CAAA;AACA,MAAA,IAAA,EAAA;AADA,KAAA;AAGA,SAAA,MAAA,CAAA,QAAA,CAAA;AAAA,MAAA,IAAA,EAAA;AAAA,KAAA;AACA,SAAA,UAAA;AACA,SAAA,SAAA;AACA,IAAA,QAAA,CAAA,GAAA,CAAA,aAAA,EAAA,KAAA,WAAA;AACA,IAAA,QAAA,CAAA,GAAA,CAAA,eAAA,EAAA,KAAA,aAAA;AACA,GAtTA;AAuTA,EAAA,SAvTA,uBAuTA,CAAA,CAvTA;AAwTA,EAAA,UAAA,EAAA;AACA,IAAA,SAAA,EAAA,SADA;AAEA,IAAA,SAAA,EAAA,SAFA;AAGA,IAAA,WAAA,EAAA,WAHA;AAIA,IAAA,OAAA,EAAA,OAJA;AAKA,IAAA,WAAA,EAAA,WALA;AAMA,IAAA,UAAA,EAAA;AANA;AAxTA,CAAA","sourcesContent":["<template>\n    <section v-if=\"board\" class=\"board-app flex\">\n        <board-list\n            :expandList=\"expandList\"\n            :isExpanded=\"isListExpanded\"\n            @removeBoard=\"removeCurrBoard\"\n            @addNewBoard=\"addBoard\"\n            :boards=\"boards\"\n            title=\"Boards\">\n            <button\n                slot=\"expand-btn\"\n                @click=\"toggleExpandList\"\n                :class=\"{\n                    'expand-list-btn': true,\n                    notExpanded: !isListExpanded,\n                }\"\n            >\n                <i\n                    :class=\"btnClassExpend\"\n                    v-tooltip.right=\"'Expand/Hide List'\"\n                ></i>\n            </button>\n            <board-search @searchBoard=\"setSearch\" slot=\"search\" />\n        </board-list>\n        ​\n        <div :class=\"['board-app-container width100', darkMode]\">\n            <board-header\n                :updateBoardName=\"updateBoardName\"\n                :updateBoardDesc=\"updateBoardDesc\"\n                :board=\"board\"\n                :addGroup=\"addGroup\"\n                @removeMember=\"removeBoardMember\"\n                @addMember=\"addBoardMember\"\n                :displayMode=\"displayMode\"\n                :forceRerender=\"forceRerender\"\n                @setDisplayMode=\"setDisplayMode\"\n            />\n            <group-list\n                v-if=\"board && displayMode === 'Board'\"\n                :key=\"componentKey\"\n                :groups=\"board.groups\"\n                :boardName=\"board.name\"\n                @deleteGroup=\"deleteGroup\"\n                @updateGroup=\"updateGroup\"\n                @updateGroups=\"updateGroups\"\n                @duplicateGroup=\"duplicateGroup\"\n                @forceRender=\"forceRerender\"\n            />\n            <trello-mode\n                :key=\"componentKey\"\n                @forceRender=\"forceRerender\"\n                v-else\n            ></trello-mode>\n        </div>\n        <div v-if=\"isTaskDetailsHover\" class=\"backdrop-layer\"></div>\n        <!-- <task-details\n      v-if=\"this.$route.params.taskId\"\n      @close=\"isTaskDetailsHover = false\"\n      @mouseover.native=\"isTaskDetailsHover = true\"\n      @mouseleave.native=\"isTaskDetailsHover = false\"\n    /> -->\n        <router-view :class=\"['grow', darkMode]\" />\n        <div\n            v-tooltip.top=\"'Chat Board'\"\n            v-show=\"isChatingBtnShown\"\n            class=\"chat-icon-btn-container flex align-center justify-center\"\n        >\n            <i\n                @click=\"toggleChat\"\n                class=\"fas chat-icon fa-comments relative\"\n            ></i>\n        </div>\n        <chat-app @closeChat=\"toggleChat\" v-if=\"isChating\" />\n    </section>\n    <div v-else class=\"flex justify-center align-center\">\n        <img src=\"@/assets/imgs/loader.gif\" class=\"loader-app\" />\n    </div>\n</template>\n<script>\nimport { eventBus } from '@/services/event-bus.service'\nimport chatApp from '@/cmps/board-chat'\nimport groupList from '@/cmps/group-list'\nimport boardList from '@/cmps/board-list.vue'\nimport { boardService } from '@/services/board.service'\nimport boardSearch from '@/cmps/board-search'\nimport { utilService } from '@/services/util.service'\nimport boardHeader from '../cmps/board-header.vue'\n// import { socketService } from '@/services/socket.service.js'\nimport trelloMode from '@/cmps/Trello/trello-mode'\nexport default {\n  name: 'board-app',\n  data() {\n    return {\n      isChatingBtnShown: true,\n      isChating: false,\n      isListExpanded: true,\n      isMembersShowen: false,\n      currTaskDetails: null,\n      isTaskDetailsHover: false,\n      componentKey: 0\n    }\n  },\n  computed: {\n    // NOT  REMOVE THIS FUNC !!!!!!!!!!\n    darkMode() {\n      return this.$store.getters.getDarkModeToggle\n    },\n    displayMode() {\n      return this.$store.getters.displayMode\n    },\n    btnClassExpend() {\n      return this.isListExpanded\n        ? 'expend-btn fas fa-chevron-left'\n        : 'expend-btn fas fa-chevron-right'\n    },\n    chatControl() {\n      return this.isChatingBtnShown ? 'Hide Chat' : 'Show Chat'\n    },\n    user() {\n      return this.$store.getters.user\n    },\n    miniUser(){\n      return this.$store.getters.miniUser\n    },\n    board() {\n      return this.$store.getters.board\n    },\n    boards() {\n      return this.$store.getters.boards\n    }\n  },\n  methods: {\n    setDisplayMode(displayMode) {\n      this.$store.commit({ type: 'setDisplayMode', displayMode })\n    },\n    toogleChatBtn() {\n      this.isChatingBtnShown = !this.isChatingBtnShown\n    },\n    expandList() {\n      this.isListExpanded = true\n    },\n    toggleExpandList() {\n      this.isListExpanded = !this.isListExpanded\n    },\n    toggleChat() {\n      this.isChating = !this.isChating\n    },\n    duplicateGroup(group) {\n      group.id = utilService.makeId()\n      this.board.groups.push(group)\n      const txt = `${this.user.fullName} duplicated group the group ${group.name} `\n      let newActivity = boardService.getEmptyActivity(txt, this.miniUser)\n      this.board.activities.push(newActivity)\n      this.$store.dispatch({ type: 'saveBoard', board: this.board })\n      this.$store.dispatch({ type: 'updateBoard', board: this.board })\n      this.forceRerender()\n    },\n    updateBoardName(ev) {\n      ev.target.blur()\n      if (ev.target.innerText === this.board.name) return\n      else {\n        this.board.name = ev.target.innerText\n        const txt = `${this.user.fullName} update Board name`\n        let newActivity = boardService.getEmptyActivity(txt, this.miniUser)\n        this.board.activities.push(newActivity)\n        this.$store.dispatch({ type: 'saveBoard', board: this.board })\n        this.$store.dispatch({ type: 'updateBoard', board: this.board })\n        this.$notify({\n          message: 'Board name updated',\n          position: 'bottom-left',\n          duration: 2000\n        })\n        this.forceRerender()\n      }\n    },\n    updateBoardDesc(ev) {\n      ev.target.blur()\n      if (ev.target.innerText === this.board.description) return\n      else {\n        this.board.description = ev.target.innerText\n        const txt = `${this.user.fullName} update Board description`\n        let newActivity = boardService.getEmptyActivity(txt, this.miniUser)\n        this.board.activities.push(newActivity)\n        this.$store.dispatch({ type: 'saveBoard', board: this.board })\n        this.$notify({\n          message: 'Board description updated',\n          position: 'bottom-left',\n          duration: 2000\n        })\n        this.forceRerender()\n      }\n    },\n    forceRerender() {\n      this.componentKey += 1\n    },\n    addBoardMember(user) {\n      this.board.members.unshift(user)\n      const txt = `${this.user.fullName} add ${user.fullName} to Board`\n      let newActivity = boardService.getEmptyActivity(txt, this.miniUser)\n      this.board.activities.push(newActivity)\n      this.$store.dispatch({ type: 'saveBoard', board: this.board })\n      this.$notify({\n        message: 'New member added to board',\n        position: 'bottom-left',\n        duration: 2000\n      })\n    },\n    removeBoardMember(member) {\n      const idx = this.board.members.findIndex(\n        bMember => bMember._id === member._id\n      )\n      this.board.members.splice(idx, 1)\n      const txt = `${this.user.fullName} remove  ${member.fullName} from Board`\n      let newActivity = boardService.getEmptyActivity(txt, this.miniUser)\n      this.board.activities.push(newActivity)\n      this.$store.dispatch({ type: 'saveBoard', board: this.board })\n      this.$notify({\n        message: 'Member removed from board',\n        position: 'bottom-left',\n        duration: 2000\n      })\n    },\n    setSearch(searchBoard) {\n      this.$store.commit({ type: 'setSearch', searchBoard })\n      this.$store.dispatch({ type: 'loadBoards' })\n    },\n    async removeCurrBoard(boardId) {\n      try {\n        const board = boardService.getById()\n        if (board.creator._id !== this.user_id) {\n          return\n        }\n        await this.$confirm(\n          'This will permanently delete the board. Continue?',\n          'Warning',\n          {\n            confirmButtonText: 'OK',\n            cancelButtonText: 'Cancel',\n            type: 'warning'\n          }\n        )\n        const txt = `${this.user.fullName} remove Board`\n        let newActivity = boardService.getEmptyActivity(txt, this.miniUser)\n        this.board.activities.push(newActivity)\n        this.$store.dispatch({ type: 'removeBoard', boardId })\n        this.$store.dispatch({\n          type: 'loadAllBoards',\n          boards: this.boards\n        })\n        this.$notify({\n          message: 'Board deleted',\n          position: 'bottom-left',\n          duration: 2000\n        })\n        this.$message({\n          type: 'success',\n          message: 'Delete completed'\n        })\n      } catch (err) {\n          this.$message({\n            durtion: 2000,\n            showClose: true,\n            type: 'error',\n            offset: 335,\n            message: 'Only the creator can delete the board!'\n          })\n      }\n    },\n    loadBoards() {\n      this.$store.dispatch({ type: 'loadBoards' })\n      this.forceRerender()\n    },\n    async addBoard() {\n      try {\n        const res = await this.$prompt(\n          'Please enter a name to your board',\n          'Add New Board',\n          {\n            confirmButtonText: 'OK',\n            cancelButtonText: 'Cancel'\n          }\n        )\n        const board = boardService.getEmptyBoard()\n        board.name = res.value\n        board.creator = this.miniUser\n        board.members.push(this.miniUser)\n        const txt = `${this.miniUser.fullName} create this Board`\n        let newActivity = boardService.getEmptyActivity(txt, this.miniUser)\n        this.board.activities.push(newActivity)\n        this.$store.dispatch({ type: 'saveBoard', board })\n        this.$message({\n          type: 'success',\n          duration: 2500,\n          message: 'Your Board:' + res.value + ' add '\n        })\n      } catch (err) {\n        this.$message({\n          type: 'info',\n          duration: 2500,\n          message: 'Your action canceled'\n        })\n      }\n    },\n    async loadBoard() {\n      try {\n        await this.$store.dispatch({\n          type: 'loadBoard',\n          boardId: this.$route.params.boardId\n        })\n      } catch (e) {\n        console.log('Erororor!!')\n      }\n    },\n    addGroup() {\n      const newGroup = boardService.getEmptyGroup()\n      this.board.groups.push(newGroup)\n      const txt = `${this.user.fullName} has added a new group!`\n      let newActivity = boardService.getEmptyActivity(txt, this.miniUser)\n      this.board.activities.push(newActivity)\n      this.$store.dispatch({\n        type: 'saveBoard',\n        board: this.board\n      })\n      this.$notify({\n        message: 'New group added',\n        position: 'bottom-left',\n        duration: 2000\n      })\n      this.forceRerender()\n    },\n    deleteGroup(groupId) {\n      const idx = this.board.groups.findIndex(group => group.id === groupId)\n      const txt = `${this.user.fullName} deleted group ${this.board.groups[idx].txt}`\n      this.board.groups.splice(idx, 1)\n      let newActivity = boardService.getEmptyActivity(txt, this.miniUser)\n      this.board.activities.push(newActivity)\n      this.$store.dispatch({\n        type: 'saveBoard',\n        board: this.board\n      })\n      this.$notify({\n        message: 'Group deleted',\n        position: 'bottom-left',\n        duration: 2000\n      })\n      this.forceRerender()\n    },\n    updateGroup(updatedGroup) {\n      const idx = this.board.groups.findIndex(\n        group => group.id === updatedGroup.id\n      )\n      if (idx < 0) return\n      this.board.groups.splice(idx, 1, updatedGroup)\n      const txt = `${this.user.fullName} updated group ${updatedGroup.name}`\n      let newActivity = boardService.getEmptyActivity(txt, this.miniUser)\n      this.board.activities.push(newActivity)\n      this.$store.dispatch({\n        type: 'saveBoard',\n        board: this.board\n      })\n      this.$notify({\n        message: 'Group updated',\n        position: 'bottom-left',\n        duration: 2000\n      })\n      this.forceRerender()\n    },\n    updateGroups(groups) {\n      this.board.groups = groups\n      const txt = `${this.user.fullName} updated the groups`\n      let newActivity = boardService.getEmptyActivity(txt, this.miniUser)\n      this.board.activities.push(newActivity)\n      this.$store.dispatch({\n        type: 'saveBoard',\n        board: this.board\n      })\n      this.$notify({\n        message: 'Groups updated',\n        position: 'bottom-left',\n        duration: 2000\n      })\n      this.forceRerender()\n    }\n  },\n  watch: {\n    '$route.params.boardId'() {\n      this.loadBoard()\n      this.forceRerender()\n    }\n  },\n  created() {\n    this.$store.dispatch({\n      type: 'createPrivateSocket'\n    })\n    this.$store.dispatch({ type: 'loadUsers' })\n    this.loadBoards()\n    this.loadBoard()\n    eventBus.$on('updateGroup', this.updateGroup)\n    eventBus.$on('forceRerender', this.forceRerender)\n  },\n  destroyed() {},\n  components: {\n    groupList,\n    boardList,\n    boardSearch,\n    chatApp,\n    boardHeader,\n    trelloMode\n  }\n}\n</script>"],"sourceRoot":"src/views"}]}