{"remainingRequest":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/babel-loader/lib/index.js!/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/src/cmps/task-posts.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/src/cmps/task-posts.vue","mtime":1606649726600},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IHsgYm9hcmRTZXJ2aWNlIH0gZnJvbSAnLi4vc2VydmljZXMvYm9hcmQuc2VydmljZSc7CmltcG9ydCBBdmF0YXIgZnJvbSAndnVlLWF2YXRhcic7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAndGFzay1wb3N0cycsCiAgcHJvcHM6IHsKICAgIHBvc3RzOiB7CiAgICAgIHR5cGU6IEFycmF5CiAgICB9CiAgfSwKICBjb21wdXRlZDogewogICAgbG9nZ2VkSW5Vc2VyOiBmdW5jdGlvbiBsb2dnZWRJblVzZXIoKSB7CiAgICAgIHJldHVybiB0aGlzLiRzdG9yZS5nZXR0ZXJzLmxvZ2dlZEluVXNlcjsKICAgIH0KICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBuZXdQb3N0OiBudWxsLAogICAgICBjb3BpZWRQb3N0czogbnVsbCwKICAgICAgY29tcG9uZW50S2V5OiAwCiAgICB9OwogIH0sCiAgY3JlYXRlZDogZnVuY3Rpb24gY3JlYXRlZCgpIHsKICAgIHRoaXMuY29waWVkUG9zdHMgPSBKU09OLnBhcnNlKEpTT04uc3RyaW5naWZ5KHRoaXMucG9zdHMpKTsKICB9LAogIG1ldGhvZHM6IHsKICAgIGFkZFBvc3Q6IGZ1bmN0aW9uIGFkZFBvc3QoKSB7CiAgICAgIGlmICghdGhpcy5uZXdQb3N0KSB7CiAgICAgICAgcmV0dXJuOwogICAgICB9CgogICAgICB2YXIgcG9zdCA9IGJvYXJkU2VydmljZS5nZXRFbXB0eVBvc3QoKTsKICAgICAgcG9zdC50eHQgPSB0aGlzLm5ld1Bvc3Q7CiAgICAgIHBvc3QuYnlVc2VyID0gdGhpcy5sb2dnZWRJblVzZXI7CiAgICAgIHRoaXMuY29waWVkUG9zdHMudW5zaGlmdChwb3N0KTsKICAgICAgdGhpcy4kZW1pdCgndXBkYXRlUG9zdHMnLCB0aGlzLmNvcGllZFBvc3RzKTsKICAgICAgdGhpcy5uZXdQb3N0ID0gJyc7CiAgICB9CiAgfSwKICBjb21wb25lbnRzOiB7CiAgICBBdmF0YXI6IEF2YXRhcgogIH0gLy8gd2F0Y2g6IHsKICAvLyAgICAgJyRyb3V0ZS5wYXJhbXMudGFza0lkJygpIHsKICAvLyAgICAgICAgIHRoaXMuY29waWVkUG9zdHMgPSB0aGlzLnBvc3RzCiAgLy8gICAgIH0sCiAgLy8gfSwKCn07"},{"version":3,"sources":["task-posts.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AA4BA,SAAA,YAAA,QAAA,2BAAA;AACA,OAAA,MAAA,MAAA,YAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,YADA;AAEA,EAAA,KAAA,EAAA;AACA,IAAA,KAAA,EAAA;AACA,MAAA,IAAA,EAAA;AADA;AADA,GAFA;AAOA,EAAA,QAAA,EAAA;AACA,IAAA,YADA,0BACA;AACA,aAAA,KAAA,MAAA,CAAA,OAAA,CAAA,YAAA;AACA;AAHA,GAPA;AAYA,EAAA,IAZA,kBAYA;AACA,WAAA;AACA,MAAA,OAAA,EAAA,IADA;AAEA,MAAA,WAAA,EAAA,IAFA;AAGA,MAAA,YAAA,EAAA;AAHA,KAAA;AAKA,GAlBA;AAmBA,EAAA,OAnBA,qBAmBA;AACA,SAAA,WAAA,GAAA,IAAA,CAAA,KAAA,CAAA,IAAA,CAAA,SAAA,CAAA,KAAA,KAAA,CAAA,CAAA;AACA,GArBA;AAsBA,EAAA,OAAA,EAAA;AACA,IAAA,OADA,qBACA;AACA,UAAA,CAAA,KAAA,OAAA,EAAA;AACA;AACA;;AACA,UAAA,IAAA,GAAA,YAAA,CAAA,YAAA,EAAA;AACA,MAAA,IAAA,CAAA,GAAA,GAAA,KAAA,OAAA;AACA,MAAA,IAAA,CAAA,MAAA,GAAA,KAAA,YAAA;AACA,WAAA,WAAA,CAAA,OAAA,CAAA,IAAA;AACA,WAAA,KAAA,CAAA,aAAA,EAAA,KAAA,WAAA;AACA,WAAA,OAAA,GAAA,EAAA;AACA;AAXA,GAtBA;AAmCA,EAAA,UAAA,EAAA;AACA,IAAA,MAAA,EAAA;AADA,GAnCA,CAsCA;AACA;AACA;AACA;AACA;;AA1CA,CAAA","sourcesContent":["<template>\n    <section class=\"task-posts\">\n        <form @submit.prevent=\"addPost\">\n            <el-input type=\"textarea\" v-model=\"newPost\" />\n            <button>Post</button>\n        </form>\n        <div class=\"posts-list flex column align-center\">\n            <div\n                class=\"task-post-card\"\n                v-for=\"post in copiedPosts\"\n                :key=\"post.id\"\n            >\n                <div class=\"user-info-container flex space-between\">\n                    <avatar\n                        class=\"profile-img\"\n                        v-if=\"post.byUser\"\n                        :username=\"post.byUser.fullName\"\n                    ></avatar>\n                    <h2 v-if=\"post.byUser\">{{ post.byUser.fullName }}</h2>\n                </div>\n                <el-divider />\n                <span class=\"task-post-txt\">{{ post.txt }}</span>\n            </div>\n        </div>\n    </section>\n</template>\n\n<script>\nimport { boardService } from '../services/board.service'\nimport Avatar from 'vue-avatar'\n\nexport default {\n    name: 'task-posts',\n    props: {\n        posts: {\n            type: Array,\n        },\n    },\n    computed: {\n        loggedInUser() {\n            return this.$store.getters.loggedInUser\n        },\n    },\n    data() {\n        return {\n            newPost: null,\n            copiedPosts: null,\n            componentKey: 0,\n        }\n    },\n    created() {\n        this.copiedPosts = JSON.parse(JSON.stringify(this.posts))\n    },\n    methods: {\n        addPost() {\n            if (!this.newPost) {\n                return\n            }\n            const post = boardService.getEmptyPost()\n            post.txt = this.newPost\n            post.byUser = this.loggedInUser\n            this.copiedPosts.unshift(post)\n            this.$emit('updatePosts', this.copiedPosts)\n            this.newPost = ''\n        },\n    },\n    components: {\n        Avatar,\n    },\n    // watch: {\n    //     '$route.params.taskId'() {\n    //         this.copiedPosts = this.posts\n    //     },\n    // },\n}\n</script>\n\n<style>\n</style>"],"sourceRoot":"src/cmps"}]}