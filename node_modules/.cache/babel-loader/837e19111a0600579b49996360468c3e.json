{"remainingRequest":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/babel-loader/lib/index.js!/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/src/views/task-details.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/src/views/task-details.vue","mtime":1606776852233},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmluZCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmZpbmQtaW5kZXgiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5zcGxpY2UiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgdGFza1Bvc3RzIGZyb20gJ0AvY21wcy90YXNrLXBvc3RzJzsKaW1wb3J0IHRhc2tBY3Rpdml0aWVzIGZyb20gJ0AvY21wcy90YXNrLWFjdGl2aXRpZXMnOwppbXBvcnQgeyBldmVudEJ1cyB9IGZyb20gJ0Avc2VydmljZXMvZXZlbnQtYnVzLnNlcnZpY2UnOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ3Rhc2stZGV0YWlscycsCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHRhc2s6IG51bGwsCiAgICAgIGdyb3VwSWQ6IG51bGwsCiAgICAgIGNvbXBvbmVudEtleTogMCwKICAgICAgbmV3UG9zdDogbnVsbAogICAgfTsKICB9LAogIGNyZWF0ZWQ6IGZ1bmN0aW9uIGNyZWF0ZWQoKSB7CiAgICB2YXIgdGFza0luZm8gPSB0aGlzLmdldFRhc2tJbmZvQnlJZCgpOwogICAgdGhpcy50YXNrID0gdGFza0luZm8udGFzazsKICAgIHRoaXMuZ3JvdXBJZCA9IHRhc2tJbmZvLmdyb3VwSWQ7CiAgfSwKICBtZXRob2RzOiB7CiAgICBjbG9zZUJ0bjogZnVuY3Rpb24gY2xvc2VCdG4oKSB7CiAgICAgIHRoaXMuJGVtaXQoJ2Nsb3NlJyk7CiAgICAgIHRoaXMuJHJvdXRlci5wdXNoKCIvYm9hcmQvIi5jb25jYXQodGhpcy4kcm91dGUucGFyYW1zLmJvYXJkSWQpKTsKICAgIH0sCiAgICBnZXRUYXNrc1BhdGg6IGZ1bmN0aW9uIGdldFRhc2tzUGF0aCgpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIGNvbnNvbGUubG9nKCdncm91cElkJywgdGhpcy5ncm91cElkKTsKICAgICAgdmFyIGdyb3VwSWR4ID0gdGhpcy5ib2FyZC5ncm91cHMuZmluZEluZGV4KGZ1bmN0aW9uIChncm91cCkgewogICAgICAgIHJldHVybiBncm91cC5pZCA9PT0gX3RoaXMuZ3JvdXBJZDsKICAgICAgfSk7CiAgICAgIHZhciB0YXNrcyA9IHRoaXMuYm9hcmQuZ3JvdXBzW2dyb3VwSWR4XS50YXNrczsKICAgICAgcmV0dXJuIHRhc2tzOwogICAgfSwKICAgIHVwZGF0ZVRhc2tUeHQ6IGZ1bmN0aW9uIHVwZGF0ZVRhc2tUeHQoZXYpIHsKICAgICAgdmFyIF90aGlzMiA9IHRoaXM7CgogICAgICB0aGlzLnRhc2sudHh0ID0gZXYudGFyZ2V0LmlubmVyVGV4dDsKICAgICAgdmFyIHRhc2tzID0gdGhpcy5nZXRUYXNrc1BhdGgoKTsKICAgICAgdmFyIHRhc2tJZHggPSB0YXNrcy5maW5kSW5kZXgoZnVuY3Rpb24gKHRhc2spIHsKICAgICAgICByZXR1cm4gdGFzay5pZCA9PT0gX3RoaXMyLnRhc2suaWQ7CiAgICAgIH0pOwogICAgICB0YXNrcy5zcGxpY2UodGFza0lkeCwgMSwgdGhpcy50YXNrKTsKICAgICAgdGhpcy4kc3RvcmUuZGlzcGF0Y2goewogICAgICAgIHR5cGU6ICdzYXZlQm9hcmQnLAogICAgICAgIGJvYXJkOiB0aGlzLmJvYXJkCiAgICAgIH0pOwogICAgICBldmVudEJ1cy4kZW1pdCgndXBkYXRlVGFza1ByZXZpZXcnLCB0aGlzLnRhc2spOwogICAgfSwKICAgIHVwZGF0ZVBvc3RzOiBmdW5jdGlvbiB1cGRhdGVQb3N0cyhwb3N0cykgewogICAgICB2YXIgX3RoaXMzID0gdGhpczsKCiAgICAgIHZhciB0YXNrcyA9IHRoaXMuZ2V0VGFza3NQYXRoKCk7CiAgICAgIHZhciB0YXNrSWR4ID0gdGFza3MuZmluZEluZGV4KGZ1bmN0aW9uICh0YXNrKSB7CiAgICAgICAgcmV0dXJuIHRhc2suaWQgPT09IF90aGlzMy50YXNrLmlkOwogICAgICB9KTsKICAgICAgdGFza3NbdGFza0lkeF0ucG9zdHMgPSBwb3N0czsKICAgICAgdGhpcy4kc3RvcmUuZGlzcGF0Y2goewogICAgICAgIHR5cGU6ICdzYXZlQm9hcmQnLAogICAgICAgIGJvYXJkOiB0aGlzLmJvYXJkCiAgICAgIH0pOwogICAgICBldmVudEJ1cy4kZW1pdCgndXBkYXRlVGFza1ByZXZpZXcnLCB0aGlzLnRhc2spOwogICAgfSwKICAgIGdldFRhc2tJbmZvQnlJZDogZnVuY3Rpb24gZ2V0VGFza0luZm9CeUlkKCkgewogICAgICB2YXIgdGFza0luZm8gPSB7fTsKICAgICAgdmFyIHRhc2tJZCA9IHRoaXMuJHJvdXRlLnBhcmFtcy50YXNrSWQ7CiAgICAgIHZhciBncm91cCA9IHRoaXMuYm9hcmQuZ3JvdXBzLmZpbmQoZnVuY3Rpb24gKGdyb3VwKSB7CiAgICAgICAgcmV0dXJuIGdyb3VwLnRhc2tzLmZpbmQoZnVuY3Rpb24gKHRhc2spIHsKICAgICAgICAgIHJldHVybiB0YXNrLmlkID09PSB0YXNrSWQ7CiAgICAgICAgfSk7CiAgICAgIH0pOwogICAgICB0YXNrSW5mby50YXNrID0gZ3JvdXAudGFza3MuZmluZChmdW5jdGlvbiAodGFzaykgewogICAgICAgIHJldHVybiB0YXNrLmlkID09PSB0YXNrSWQ7CiAgICAgIH0pOwogICAgICB0YXNrSW5mby5ncm91cElkID0gZ3JvdXAuaWQ7CiAgICAgIHJldHVybiB0YXNrSW5mbzsKICAgIH0sCiAgICBmb3JjZVJlcmVuZGVyOiBmdW5jdGlvbiBmb3JjZVJlcmVuZGVyKCkgewogICAgICB0aGlzLmNvbXBvbmVudEtleSArPSAxOwogICAgfQogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIGJvYXJkOiBmdW5jdGlvbiBib2FyZCgpIHsKICAgICAgcmV0dXJuIHRoaXMuJHN0b3JlLmdldHRlcnMuYm9hcmQ7CiAgICB9LAogICAgbG9nZ2VkSW5Vc2VyOiBmdW5jdGlvbiBsb2dnZWRJblVzZXIoKSB7CiAgICAgIHJldHVybiB0aGlzLiRzdG9yZS5nZXR0ZXJzLmxvZ2dlZEluVXNlcjsKICAgIH0sCiAgICBwb3N0czogZnVuY3Rpb24gcG9zdHMoKSB7CiAgICAgIHJldHVybiB0aGlzLnRhc2sucG9zdHM7CiAgICB9CiAgfSwKICB3YXRjaDogewogICAgJyRyb3V0ZS5wYXJhbXMudGFza0lkJzogZnVuY3Rpb24gJHJvdXRlUGFyYW1zVGFza0lkKCkgewogICAgICB2YXIgdGFza0luZm8gPSB0aGlzLmdldFRhc2tJbmZvQnlJZCgpOwogICAgICB0aGlzLmdyb3VwSWQgPSB0YXNrSW5mby5ncm91cElkOwogICAgICB0aGlzLnRhc2sgPSBKU09OLnBhcnNlKEpTT04uc3RyaW5naWZ5KHRhc2tJbmZvLnRhc2spKTsKICAgICAgY29uc29sZS5sb2coJ3Rhc2snLCB0aGlzLnRhc2spOwogICAgfQogIH0sCiAgY29tcG9uZW50czogewogICAgdGFza1Bvc3RzOiB0YXNrUG9zdHMsCiAgICB0YXNrQWN0aXZpdGllczogdGFza0FjdGl2aXRpZXMKICB9Cn07"},{"version":3,"sources":["task-details.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <section v-if=\"task\" class=\"task-details-section\">\n        <div class=\"top-bar\">\n            <button v-tooltip.top=\"'Close Task Details'\" class=\"cls-btn\"><i @click.stop=\"closeBtn\" class=\"fas fa-times\"></i></button>\n            <h1 class=\"task-title editable\"\n                @blur.stop=\"updateTaskTxt\"\n                @keyup.enter=\"updateTaskTxt\"\n                contenteditable\n            >\n                {{ task.txt }}\n            </h1>\n        </div>\n        <el-tabs>\n            <el-tab-pane label=\"Task Posts\">\n                <task-posts @updatePosts=\"updatePosts\" :posts=\"posts\" />\n            </el-tab-pane>\n            <el-tab-pane label=\"Task Activities\">\n                <task-activities :activities=\"task.activities\" />\n            </el-tab-pane>\n        </el-tabs>\n    </section>\n</template>\n<script>\nimport taskPosts from '@/cmps/task-posts'\nimport taskActivities from '@/cmps/task-activities'\nimport { eventBus } from '@/services/event-bus.service'\nexport default {\n  name: 'task-details',\n  data() {\n    return {\n      task: null,\n      groupId: null,\n      componentKey: 0,\n      newPost: null\n    }\n  },\n  created() {\n    const taskInfo = this.getTaskInfoById()\n    this.task = taskInfo.task\n    this.groupId = taskInfo.groupId\n  },\n  methods: {\n    closeBtn() {\n      this.$emit('close')\n      this.$router.push(`/board/${this.$route.params.boardId}`)\n    },\n    getTasksPath() {\n      console.log('groupId', this.groupId)\n      const groupIdx = this.board.groups.findIndex(\n        group => group.id === this.groupId\n      )\n      const tasks = this.board.groups[groupIdx].tasks\n      return tasks\n    },\n    updateTaskTxt(ev) {\n      this.task.txt = ev.target.innerText\n      const tasks = this.getTasksPath()\n      const taskIdx = tasks.findIndex(task => task.id === this.task.id)\n      tasks.splice(taskIdx, 1, this.task)\n      this.$store.dispatch({\n        type: 'saveBoard',\n        board: this.board\n      })\n      eventBus.$emit('updateTaskPreview', this.task)\n    },\n    updatePosts(posts) {\n      const tasks = this.getTasksPath()\n      const taskIdx = tasks.findIndex(task => task.id === this.task.id)\n      tasks[taskIdx].posts = posts\n      this.$store.dispatch({\n        type: 'saveBoard',\n        board: this.board\n      })\n      eventBus.$emit('updateTaskPreview', this.task)\n    },\n    getTaskInfoById() {\n      let taskInfo = {}\n      const taskId = this.$route.params.taskId\n      const group = this.board.groups.find(group =>\n        group.tasks.find(task => task.id === taskId)\n      )\n      taskInfo.task = group.tasks.find(task => task.id === taskId)\n      taskInfo.groupId = group.id\n      return taskInfo\n    },\n    forceRerender() {\n      this.componentKey += 1\n    }\n  },\n  computed: {\n    board() {\n      return this.$store.getters.board\n    },\n    loggedInUser() {\n      return this.$store.getters.loggedInUser\n    },\n    posts() {\n      return this.task.posts\n    }\n  },\n  watch: {\n    '$route.params.taskId'() {\n      const taskInfo = this.getTaskInfoById()\n      this.groupId = taskInfo.groupId\n      this.task = JSON.parse(JSON.stringify(taskInfo.task))\n      console.log('task', this.task)\n    }\n  },\n  components: {\n    taskPosts,\n    taskActivities\n  }\n}\n</script>\n"],"sourceRoot":"src/views"}]}