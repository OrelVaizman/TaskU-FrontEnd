{"remainingRequest":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/babel-loader/lib/index.js!/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/src/cmps/notifications-modal.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/src/cmps/notifications-modal.vue","mtime":1607268614000},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmluZC1pbmRleCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LnNwbGljZSI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCBub3RpZnNGaWx0ZXJzIGZyb20gJy4vbm90aWZzLWZpbHRlcnMnOwppbXBvcnQgbm90aWZQcmV2aWV3IGZyb20gJy4vbm90aWYtcHJldmlldyc7CmV4cG9ydCBkZWZhdWx0IHsKICBjb21wb25lbnRzOiB7CiAgICBub3RpZnNGaWx0ZXJzOiBub3RpZnNGaWx0ZXJzLAogICAgbm90aWZQcmV2aWV3OiBub3RpZlByZXZpZXcKICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBmaWx0ZXJCeTogbnVsbCwKICAgICAgbm90aWZzQ29weTogbnVsbAogICAgfTsKICB9LAogIGNvbXB1dGVkOiB7CiAgICBib2FyZDogZnVuY3Rpb24gYm9hcmQoKSB7CiAgICAgIHJldHVybiB0aGlzLiRzdG9yZS5nZXR0ZXJzLmJvYXJkOwogICAgfSwKICAgIG5vdGlmc1RvU2hvdzogZnVuY3Rpb24gbm90aWZzVG9TaG93KCkgewogICAgICByZXR1cm4gdGhpcy4kc3RvcmUuZ2V0dGVycy51c2VyLm5vdGlmaWNhdGlvbnM7IC8vIGxldCBub3RpZnMgPSB0aGlzLiRzdG9yZS5nZXR0ZXJzLnVzZXIubm90aWZpY2F0aW9ucwogICAgICAvLyBzd2l0Y2ggKHRoaXMuZmlsdGVyQnkpIHsKICAgICAgLy8gICBjYXNlICd1bnJlYWQnOgogICAgICAvLyAgICAgbm90aWZzID0gbm90aWZzLmZpbHRlcihub3RpZiA9PiBub3RpZi5pc1JlYWQgPT09IGZhbHNlKQogICAgICAvLyAgICAgYnJlYWsKICAgICAgLy8gICBjYXNlICdhc3NpZ25lZCc6CiAgICAgIC8vICAgICBub3RpZnMgPSBub3RpZnMuZmlsdGVyKG5vdGlmID0+IG5vdGlmLnR5cGUgPT09ICdhc3NpZ25lZCcpCiAgICAgIC8vICAgICBicmVhawogICAgICAvLyAgIGNhc2UgJ21lbnRpb25zJzoKICAgICAgLy8gICAgIG5vdGlmcyA9IFtdCiAgICAgIC8vICAgICBicmVhawogICAgICAvLyB9CiAgICAgIC8vIHJldHVybiBub3RpZnMKICAgIH0sCiAgICB1c2VyOiBmdW5jdGlvbiB1c2VyKCkgewogICAgICByZXR1cm4gdGhpcy4kc3RvcmUuZ2V0dGVycy51c2VyOwogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgdXBkYXRlTm90aWY6IGZ1bmN0aW9uIHVwZGF0ZU5vdGlmKG5vdGlmKSB7CiAgICAgIHZhciBpZHggPSB0aGlzLm5vdGlmc0NvcHkuZmluZEluZGV4KGZ1bmN0aW9uIChjdXJyTm90aWYpIHsKICAgICAgICByZXR1cm4gY3Vyck5vdGlmLmlkID09PSBub3RpZi5pZDsKICAgICAgfSk7CiAgICAgIHRoaXMubm90aWZzQ29weS5zcGxpY2UoaWR4LCAxLCBub3RpZik7CiAgICB9LAogICAgZGVsZXRlTm90aWY6IGZ1bmN0aW9uIGRlbGV0ZU5vdGlmKG5vdGlmKSB7CiAgICAgIHZhciBpZHggPSB0aGlzLm5vdGlmc0NvcHkuZmluZEluZGV4KGZ1bmN0aW9uIChjdXJyTm90aWYpIHsKICAgICAgICByZXR1cm4gY3Vyck5vdGlmLmlkID09PSBub3RpZi5pZDsKICAgICAgfSk7CiAgICAgIGNvbnNvbGUubG9nKGlkeCk7CiAgICAgIGNvbnNvbGUubG9nKHRoaXMubm90aWZzQ29weS5sZW5ndGgpOwogICAgICB0aGlzLm5vdGlmc0NvcHkuc3BsaWNlKGlkeCwgMSk7CiAgICAgIGNvbnNvbGUubG9nKHRoaXMubm90aWZzQ29weS5sZW5ndGgpOwogICAgICB0aGlzLnVwZGF0ZU5vdGlmcygpOwogICAgfSwKICAgIHNldEZpbHRlcjogZnVuY3Rpb24gc2V0RmlsdGVyKGZpbHRlclN0cikgewogICAgICB0aGlzLmZpbHRlckJ5ID0gZmlsdGVyU3RyOwogICAgICB0aGlzLnVwZGF0ZU5vdGlmcygpOwogICAgfSwKICAgIHVwZGF0ZU5vdGlmczogZnVuY3Rpb24gdXBkYXRlTm90aWZzKCkgewogICAgICB0aGlzLnVzZXIubm90aWZpY2F0aW9ucyA9IHRoaXMubm90aWZzQ29weTsKICAgICAgdGhpcy4kc3RvcmUuZGlzcGF0Y2goewogICAgICAgIHR5cGU6ICd1cGRhdGVVc2VyJywKICAgICAgICB1c2VyOiB0aGlzLnVzZXIKICAgICAgfSk7CiAgICB9CiAgfSwKICBkZXN0cm95ZWQ6IGZ1bmN0aW9uIGRlc3Ryb3llZCgpIHsKICAgIHRoaXMudXBkYXRlTm90aWZzKCk7CiAgfSwKICBjcmVhdGVkOiBmdW5jdGlvbiBjcmVhdGVkKCkgewogICAgdGhpcy5ub3RpZnNDb3B5ID0gdGhpcy4kc3RvcmUuZ2V0dGVycy51c2VyLm5vdGlmaWNhdGlvbnM7CiAgfQp9Ow=="},{"version":3,"sources":["notifications-modal.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAqBA,OAAA,aAAA,MAAA,kBAAA;AACA,OAAA,YAAA,MAAA,iBAAA;AAEA,eAAA;AACA,EAAA,UAAA,EAAA;AACA,IAAA,aAAA,EAAA,aADA;AAEA,IAAA,YAAA,EAAA;AAFA,GADA;AAKA,EAAA,IALA,kBAKA;AACA,WAAA;AACA,MAAA,QAAA,EAAA,IADA;AAEA,MAAA,UAAA,EAAA;AAFA,KAAA;AAIA,GAVA;AAWA,EAAA,QAAA,EAAA;AACA,IAAA,KADA,mBACA;AACA,aAAA,KAAA,MAAA,CAAA,OAAA,CAAA,KAAA;AACA,KAHA;AAIA,IAAA,YAJA,0BAIA;AACA,aAAA,KAAA,MAAA,CAAA,OAAA,CAAA,IAAA,CAAA,aAAA,CADA,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAnBA;AAoBA,IAAA,IApBA,kBAoBA;AACA,aAAA,KAAA,MAAA,CAAA,OAAA,CAAA,IAAA;AACA;AAtBA,GAXA;AAmCA,EAAA,OAAA,EAAA;AACA,IAAA,WADA,uBACA,KADA,EACA;AACA,UAAA,GAAA,GAAA,KAAA,UAAA,CAAA,SAAA,CACA,UAAA,SAAA;AAAA,eAAA,SAAA,CAAA,EAAA,KAAA,KAAA,CAAA,EAAA;AAAA,OADA,CAAA;AAGA,WAAA,UAAA,CAAA,MAAA,CAAA,GAAA,EAAA,CAAA,EAAA,KAAA;AACA,KANA;AAOA,IAAA,WAPA,uBAOA,KAPA,EAOA;AACA,UAAA,GAAA,GAAA,KAAA,UAAA,CAAA,SAAA,CACA,UAAA,SAAA;AAAA,eAAA,SAAA,CAAA,EAAA,KAAA,KAAA,CAAA,EAAA;AAAA,OADA,CAAA;AAGA,MAAA,OAAA,CAAA,GAAA,CAAA,GAAA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,KAAA,UAAA,CAAA,MAAA;AACA,WAAA,UAAA,CAAA,MAAA,CAAA,GAAA,EAAA,CAAA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,KAAA,UAAA,CAAA,MAAA;AACA,WAAA,YAAA;AACA,KAhBA;AAiBA,IAAA,SAjBA,qBAiBA,SAjBA,EAiBA;AACA,WAAA,QAAA,GAAA,SAAA;AACA,WAAA,YAAA;AACA,KApBA;AAqBA,IAAA,YArBA,0BAqBA;AACA,WAAA,IAAA,CAAA,aAAA,GAAA,KAAA,UAAA;AACA,WAAA,MAAA,CAAA,QAAA,CAAA;AACA,QAAA,IAAA,EAAA,YADA;AAEA,QAAA,IAAA,EAAA,KAAA;AAFA,OAAA;AAIA;AA3BA,GAnCA;AAgEA,EAAA,SAhEA,uBAgEA;AACA,SAAA,YAAA;AACA,GAlEA;AAmEA,EAAA,OAnEA,qBAmEA;AACA,SAAA,UAAA,GAAA,KAAA,MAAA,CAAA,OAAA,CAAA,IAAA,CAAA,aAAA;AACA;AArEA,CAAA","sourcesContent":["<template>\n  <section class=\"notifications-modal\">\n    <header class=\"header-notifs\">\n      <h3 class=\"notifs-title\">Notifications</h3>\n      <notifs-filters :setFilter=\"setFilter\"></notifs-filters>\n    </header>\n    <ul v-if=\"notifsToShow.length\" class=\"notifs-list flex column\">\n      <notif-preview\n        v-for=\"(notif) in notifsToShow\"\n        :key=\"notif.id\"\n        :notif=\"notif\"\n        :user=\"user\"\n        :board=\"board\"\n        @updateNotif=\"updateNotif\"\n        @deleteNotif=\"deleteNotif\"\n      />\n    </ul>\n  </section>\n</template>\n\n<script>\nimport notifsFilters from './notifs-filters'\nimport notifPreview from './notif-preview'\n\nexport default {\n  components: {\n    notifsFilters,\n    notifPreview\n  },\n  data() {\n    return {\n      filterBy: null,\n      notifsCopy: null\n    }\n  },\n  computed: {\n    board() {\n      return this.$store.getters.board\n    },\n    notifsToShow() {\n      return this.$store.getters.user.notifications\n      // let notifs = this.$store.getters.user.notifications\n      // switch (this.filterBy) {\n      //   case 'unread':\n      //     notifs = notifs.filter(notif => notif.isRead === false)\n      //     break\n      //   case 'assigned':\n      //     notifs = notifs.filter(notif => notif.type === 'assigned')\n      //     break\n      //   case 'mentions':\n      //     notifs = []\n      //     break\n      // }\n      // return notifs\n    },\n    user() {\n      return this.$store.getters.user\n    }\n  },\n  methods: {\n    updateNotif(notif) {\n      const idx = this.notifsCopy.findIndex(\n        currNotif => currNotif.id === notif.id\n      )\n      this.notifsCopy.splice(idx, 1, notif)\n    },\n    deleteNotif(notif) {\n      const idx = this.notifsCopy.findIndex(\n        currNotif => currNotif.id === notif.id\n      )\n      console.log(idx)\n      console.log(this.notifsCopy.length)\n      this.notifsCopy.splice(idx, 1)\n      console.log(this.notifsCopy.length)\n      this.updateNotifs()\n    },\n    setFilter(filterStr) {\n      this.filterBy = filterStr\n      this.updateNotifs()\n    },\n    updateNotifs() {\n      this.user.notifications = this.notifsCopy\n      this.$store.dispatch({\n        type: 'updateUser',\n        user: this.user\n      })\n    }\n  },\n  destroyed() {\n    this.updateNotifs()\n  },\n  created() {\n    this.notifsCopy = this.$store.getters.user.notifications\n  }\n}\n</script>\n\n<style></style>\n"],"sourceRoot":"src/cmps"}]}