{"remainingRequest":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/thread-loader/dist/cjs.js!/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/babel-loader/lib/index.js!/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/src/cmps/Trello/task-preview.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/src/cmps/Trello/task-preview.vue","mtime":1607357296421},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IEF2YXRhciBmcm9tICdAL2NtcHMvdXNlci1hdmF0YXIudnVlJzsKaW1wb3J0IHRhc2tEZXRhaWxzIGZyb20gJy4vdGFzay1kZXRhaWxzJzsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICd0YXNrLXByZXZpZXcnLAogIGNvbXBvbmVudHM6IHsKICAgIEF2YXRhcjogQXZhdGFyLAogICAgdGFza0RldGFpbHM6IHRhc2tEZXRhaWxzCiAgfSwKICBwcm9wczogewogICAgdGFzazogT2JqZWN0LAogICAgZ3JvdXA6IE9iamVjdAogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGlzVGFza0RldGFpbHNTaG93bjogZmFsc2UsCiAgICAgIGlzSG92ZXJpbmc6IGZhbHNlCiAgICB9OwogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIHVzZXI6IGZ1bmN0aW9uIHVzZXIoKSB7CiAgICAgIHJldHVybiB0aGlzLiRzdG9yZS5nZXR0ZXJzLnVzZXI7CiAgICB9CiAgfSwKICBtZXRob2RzOiB7CiAgICBoaWRlQnRuczogZnVuY3Rpb24gaGlkZUJ0bnMoKSB7CiAgICAgIHRoaXMuaXNIb3ZlcmluZyA9IGZhbHNlOwogICAgfSwKICAgIHNob3dCdG5zOiBmdW5jdGlvbiBzaG93QnRucygpIHsKICAgICAgdGhpcy5pc0hvdmVyaW5nID0gdHJ1ZTsKICAgIH0sCiAgICBkZWxldGVUYXNrOiBmdW5jdGlvbiBkZWxldGVUYXNrKCkgewogICAgICB0aGlzLiRlbWl0KCdkZWxldGVUYXNrJywgdGhpcy50YXNrQ29weSk7CiAgICB9LAogICAgdXBkYXRlVGFza1R4dDogZnVuY3Rpb24gdXBkYXRlVGFza1R4dChldikgewogICAgICBldi50YXJnZXQuYmx1cigpOwogICAgICBpZiAoZXYudGFyZ2V0LmlubmVyVGV4dCA9PT0gdGhpcy50YXNrQ29weS50eHQpIHJldHVybjtlbHNlIHsKICAgICAgICB0aGlzLnRhc2tDb3B5LnR4dCA9IGV2LnRhcmdldC5pbm5lclRleHQ7CiAgICAgICAgdGhpcy4kbm90aWZ5KHsKICAgICAgICAgIG1lc3NhZ2U6ICdUYXNrIHR4dCB1cGRhdGVkJywKICAgICAgICAgIHBvc2l0aW9uOiAnYm90dG9tLWxlZnQnLAogICAgICAgICAgZHVyYXRpb246IDIwMDAKICAgICAgICB9KTsKICAgICAgICB0aGlzLiRlbWl0KCd1cGRhdGVUYXNrJywgdGhpcy50YXNrQ29weSk7CiAgICAgIH0KICAgIH0sCiAgICBvcGVuVGFza0RldGFpbHM6IGZ1bmN0aW9uIG9wZW5UYXNrRGV0YWlscygpIHsKICAgICAgdGhpcy5pc1Rhc2tEZXRhaWxzU2hvd24gPSB0cnVlOwogICAgfQogIH0sCiAgY3JlYXRlZDogZnVuY3Rpb24gY3JlYXRlZCgpIHsKICAgIHRoaXMudGFza0NvcHkgPSB0aGlzLnRhc2s7CiAgfQp9Ow=="},{"version":3,"sources":["task-preview.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyCA,OAAA,MAAA,MAAA,wBAAA;AACA,OAAA,WAAA,MAAA,gBAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,cADA;AAEA,EAAA,UAAA,EAAA;AACA,IAAA,MAAA,EAAA,MADA;AAEA,IAAA,WAAA,EAAA;AAFA,GAFA;AAMA,EAAA,KAAA,EAAA;AACA,IAAA,IAAA,EAAA,MADA;AAEA,IAAA,KAAA,EAAA;AAFA,GANA;AAUA,EAAA,IAVA,kBAUA;AACA,WAAA;AACA,MAAA,kBAAA,EAAA,KADA;AAEA,MAAA,UAAA,EAAA;AAFA,KAAA;AAIA,GAfA;AAgBA,EAAA,QAAA,EAAA;AACA,IAAA,IADA,kBACA;AACA,aAAA,KAAA,MAAA,CAAA,OAAA,CAAA,IAAA;AACA;AAHA,GAhBA;AAqBA,EAAA,OAAA,EAAA;AACA,IAAA,QADA,sBACA;AACA,WAAA,UAAA,GAAA,KAAA;AACA,KAHA;AAIA,IAAA,QAJA,sBAIA;AACA,WAAA,UAAA,GAAA,IAAA;AACA,KANA;AAOA,IAAA,UAPA,wBAOA;AACA,WAAA,KAAA,CAAA,YAAA,EAAA,KAAA,QAAA;AACA,KATA;AAUA,IAAA,aAVA,yBAUA,EAVA,EAUA;AACA,MAAA,EAAA,CAAA,MAAA,CAAA,IAAA;AACA,UAAA,EAAA,CAAA,MAAA,CAAA,SAAA,KAAA,KAAA,QAAA,CAAA,GAAA,EAAA,OAAA,KACA;AACA,aAAA,QAAA,CAAA,GAAA,GAAA,EAAA,CAAA,MAAA,CAAA,SAAA;AACA,aAAA,OAAA,CAAA;AACA,UAAA,OAAA,EAAA,kBADA;AAEA,UAAA,QAAA,EAAA,aAFA;AAGA,UAAA,QAAA,EAAA;AAHA,SAAA;AAKA,aAAA,KAAA,CAAA,YAAA,EAAA,KAAA,QAAA;AACA;AACA,KAtBA;AAuBA,IAAA,eAvBA,6BAuBA;AACA,WAAA,kBAAA,GAAA,IAAA;AACA;AAzBA,GArBA;AAgDA,EAAA,OAhDA,qBAgDA;AACA,SAAA,QAAA,GAAA,KAAA,IAAA;AACA;AAlDA,CAAA","sourcesContent":["<template>\n  <li\n    class=\"task-preview-card flex\"\n    @mouseover=\"showBtns\"\n    @mouseleave=\"hideBtns\"\n  >\n    <div class=\"task-preivew-header flex space-between relative width100\">\n      <div class=\"task-txt\">\n        <span\n          class=\"editable txt-edit\"\n          spellcheck=\"false\"\n          @blur=\"updateTaskTxt\"\n          @keydown.enter=\"updateTaskTxt\"\n          contenteditable\n          >{{ taskCopy.txt }}</span\n        >\n      </div>\n    </div>\n    <div\n      class=\"btns-control flex column space-between align-center\"\n      v-if=\"isHovering\"\n     \n    >\n      <avatar :user=\"user\" :size=\"20\" />\n      <button class=\"delete-btn\" @click=\"deleteTask\">\n        <i class=\"fas fa-trash delete-icon \"></i>\n      </button>\n      <button class=\"details-btn\" @click.stop=\"openTaskDetails\">\n        <i class=\"fas fa-file-alt details-icon\"></i>\n      </button>\n    </div>\n    <task-details\n      :task=\"taskCopy\"\n      :group=\"group\"\n      v-if=\"isTaskDetailsShown\"\n      :isTaskDetailsShown=\"isTaskDetailsShown\"\n    />\n  </li>\n</template>\n\n<script>\nimport Avatar from '@/cmps/user-avatar.vue'\nimport taskDetails from './task-details'\n\nexport default {\n  name: 'task-preview',\n  components: {\n    Avatar,\n    taskDetails\n  },\n  props: {\n    task: Object,\n    group: Object\n  },\n  data() {\n    return {\n      isTaskDetailsShown: false,\n      isHovering: false\n    }\n  },\n  computed: {\n    user() {\n      return this.$store.getters.user\n    }\n  },\n  methods: {\n    hideBtns() {\n      this.isHovering = false\n    },\n    showBtns() {\n      this.isHovering = true\n    },\n    deleteTask() {\n      this.$emit('deleteTask', this.taskCopy)\n    },\n    updateTaskTxt(ev) {\n      ev.target.blur()\n      if (ev.target.innerText === this.taskCopy.txt) return\n      else {\n        this.taskCopy.txt = ev.target.innerText\n        this.$notify({\n          message: 'Task txt updated',\n          position: 'bottom-left',\n          duration: 2000\n        })\n        this.$emit('updateTask', this.taskCopy)\n      }\n    },\n    openTaskDetails() {\n      this.isTaskDetailsShown = true\n    }\n  },\n  created() {\n    this.taskCopy = this.task\n  }\n}\n</script>\n"],"sourceRoot":"src/cmps/Trello"}]}