{"remainingRequest":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/babel-loader/lib/index.js!/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/eslint-loader/index.js??ref--13-0!/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/src/modules/socket.store.js","dependencies":[{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/src/modules/socket.store.js","mtime":1609778254058},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgc29ja2V0U2VydmljZSB9IGZyb20gJy4uL3NlcnZpY2VzL3NvY2tldC5zZXJ2aWNlJzsKaW1wb3J0IHN0b3JlIGZyb20gJy4uL3N0b3JlL2luZGV4JzsKaW1wb3J0IHsgZXZlbnRCdXMgfSBmcm9tICcuLi9zZXJ2aWNlcy9ldmVudC1idXMuc2VydmljZSc7CnNvY2tldFNlcnZpY2Uub24oJ3VwZGF0ZWQgYm9hcmQnLCBmdW5jdGlvbiAoYm9hcmQpIHsKICBzdG9yZS5jb21taXQoewogICAgdHlwZTogJ3NldEJvYXJkJywKICAgIGJvYXJkOiBib2FyZAogIH0pOwp9KTsKc29ja2V0U2VydmljZS5vbignbG9hZCBib2FyZHMnLCBmdW5jdGlvbiAoYm9hcmRzKSB7CiAgc3RvcmUuY29tbWl0KHsKICAgIHR5cGU6ICdzZXRCb2FyZHMnLAogICAgYm9hcmRzOiBib2FyZHMKICB9KTsKfSk7CnNvY2tldFNlcnZpY2Uub24oJ2luc2VydFVzZXJOb3RpZicsIGZ1bmN0aW9uIChub3RpZikgewogIHN0b3JlLmNvbW1pdCh7CiAgICB0eXBlOiAnaW5zZXJ0VXNlck5vdGlmJywKICAgIG5vdGlmOiBub3RpZgogIH0pOwp9KTsKc29ja2V0U2VydmljZS5vbigndXBkYXRlIGJvYXJkJywgZnVuY3Rpb24gKGJvYXJkKSB7CiAgc3RvcmUuY29tbWl0KHsKICAgIHR5cGU6ICdzZXRCb2FyZEJ5SWQnLAogICAgYm9hcmQ6IGJvYXJkCiAgfSk7CiAgZXZlbnRCdXMuJGVtaXQoJ2ZvcmNlUmVyZW5kZXInKTsKfSk7CmV4cG9ydCB2YXIgc29ja2V0U3RvcmUgPSB7CiAgc3RhdGU6IHt9LAogIGdldHRlcnM6IHt9LAogIG11dGF0aW9uczoge30sCiAgYWN0aW9uczogewogICAgLy8gc2V0dXBTb2NrZXRzKCkgewogICAgLy8gICAgIHNvY2tldFNlcnZpY2Uuc2V0dXAoKQogICAgLy8gfSwKICAgIHVwZGF0ZUJvYXJkOiBmdW5jdGlvbiB1cGRhdGVCb2FyZChjb250ZXh0LCBfcmVmKSB7CiAgICAgIHZhciBib2FyZCA9IF9yZWYuYm9hcmQ7CiAgICAgIHNvY2tldFNlcnZpY2UuZW1pdCgndXBkYXRlIGJvYXJkJywgYm9hcmQpOwogICAgfSwKICAgIGxvYWRBbGxCb2FyZHM6IGZ1bmN0aW9uIGxvYWRBbGxCb2FyZHMoKSB7CiAgICAgIHNvY2tldFNlcnZpY2UuZW1pdCgnbG9hZCBib2FyZHMnKTsKICAgIH0sCiAgICB0dXJuT2ZmU29ja2V0OiBmdW5jdGlvbiB0dXJuT2ZmU29ja2V0KCkgewogICAgICBzb2NrZXRTZXJ2aWNlLnRlcm1pbmF0ZSgpOwogICAgfSwKICAgIGNyZWF0ZVByaXZhdGVTb2NrZXQ6IGZ1bmN0aW9uIGNyZWF0ZVByaXZhdGVTb2NrZXQoY29udGV4dCkgewogICAgICB2YXIgdXNlcklkID0gY29udGV4dC5nZXR0ZXJzLnVzZXIuX2lkOwogICAgICBzb2NrZXRTZXJ2aWNlLmVtaXQoJ2NyZWF0ZVByaXZhdGVTb2NrZXQnLCB1c2VySWQpOwogICAgfSwKICAgIGRlbGV0ZVByaXZhdGVTb2NrZXQ6IGZ1bmN0aW9uIGRlbGV0ZVByaXZhdGVTb2NrZXQoY29udGV4dCkgewogICAgICB2YXIgdXNlcklkID0gY29udGV4dC5nZXR0ZXJzLnVzZXIuX2lkOwogICAgICBzb2NrZXRTZXJ2aWNlLmVtaXQoJ2RlbGV0ZVByaXZhdGVTb2NrZXQnLCB1c2VySWQpOwogICAgfQogIH0KfTs="},{"version":3,"sources":["/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/src/modules/socket.store.js"],"names":["socketService","store","eventBus","on","board","commit","type","boards","notif","$emit","socketStore","state","getters","mutations","actions","updateBoard","context","emit","loadAllBoards","turnOffSocket","terminate","createPrivateSocket","userId","user","_id","deletePrivateSocket"],"mappings":"AAAA,SAASA,aAAT,QAA8B,4BAA9B;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,SAASC,QAAT,QAAyB,+BAAzB;AAEAF,aAAa,CAACG,EAAd,CAAiB,eAAjB,EAAkC,UAAAC,KAAK,EAAI;AACvCH,EAAAA,KAAK,CAACI,MAAN,CAAa;AACTC,IAAAA,IAAI,EAAE,UADG;AAETF,IAAAA,KAAK,EAALA;AAFS,GAAb;AAIH,CALD;AAMAJ,aAAa,CAACG,EAAd,CAAiB,aAAjB,EAAgC,UAAAI,MAAM,EAAI;AACtCN,EAAAA,KAAK,CAACI,MAAN,CAAa;AACTC,IAAAA,IAAI,EAAE,WADG;AAETC,IAAAA,MAAM,EAANA;AAFS,GAAb;AAIH,CALD;AAMAP,aAAa,CAACG,EAAd,CAAiB,iBAAjB,EAAoC,UAACK,KAAD,EAAW;AAC3CP,EAAAA,KAAK,CAACI,MAAN,CAAa;AAAEC,IAAAA,IAAI,EAAE,iBAAR;AAA2BE,IAAAA,KAAK,EAALA;AAA3B,GAAb;AACH,CAFD;AAIAR,aAAa,CAACG,EAAd,CAAiB,cAAjB,EAAiC,UAACC,KAAD,EAAW;AACxCH,EAAAA,KAAK,CAACI,MAAN,CAAa;AAAEC,IAAAA,IAAI,EAAE,cAAR;AAAwBF,IAAAA,KAAK,EAALA;AAAxB,GAAb;AACAF,EAAAA,QAAQ,CAACO,KAAT,CAAe,eAAf;AACH,CAHD;AAKA,OAAO,IAAMC,WAAW,GAAG;AACvBC,EAAAA,KAAK,EAAE,EADgB;AAGvBC,EAAAA,OAAO,EAAE,EAHc;AAKvBC,EAAAA,SAAS,EAAE,EALY;AAOvBC,EAAAA,OAAO,EAAE;AACL;AACA;AACA;AACAC,IAAAA,WAJK,uBAIOC,OAJP,QAI2B;AAAA,UAATZ,KAAS,QAATA,KAAS;AAC5BJ,MAAAA,aAAa,CAACiB,IAAd,CAAmB,cAAnB,EAAmCb,KAAnC;AACH,KANI;AAOLc,IAAAA,aAPK,2BAOW;AACZlB,MAAAA,aAAa,CAACiB,IAAd,CAAmB,aAAnB;AACH,KATI;AAULE,IAAAA,aAVK,2BAUW;AACZnB,MAAAA,aAAa,CAACoB,SAAd;AACH,KAZI;AAaLC,IAAAA,mBAbK,+BAaeL,OAbf,EAawB;AACzB,UAAIM,MAAM,GAAGN,OAAO,CAACJ,OAAR,CAAgBW,IAAhB,CAAqBC,GAAlC;AACAxB,MAAAA,aAAa,CAACiB,IAAd,CAAmB,qBAAnB,EAA0CK,MAA1C;AACH,KAhBI;AAiBLG,IAAAA,mBAjBK,+BAiBeT,OAjBf,EAiBwB;AACzB,UAAIM,MAAM,GAAGN,OAAO,CAACJ,OAAR,CAAgBW,IAAhB,CAAqBC,GAAlC;AACAxB,MAAAA,aAAa,CAACiB,IAAd,CAAmB,qBAAnB,EAA0CK,MAA1C;AACH;AApBI;AAPc,CAApB","sourcesContent":["import { socketService } from '../services/socket.service'\r\nimport store from '../store/index'\r\nimport { eventBus } from '../services/event-bus.service'\r\n\r\nsocketService.on('updated board', board => {\r\n    store.commit({\r\n        type: 'setBoard',\r\n        board\r\n    })\r\n})\r\nsocketService.on('load boards', boards => {\r\n    store.commit({\r\n        type: 'setBoards',\r\n        boards\r\n    })\r\n})\r\nsocketService.on('insertUserNotif', (notif) => {\r\n    store.commit({ type: 'insertUserNotif', notif })\r\n})\r\n\r\nsocketService.on('update board', (board) => {\r\n    store.commit({ type: 'setBoardById', board })\r\n    eventBus.$emit('forceRerender')\r\n})\r\n\r\nexport const socketStore = {\r\n    state: {\r\n    },\r\n    getters: {\r\n    },\r\n    mutations: {\r\n    },\r\n    actions: {\r\n        // setupSockets() {\r\n        //     socketService.setup()\r\n        // },\r\n        updateBoard(context, { board }) {\r\n            socketService.emit('update board', board)\r\n        },\r\n        loadAllBoards() {\r\n            socketService.emit('load boards')\r\n        },\r\n        turnOffSocket() {\r\n            socketService.terminate();\r\n        },\r\n        createPrivateSocket(context) {\r\n            let userId = context.getters.user._id\r\n            socketService.emit('createPrivateSocket', userId)\r\n        },\r\n        deletePrivateSocket(context) {\r\n            let userId = context.getters.user._id\r\n            socketService.emit('deletePrivateSocket', userId)\r\n        },\r\n    }\r\n}"]}]}