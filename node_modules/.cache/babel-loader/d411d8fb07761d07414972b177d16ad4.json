{"remainingRequest":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/babel-loader/lib/index.js!/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/src/cmps/task-list.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/src/cmps/task-list.vue","mtime":1606776852215},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmluZC1pbmRleCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LnNwbGljZSI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCB0YXNrUHJldmlldyBmcm9tICcuL3Rhc2stcHJldmlldyc7CmltcG9ydCB7IGJvYXJkU2VydmljZSB9IGZyb20gJ0Avc2VydmljZXMvYm9hcmQuc2VydmljZSc7CmltcG9ydCBkcmFnZ2FibGUgZnJvbSAndnVlZHJhZ2dhYmxlJzsKaW1wb3J0IHsgZXZlbnRCdXMgfSBmcm9tICdAL3NlcnZpY2VzL2V2ZW50LWJ1cy5zZXJ2aWNlJzsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICd0YXNrLWxpc3QnLAogIHByb3BzOiB7CiAgICB0YXNrczogQXJyYXksCiAgICBncm91cElkOiBTdHJpbmcsCiAgICB0YXNrQ29sb3I6IFN0cmluZwogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHR4dDogJycsCiAgICAgIGlzQWRkQnRuU2hvd2VuOiBmYWxzZSwKICAgICAgY2xvbmVkVGFza3M6IG51bGwKICAgIH07CiAgfSwKICBjb21wdXRlZDogewogICAgYm9hcmQ6IGZ1bmN0aW9uIGJvYXJkKCkgewogICAgICByZXR1cm4gdGhpcy4kc3RvcmUuZ2V0dGVycy5ib2FyZDsKICAgIH0sCiAgICBsb2dnZWRJblVzZXI6IGZ1bmN0aW9uIGxvZ2dlZEluVXNlcigpIHsKICAgICAgcmV0dXJuIHRoaXMuJHN0b3JlLmdldHRlcnMubG9nZ2VkSW5Vc2VyOwogICAgfSwKICAgIHRhc2tCZ2M6IGZ1bmN0aW9uIHRhc2tCZ2MoKSB7CiAgICAgIHJldHVybiB7CiAgICAgICAgYmFja2dyb3VuZENvbG9yOiB0aGlzLnRhc2tDb2xvcgogICAgICB9OwogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgYWRkRW1wdHlUYXNrOiBmdW5jdGlvbiBhZGRFbXB0eVRhc2soZ3JvdXBJZCkgewogICAgICBpZiAodGhpcy5ncm91cElkICE9PSBncm91cElkKSByZXR1cm47CiAgICAgIHZhciBuZXdUYXNrID0gYm9hcmRTZXJ2aWNlLmdldEVtcHR5VGFzaygpOwogICAgICB2YXIgZ3JvdXBJZHggPSB0aGlzLmJvYXJkLmdyb3Vwcy5maW5kSW5kZXgoZnVuY3Rpb24gKGdyb3VwKSB7CiAgICAgICAgcmV0dXJuIGdyb3VwLmlkID09PSBncm91cElkOwogICAgICB9KTsKICAgICAgdGhpcy5ib2FyZC5ncm91cHNbZ3JvdXBJZHhdLnRhc2tzLnB1c2gobmV3VGFzayk7CiAgICAgIHRoaXMuJHN0b3JlLmRpc3BhdGNoKHsKICAgICAgICB0eXBlOiAnc2F2ZUJvYXJkJywKICAgICAgICBib2FyZDogdGhpcy5ib2FyZAogICAgICB9KTsKICAgICAgdGhpcy4kZW1pdCgnZm9yY2VSZW5kZXInKTsKICAgIH0sCiAgICBzaG93QWRkQnRuOiBmdW5jdGlvbiBzaG93QWRkQnRuKCkgewogICAgICB0aGlzLmlzQWRkQnRuU2hvd2VuID0gdHJ1ZTsKICAgIH0sCiAgICBnZXRHcm91cEJ5SWQ6IGZ1bmN0aW9uIGdldEdyb3VwQnlJZCgpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIHZhciBpZHggPSB0aGlzLmJvYXJkLmdyb3Vwcy5maW5kSW5kZXgoZnVuY3Rpb24gKGdyb3VwKSB7CiAgICAgICAgcmV0dXJuIGdyb3VwLmlkID09PSBfdGhpcy5ncm91cElkOwogICAgICB9KTsKICAgICAgcmV0dXJuIHRoaXMuYm9hcmQuZ3JvdXBzW2lkeF07CiAgICB9LAogICAgYWRkVGFzazogZnVuY3Rpb24gYWRkVGFzaygpIHsKICAgICAgdmFyIG5ld1Rhc2sgPSBib2FyZFNlcnZpY2UuZ2V0RW1wdHlUYXNrKCk7CiAgICAgIG5ld1Rhc2sudHh0ID0gdGhpcy50eHQ7CiAgICAgIHZhciB0eHQgPSAiVGFzayAnIi5jb25jYXQobmV3VGFzay50eHQsICInIGFkZGVkIik7CiAgICAgIHZhciBuZXdBY3Rpdml0eSA9IGJvYXJkU2VydmljZS5nZXRFbXB0eUFjdGl2aXR5KHR4dCwgdGhpcy5sb2dnZWRJblVzZXIpOwogICAgICBuZXdUYXNrLmFjdGl2aXRpZXMucHVzaChuZXdBY3Rpdml0eSk7CiAgICAgIHZhciBncm91cCA9IHRoaXMuZ2V0R3JvdXBCeUlkKCk7CiAgICAgIGdyb3VwLnRhc2tzLnB1c2gobmV3VGFzayk7CiAgICAgIHRoaXMuJHN0b3JlLmRpc3BhdGNoKHsKICAgICAgICB0eXBlOiAnc2F2ZUJvYXJkJywKICAgICAgICBib2FyZDogdGhpcy5ib2FyZAogICAgICB9KTsKICAgICAgdGhpcy50eHQgPSAnJzsKICAgICAgdGhpcy5pc0FkZEJ0blNob3dlbiA9IGZhbHNlOwogICAgICB0aGlzLiRlbWl0KCdmb3JjZVJlbmRlcicpOwogICAgfSwKICAgIGRlbGV0ZVRhc2s6IGZ1bmN0aW9uIGRlbGV0ZVRhc2sodGFza0lkKSB7CiAgICAgIHZhciBncm91cCA9IHRoaXMuZ2V0R3JvdXBCeUlkKCk7CiAgICAgIHZhciB0YXNrSWR4ID0gZ3JvdXAudGFza3MuZmluZEluZGV4KGZ1bmN0aW9uICh0YXNrKSB7CiAgICAgICAgcmV0dXJuIHRhc2suaWQgPT09IHRhc2tJZDsKICAgICAgfSk7CiAgICAgIGdyb3VwLnRhc2tzLnNwbGljZSh0YXNrSWR4LCAxKTsKICAgICAgdGhpcy4kc3RvcmUuZGlzcGF0Y2goewogICAgICAgIHR5cGU6ICdzYXZlQm9hcmQnLAogICAgICAgIGJvYXJkOiB0aGlzLmJvYXJkCiAgICAgIH0pOwogICAgICB0aGlzLiRlbWl0KCdmb3JjZVJlbmRlcicpOwogICAgfSwKICAgIHVwZGF0ZVRhc2s6IGZ1bmN0aW9uIHVwZGF0ZVRhc2sobmV3VGFzaykgewogICAgICB2YXIgZ3JvdXAgPSB0aGlzLmdldEdyb3VwQnlJZCgpOwogICAgICB2YXIgdGFza0lkeCA9IGdyb3VwLnRhc2tzLmZpbmRJbmRleChmdW5jdGlvbiAodGFzaykgewogICAgICAgIHJldHVybiB0YXNrLmlkID09PSBuZXdUYXNrLmlkOwogICAgICB9KTsKICAgICAgZ3JvdXAudGFza3Muc3BsaWNlKHRhc2tJZHgsIDEsIG5ld1Rhc2spOwogICAgICB0aGlzLiRzdG9yZS5kaXNwYXRjaCh7CiAgICAgICAgdHlwZTogJ3NhdmVCb2FyZCcsCiAgICAgICAgYm9hcmQ6IHRoaXMuYm9hcmQKICAgICAgfSk7CiAgICAgIHRoaXMuJGVtaXQoJ2ZvcmNlUmVuZGVyJyk7CiAgICB9LAogICAgdXBkYXRlVGFza3M6IGZ1bmN0aW9uIHVwZGF0ZVRhc2tzKCkgewogICAgICB2YXIgZ3JvdXAgPSB0aGlzLmdldEdyb3VwQnlJZCgpOwogICAgICBjb25zb2xlLmxvZygnZ3JvdXA6JywgZ3JvdXApOwogICAgICBjb25zb2xlLmxvZygnY2xvbmVkVGFza3M6JywgdGhpcy5jbG9uZWRUYXNrcyk7CiAgICAgIGdyb3VwLnRhc2tzID0gdGhpcy5jbG9uZWRUYXNrczsKICAgICAgdGhpcy4kc3RvcmUuZGlzcGF0Y2goewogICAgICAgIHR5cGU6ICdzYXZlQm9hcmQnLAogICAgICAgIGJvYXJkOiB0aGlzLmJvYXJkCiAgICAgIH0pOwogICAgICB0aGlzLiRlbWl0KCdmb3JjZVJlbmRlcicpOwogICAgfQogIH0sCiAgY29tcG9uZW50czogewogICAgdGFza1ByZXZpZXc6IHRhc2tQcmV2aWV3LAogICAgZHJhZ2dhYmxlOiBkcmFnZ2FibGUKICB9LAogIGNyZWF0ZWQ6IGZ1bmN0aW9uIGNyZWF0ZWQoKSB7CiAgICB0aGlzLmNsb25lZFRhc2tzID0gSlNPTi5wYXJzZShKU09OLnN0cmluZ2lmeSh0aGlzLnRhc2tzKSk7CiAgICBldmVudEJ1cy4kb24oJ2FkZEVtcHR5VGFzaycsIHRoaXMuYWRkRW1wdHlUYXNrKTsKICB9Cn07"},{"version":3,"sources":["task-list.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <section v-if=\"clonedTasks\" class=\"task-list width100\">\n    <ul class=\"clean-list flex wrap align-center justify-center gap\">\n      <draggable class=\"width100\" v-model=\"clonedTasks\" @end=\"updateTasks\">\n        <task-preview\n          v-for=\"task in clonedTasks\"\n          :user=\"loggedInUser\"\n          :taskColor=\"taskColor\"\n          :key=\"task.id\"\n          :task=\"task\"\n          :statuses=\"board.statuses\"\n          :priorities=\"board.priorities\"\n          :groupId=\"groupId\"\n          @deleteTask=\"deleteTask\"\n          @updateTask=\"updateTask\"\n          :boardMembers=\"board.members\"\n        />\n      </draggable>\n    </ul>\n    <form class=\"flex\" @submit.prevent=\"addTask\">\n      <span class=\"task-color\" :style=\"taskBgc\"></span>\n      <input\n        class=\"add-task-input \"\n        @focus=\"showAddBtn\"\n        v-model=\"txt\"\n        type=\"text\"\n        placeholder=\"+ Add Task\"\n      />\n      <button v-show=\"isAddBtnShowen\" type=\"submit\">Add</button>\n    </form>\n  </section>\n</template>\n\n<script>\nimport taskPreview from './task-preview'\nimport { boardService } from '@/services/board.service'\nimport draggable from 'vuedraggable'\nimport { eventBus } from '@/services/event-bus.service'\n\nexport default {\n  name: 'task-list',\n  props: {\n    tasks: Array,\n    groupId: String,\n    taskColor: String\n  },\n  data() {\n    return {\n      txt: '',\n      isAddBtnShowen: false,\n      clonedTasks: null\n    }\n  },\n\n  computed: {\n    board() {\n      return this.$store.getters.board\n    },\n    loggedInUser() {\n      return this.$store.getters.loggedInUser\n    },\n    taskBgc() {\n      return { backgroundColor: this.taskColor }\n    }\n  },\n  methods: {\n    addEmptyTask(groupId) {\n      if (this.groupId !== groupId) return\n      const newTask = boardService.getEmptyTask()\n      const groupIdx = this.board.groups.findIndex(\n        group => group.id === groupId\n      )\n      this.board.groups[groupIdx].tasks.push(newTask)\n      this.$store.dispatch({\n        type: 'saveBoard',\n        board: this.board\n      })\n      this.$emit('forceRender')\n    },\n    showAddBtn() {\n      this.isAddBtnShowen = true\n    },\n    getGroupById() {\n      const idx = this.board.groups.findIndex(\n        group => group.id === this.groupId\n      )\n      return this.board.groups[idx]\n    },\n    addTask() {\n      const newTask = boardService.getEmptyTask()\n      newTask.txt = this.txt\n      const txt = `Task '${newTask.txt}' added`\n      let newActivity = boardService.getEmptyActivity(txt, this.loggedInUser)\n      newTask.activities.push(newActivity)\n      const group = this.getGroupById()\n      group.tasks.push(newTask)\n      this.$store.dispatch({\n        type: 'saveBoard',\n        board: this.board\n      })\n      this.txt = ''\n      this.isAddBtnShowen = false\n      this.$emit('forceRender')\n    },\n    deleteTask(taskId) {\n      const group = this.getGroupById()\n      const taskIdx = group.tasks.findIndex(task => task.id === taskId)\n      group.tasks.splice(taskIdx, 1)\n      this.$store.dispatch({\n        type: 'saveBoard',\n        board: this.board\n      })\n      this.$emit('forceRender')\n    },\n    updateTask(newTask) {\n      const group = this.getGroupById()\n      const taskIdx = group.tasks.findIndex(task => task.id === newTask.id)\n      group.tasks.splice(taskIdx, 1, newTask)\n      this.$store.dispatch({\n        type: 'saveBoard',\n        board: this.board\n      })\n      this.$emit('forceRender')\n    },\n    updateTasks() {\n      const group = this.getGroupById()\n      console.log('group:', group)\n      console.log('clonedTasks:', this.clonedTasks)\n      group.tasks = this.clonedTasks\n      this.$store.dispatch({\n        type: 'saveBoard',\n        board: this.board\n      })\n      this.$emit('forceRender')\n    }\n  },\n  components: {\n    taskPreview,\n    draggable\n  },\n  created() {\n    this.clonedTasks = JSON.parse(JSON.stringify(this.tasks))\n    eventBus.$on('addEmptyTask', this.addEmptyTask)\n  }\n}\n</script>\n"],"sourceRoot":"src/cmps"}]}