{"remainingRequest":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/babel-loader/lib/index.js!/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/src/views/board-app.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/src/views/board-app.vue","mtime":1609778254071},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["board-app.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <section v-if=\"board\" class=\"board-app flex\">\n    <board-list\n      :expandList=\"expandList\"\n      :isExpanded=\"isListExpanded\"\n      @removeBoard=\"removeCurrBoard\"\n      @addNewBoard=\"addBoard\"\n      :boards=\"boards\"\n      title=\"Boards\"\n    >\n      <button\n        slot=\"expand-btn\"\n        @click=\"toggleExpandList\"\n        :class=\"{\n          'expand-list-btn': true,\n          notExpanded: !isListExpanded\n        }\"\n      >\n        <i :class=\"btnClassExpend\" v-tooltip.right=\"'Expand/Hide List'\"></i>\n      </button>\n      <board-search @searchBoard=\"setSearch\" slot=\"search\" />\n    </board-list>\n    <div :class=\"['board-app-container width100', darkMode]\">\n      <board-header\n        :updateBoardName=\"updateBoardName\"\n        :updateBoardDesc=\"updateBoardDesc\"\n        :board=\"board\"\n        :addGroup=\"addGroup\"\n        @removeMember=\"removeBoardMember\"\n        @addMember=\"addBoardMember\"\n        :displayMode=\"displayMode\"\n        :forceRerender=\"forceRerender\"\n        @setDisplayMode=\"setDisplayMode\"\n      />\n      <group-list\n        v-if=\"board && displayMode === 'Board'\"\n        :key=\"componentKey\"\n        :groups=\"board.groups\"\n        :boardName=\"board.name\"\n        @deleteGroup=\"deleteGroup\"\n        @updateGroup=\"updateGroup\"\n        @updateGroups=\"updateGroups\"\n        @duplicateGroup=\"duplicateGroup\"\n        @forceRender=\"forceRerender\"\n      />\n      <trello-mode\n        :key=\"componentKey\"\n        @forceRender=\"forceRerender\"\n        v-else\n      ></trello-mode>\n    </div>\n    <div v-if=\"isTaskDetailsHover\" class=\"backdrop-layer\"></div>\n    <!-- <task-details\n      v-if=\"this.$route.params.taskId\"\n      @close=\"isTaskDetailsHover = false\"\n      @mouseover.native=\"isTaskDetailsHover = true\"\n      @mouseleave.native=\"isTaskDetailsHover = false\"\n    /> -->\n    <router-view :class=\"['grow', darkMode]\" />\n    <div\n      v-tooltip.top=\"'Chat Board'\"\n      v-show=\"isChatingBtnShown\"\n      class=\"chat-icon-btn-container flex align-center justify-center\"\n    >\n      <i @click=\"toggleChat\" class=\"fas chat-icon fa-comments relative\"></i>\n    </div>\n    <chat-app @closeChat=\"toggleChat\" v-if=\"isChating\" />\n  </section>\n  <div v-else class=\"flex justify-center align-center\">\n    <img src=\"@/assets/imgs/loader.gif\" class=\"loader-app\" />\n  </div>\n</template>\n<script>\nimport { eventBus } from '@/services/event-bus.service'\nimport chatApp from '@/cmps/board-chat'\nimport groupList from '@/cmps/group-list'\nimport boardList from '@/cmps/board-list.vue'\nimport { boardService } from '@/services/board.service'\nimport boardSearch from '@/cmps/board-search'\nimport { utilService } from '@/services/util.service'\nimport boardHeader from '../cmps/board-header.vue'\n// import { socketService } from '@/services/socket.service.js'\nimport trelloMode from '@/cmps/Trello/trello-mode'\nexport default {\n  name: 'board-app',\n  data() {\n    return {\n      isChatingBtnShown: true,\n      isChating: false,\n      isListExpanded: true,\n      isMembersShowen: false,\n      currTaskDetails: null,\n      isTaskDetailsHover: false,\n      componentKey: 0\n    }\n  },\n  computed: {\n    // NOT  REMOVE THIS FUNC !!!!!!!!!!\n    darkMode() {\n      return this.$store.getters.getDarkModeToggle\n    },\n    displayMode() {\n      return this.$store.getters.displayMode\n    },\n    btnClassExpend() {\n      return this.isListExpanded\n        ? 'expend-btn fas fa-chevron-left'\n        : 'expend-btn fas fa-chevron-right'\n    },\n    chatControl() {\n      return this.isChatingBtnShown ? 'Hide Chat' : 'Show Chat'\n    },\n    user() {\n      return this.$store.getters.user\n    },\n    miniUser() {\n      return this.$store.getters.miniUser\n    },\n    board() {\n      return this.$store.getters.board\n    },\n    boards() {\n      return this.$store.getters.boards\n    }\n  },\n  methods: {\n    setDisplayMode(displayMode) {\n      this.$store.commit({ type: 'setDisplayMode', displayMode })\n    },\n    toogleChatBtn() {\n      this.isChatingBtnShown = !this.isChatingBtnShown\n    },\n    expandList() {\n      this.isListExpanded = true\n    },\n    toggleExpandList() {\n      this.isListExpanded = !this.isListExpanded\n    },\n    toggleChat() {\n      this.isChating = !this.isChating\n      this.isChatingBtnShown = !this.isChatingBtnShown\n    },\n    duplicateGroup(group) {\n      group.id = utilService.makeId()\n      this.board.groups.push(group)\n      const txt = `${this.user.fullName} duplicated group the group ${group.name} `\n      let newActivity = boardService.getEmptyActivity(txt, this.miniUser)\n      this.board.activities.push(newActivity)\n      this.$store.dispatch({ type: 'saveBoard', board: this.board })\n      this.$store.dispatch({ type: 'updateBoard', board: this.board })\n      this.forceRerender()\n    },\n    updateBoardName(ev) {\n      ev.target.blur()\n      if (ev.target.innerText === this.board.name) return\n      else {\n        this.board.name = ev.target.innerText\n        const txt = `${this.user.fullName} update Board name`\n        let newActivity = boardService.getEmptyActivity(txt, this.miniUser)\n        this.board.activities.push(newActivity)\n        this.$store.dispatch({ type: 'saveBoard', board: this.board })\n        this.$store.dispatch({ type: 'updateBoard', board: this.board })\n        this.$notify({\n          message: 'Board name updated',\n          position: 'bottom-left',\n          duration: 2000\n        })\n        this.forceRerender()\n      }\n    },\n    updateBoardDesc(ev) {\n      ev.target.blur()\n      if (ev.target.innerText === this.board.description) return\n      else {\n        this.board.description = ev.target.innerText\n        const txt = `${this.user.fullName} update Board description`\n        let newActivity = boardService.getEmptyActivity(txt, this.miniUser)\n        this.board.activities.push(newActivity)\n        this.$store.dispatch({ type: 'saveBoard', board: this.board })\n        this.$notify({\n          message: 'Board description updated',\n          position: 'bottom-left',\n          duration: 2000\n        })\n        this.forceRerender()\n      }\n    },\n    forceRerender() {\n      this.componentKey += 1\n    },\n    addBoardMember(user) {\n      this.board.members.unshift(user)\n      const txt = `${this.user.fullName} add ${user.fullName} to Board`\n      let newActivity = boardService.getEmptyActivity(txt, this.miniUser)\n      this.board.activities.push(newActivity)\n      this.$store.dispatch({ type: 'saveBoard', board: this.board })\n      this.$notify({\n        message: 'New member added to board',\n        position: 'bottom-left',\n        duration: 2000\n      })\n    },\n    removeBoardMember(member) {\n      const idx = this.board.members.findIndex(\n        bMember => bMember._id === member._id\n      )\n      this.board.members.splice(idx, 1)\n      const txt = `${this.user.fullName} remove  ${member.fullName} from Board`\n      let newActivity = boardService.getEmptyActivity(txt, this.miniUser)\n      this.board.activities.push(newActivity)\n      this.$store.dispatch({ type: 'saveBoard', board: this.board })\n      this.$notify({\n        message: 'Member removed from board',\n        position: 'bottom-left',\n        duration: 2000\n      })\n    },\n    setSearch(searchBoard) {\n      this.$store.commit({ type: 'setSearch', searchBoard })\n      this.$store.dispatch({ type: 'loadBoards' })\n    },\n    async removeCurrBoard(boardId) {\n      try {\n        const board = boardService.getById()\n        if (board.creator._id !== this.user_id) {\n          return\n        }\n        await this.$confirm(\n          'This will permanently delete the board. Continue?',\n          'Warning',\n          {\n            confirmButtonText: 'OK',\n            cancelButtonText: 'Cancel',\n            type: 'warning'\n          }\n        )\n        const txt = `${this.user.fullName} remove Board`\n        let newActivity = boardService.getEmptyActivity(txt, this.miniUser)\n        this.board.activities.push(newActivity)\n        this.$store.dispatch({ type: 'removeBoard', boardId })\n        this.$store.dispatch({\n          type: 'loadAllBoards',\n          boards: this.boards\n        })\n        this.$notify({\n          message: 'Board deleted',\n          position: 'bottom-left',\n          duration: 2000\n        })\n        this.$message({\n          type: 'success',\n          message: 'Delete completed'\n        })\n      } catch (err) {\n        this.$message({\n          durtion: 2000,\n          showClose: true,\n          type: 'error',\n          offset: 335,\n          message: 'Only the creator can delete the board!'\n        })\n      }\n    },\n    loadBoards() {\n      this.$store.dispatch({ type: 'loadBoards' })\n      this.forceRerender()\n    },\n    async addBoard() {\n      try {\n        const res = await this.$prompt(\n          'Please enter a name to your board',\n          'Add New Board',\n          {\n            confirmButtonText: 'OK',\n            cancelButtonText: 'Cancel'\n          }\n        )\n        const board = boardService.getEmptyBoard()\n        board.name = res.value\n        board.creator = this.miniUser\n        board.members.push(this.miniUser)\n        const txt = `${this.miniUser.fullName} create this Board`\n        let newActivity = boardService.getEmptyActivity(txt, this.miniUser)\n        this.board.activities.push(newActivity)\n        this.$store.dispatch({ type: 'saveBoard', board })\n        this.$message({\n          type: 'success',\n          duration: 2500,\n          message: 'Your Board:' + res.value + ' add '\n        })\n      } catch (err) {\n        this.$message({\n          type: 'info',\n          duration: 2500,\n          message: 'Your action canceled'\n        })\n      }\n    },\n    async loadBoard() {\n      try {\n        await this.$store.dispatch({\n          type: 'loadBoard',\n          boardId: this.$route.params.boardId\n        })\n      } catch (e) {\n        console.log('Erororor!!')\n      }\n    },\n    addGroup() {\n      const newGroup = boardService.getEmptyGroup()\n      this.board.groups.push(newGroup)\n      const txt = `${this.user.fullName} has added a new group!`\n      let newActivity = boardService.getEmptyActivity(txt, this.miniUser)\n      this.board.activities.push(newActivity)\n      this.$store.dispatch({\n        type: 'saveBoard',\n        board: this.board\n      })\n      this.$notify({\n        message: 'New group added',\n        position: 'bottom-left',\n        duration: 2000\n      })\n      this.forceRerender()\n    },\n    deleteGroup(groupId) {\n      const idx = this.board.groups.findIndex(group => group.id === groupId)\n      const txt = `${this.user.fullName} deleted group ${this.board.groups[idx].txt}`\n      this.board.groups.splice(idx, 1)\n      let newActivity = boardService.getEmptyActivity(txt, this.miniUser)\n      this.board.activities.push(newActivity)\n      this.$store.dispatch({\n        type: 'saveBoard',\n        board: this.board\n      })\n      this.$notify({\n        message: 'Group deleted',\n        position: 'bottom-left',\n        duration: 2000\n      })\n      this.forceRerender()\n    },\n    updateGroup(updatedGroup) {\n      const idx = this.board.groups.findIndex(\n        group => group.id === updatedGroup.id\n      )\n      if (idx < 0) return\n      this.board.groups.splice(idx, 1, updatedGroup)\n      const txt = `${this.user.fullName} updated group ${updatedGroup.name}`\n      let newActivity = boardService.getEmptyActivity(txt, this.miniUser)\n      this.board.activities.push(newActivity)\n      this.$store.dispatch({\n        type: 'saveBoard',\n        board: this.board\n      })\n      this.$notify({\n        message: 'Group updated',\n        position: 'bottom-left',\n        duration: 2000\n      })\n      this.forceRerender()\n    },\n    updateGroups(groups) {\n      this.board.groups = groups\n      const txt = `${this.user.fullName} updated the groups`\n      let newActivity = boardService.getEmptyActivity(txt, this.miniUser)\n      this.board.activities.push(newActivity)\n      this.$store.dispatch({\n        type: 'saveBoard',\n        board: this.board\n      })\n      this.$notify({\n        message: 'Groups updated',\n        position: 'bottom-left',\n        duration: 2000\n      })\n      this.forceRerender()\n    }\n  },\n  watch: {\n    '$route.params.boardId'() {\n      this.loadBoard()\n      this.forceRerender()\n    }\n  },\n  created() {\n      if(window.outerWidth < 590){\n          this.isListExpanded = false\n      }\n    this.$store.dispatch({\n      type: 'createPrivateSocket'\n    })\n    this.$store.dispatch({ type: 'loadUsers' })\n    this.loadBoards()\n    this.loadBoard()\n    eventBus.$on('updateGroup', this.updateGroup)\n    eventBus.$on('forceRerender', this.forceRerender)\n  },\n  destroyed() {},\n  components: {\n    groupList,\n    boardList,\n    boardSearch,\n    chatApp,\n    boardHeader,\n    trelloMode\n  }\n}\n</script>\n"],"sourceRoot":"src/views"}]}