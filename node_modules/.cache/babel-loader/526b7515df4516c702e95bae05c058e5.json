{"remainingRequest":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/babel-loader/lib/index.js!/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/eslint-loader/index.js??ref--13-0!/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/src/services/img-upload.service.js","dependencies":[{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/src/services/img-upload.service.js","mtime":1607212102000},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiL1VzZXJzL29yZWx2YWl6bWFuL0Rlc2t0b3AvZGV2L0ZpbmFsU3ByaW50L3Rhc2t1LWZyb250ZW5kL1Rhc2tVLWZyb250ZW5kL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKaW1wb3J0IEF4aW9zIGZyb20gJ2F4aW9zJzsKZXhwb3J0IHZhciBpbWdVcGxvYWQgPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKCkgewogIHZhciBfcmVmID0gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKGV2KSB7CiAgICB2YXIgVVBMT0FEX1BSRVNFVCwgQ0xPVURfTkFNRSwgVVBMT0FEX1VSTCwgRk9STV9EQVRBLCByZXM7CiAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgd2hpbGUgKDEpIHsKICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgIC8vIENsb3VkaW5hcnkgcmVxdWlyZWQgdmFyaWFibGVzCiAgICAgICAgICAgIFVQTE9BRF9QUkVTRVQgPSAnaXEzdnV4MHknOwogICAgICAgICAgICBDTE9VRF9OQU1FID0gJ21zdG95c2d1eSc7CiAgICAgICAgICAgIFVQTE9BRF9VUkwgPSAiaHR0cHM6Ly9hcGkuY2xvdWRpbmFyeS5jb20vdjFfMS8iLmNvbmNhdChDTE9VRF9OQU1FLCAiL2ltYWdlL3VwbG9hZCIpOwogICAgICAgICAgICBGT1JNX0RBVEEgPSBuZXcgRm9ybURhdGEoKTsgLy8gQnVpbGRpbmcgdGhlIHJlcXVlc3QgYm9keQoKICAgICAgICAgICAgRk9STV9EQVRBLmFwcGVuZCgnZmlsZScsIGV2LnRhcmdldC5maWxlc1swXSk7CiAgICAgICAgICAgIEZPUk1fREFUQS5hcHBlbmQoJ3VwbG9hZF9wcmVzZXQnLCBVUExPQURfUFJFU0VUKTsgLy8gU2VuZGluZyBhIHBvc3QgbWV0aG9kIHJlcXVlc3QgdG8gQ2xvdWRuaWFyeXMnIEFQSQoKICAgICAgICAgICAgX2NvbnRleHQucHJldiA9IDY7CiAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA5OwogICAgICAgICAgICByZXR1cm4gQXhpb3MucG9zdChVUExPQURfVVJMLCBGT1JNX0RBVEEpOwoKICAgICAgICAgIGNhc2UgOToKICAgICAgICAgICAgcmVzID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LmFicnVwdCgicmV0dXJuIiwgcmVzLmRhdGEpOwoKICAgICAgICAgIGNhc2UgMTM6CiAgICAgICAgICAgIF9jb250ZXh0LnByZXYgPSAxMzsKICAgICAgICAgICAgX2NvbnRleHQudDAgPSBfY29udGV4dFsiY2F0Y2giXSg2KTsKICAgICAgICAgICAgY29uc29sZS5lcnJvcignRmFpbGVkIHRvIHVwbG9hZCBpbWcgJywgX2NvbnRleHQudDApOwoKICAgICAgICAgIGNhc2UgMTY6CiAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgIH0KICAgICAgfQogICAgfSwgX2NhbGxlZSwgbnVsbCwgW1s2LCAxM11dKTsKICB9KSk7CgogIHJldHVybiBmdW5jdGlvbiBpbWdVcGxvYWQoX3gpIHsKICAgIHJldHVybiBfcmVmLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgfTsKfSgpOw=="},{"version":3,"sources":["/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/src/services/img-upload.service.js"],"names":["Axios","imgUpload","ev","UPLOAD_PRESET","CLOUD_NAME","UPLOAD_URL","FORM_DATA","FormData","append","target","files","post","res","data","console","error"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAGA,OAAO,IAAMC,SAAS;AAAA,qEAAG,iBAAMC,EAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AACvB;AACMC,YAAAA,aAFiB,GAED,UAFC;AAGjBC,YAAAA,UAHiB,GAGJ,WAHI;AAIjBC,YAAAA,UAJiB,6CAI+BD,UAJ/B;AAKjBE,YAAAA,SALiB,GAKL,IAAIC,QAAJ,EALK,EAMvB;;AACAD,YAAAA,SAAS,CAACE,MAAV,CAAiB,MAAjB,EAAyBN,EAAE,CAACO,MAAH,CAAUC,KAAV,CAAgB,CAAhB,CAAzB;AACAJ,YAAAA,SAAS,CAACE,MAAV,CAAiB,eAAjB,EAAkCL,aAAlC,EARuB,CASvB;;AATuB;AAAA;AAAA,mBAWHH,KAAK,CAACW,IAAN,CAAWN,UAAX,EAAuBC,SAAvB,CAXG;;AAAA;AAWfM,YAAAA,GAXe;AAAA,6CAYdA,GAAG,CAACC,IAZU;;AAAA;AAAA;AAAA;AAcrBC,YAAAA,OAAO,CAACC,KAAR,CAAc,uBAAd;;AAdqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAATd,SAAS;AAAA;AAAA;AAAA,GAAf","sourcesContent":["import Axios from 'axios'\n\n\nexport const imgUpload = async ev => {\n  // Cloudinary required variables\n  const UPLOAD_PRESET = 'iq3vux0y'\n  const CLOUD_NAME = 'mstoysguy'\n  const UPLOAD_URL = `https://api.cloudinary.com/v1_1/${CLOUD_NAME}/image/upload`\n  const FORM_DATA = new FormData()\n  // Building the request body\n  FORM_DATA.append('file', ev.target.files[0])\n  FORM_DATA.append('upload_preset', UPLOAD_PRESET)\n  // Sending a post method request to Cloudniarys' API\n  try {\n    const res = await Axios.post(UPLOAD_URL, FORM_DATA)\n    return res.data\n  } catch (err) {\n    console.error('Failed to upload img ', err)\n  }\n}\n"]}]}