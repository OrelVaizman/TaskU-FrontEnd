{"remainingRequest":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/babel-loader/lib/index.js!/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/src/cmps/group-list.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/src/cmps/group-list.vue","mtime":1606649904009},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/orelvaizman/Desktop/dev/FinalSprint/tasku-frontend/TaskU-frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IGdyb3VwUHJldmlldyBmcm9tICdAL2NtcHMvZ3JvdXAtcHJldmlldy52dWUnOwppbXBvcnQgZHJhZ2dhYmxlIGZyb20gJ3Z1ZWRyYWdnYWJsZSc7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnZ3JvdXAtbGlzdCcsCiAgcHJvcHM6IHsKICAgIGdyb3VwczogQXJyYXkKICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBjbG9uZWRHcm91cHM6IG51bGwKICAgIH07CiAgfSwKICBjcmVhdGVkOiBmdW5jdGlvbiBjcmVhdGVkKCkgewogICAgdGhpcy5jbG9uZWRHcm91cHMgPSBKU09OLnBhcnNlKEpTT04uc3RyaW5naWZ5KHRoaXMuZ3JvdXBzKSk7CiAgfSwKICBjb21wb25lbnRzOiB7CiAgICBncm91cFByZXZpZXc6IGdyb3VwUHJldmlldywKICAgIGRyYWdnYWJsZTogZHJhZ2dhYmxlCiAgfSwKICBtZXRob2RzOiB7CiAgICBlbWl0RGVsZXRlOiBmdW5jdGlvbiBlbWl0RGVsZXRlKGdyb3VwSWQpIHsKICAgICAgdGhpcy4kZW1pdCgnZGVsZXRlR3JvdXAnLCBncm91cElkKTsKICAgIH0sCiAgICBlbWl0Rm9yY2VSZW5kZXI6IGZ1bmN0aW9uIGVtaXRGb3JjZVJlbmRlcigpIHsKICAgICAgdGhpcy4kZW1pdCgnZm9yY2VSZW5kZXInKTsKICAgIH0sCiAgICB1cGRhdGVHcm91cDogZnVuY3Rpb24gdXBkYXRlR3JvdXAoZ3JvdXApIHsKICAgICAgdGhpcy4kZW1pdCgndXBkYXRlR3JvdXAnLCBncm91cCk7CiAgICB9LAogICAgZW1pdFVwZGF0ZUdyb3VwczogZnVuY3Rpb24gZW1pdFVwZGF0ZUdyb3VwcygpIHsKICAgICAgdGhpcy4kZW1pdCgndXBkYXRlR3JvdXBzJywgdGhpcy5jbG9uZWRHcm91cHMpOwogICAgfQogIH0KfTs="},{"version":3,"sources":["group-list.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAkBA,OAAA,YAAA,MAAA,0BAAA;AACA,OAAA,SAAA,MAAA,cAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,YADA;AAEA,EAAA,KAAA,EAAA;AACA,IAAA,MAAA,EAAA;AADA,GAFA;AAKA,EAAA,IALA,kBAKA;AACA,WAAA;AACA,MAAA,YAAA,EAAA;AADA,KAAA;AAGA,GATA;AAUA,EAAA,OAVA,qBAUA;AACA,SAAA,YAAA,GAAA,IAAA,CAAA,KAAA,CAAA,IAAA,CAAA,SAAA,CAAA,KAAA,MAAA,CAAA,CAAA;AACA,GAZA;AAaA,EAAA,UAAA,EAAA;AACA,IAAA,YAAA,EAAA,YADA;AAEA,IAAA,SAAA,EAAA;AAFA,GAbA;AAiBA,EAAA,OAAA,EAAA;AACA,IAAA,UADA,sBACA,OADA,EACA;AACA,WAAA,KAAA,CAAA,aAAA,EAAA,OAAA;AACA,KAHA;AAIA,IAAA,eAJA,6BAIA;AACA,WAAA,KAAA,CAAA,aAAA;AACA,KANA;AAQA,IAAA,WARA,uBAQA,KARA,EAQA;AACA,WAAA,KAAA,CAAA,aAAA,EAAA,KAAA;AACA,KAVA;AAWA,IAAA,gBAXA,8BAWA;AACA,WAAA,KAAA,CAAA,cAAA,EAAA,KAAA,YAAA;AACA;AAbA;AAjBA,CAAA","sourcesContent":["<template>\n  <section v-if=\"clonedGroups.length\" class=\"group-container\">\n    <ul class=\"clean-list flex column align-center justify-center gap width100\">\n      <draggable v-model=\"clonedGroups\" @end=\"emitUpdateGroups\" animation=\"200\">\n        <group-preview\n          v-for=\"group in clonedGroups\"\n          :key=\"group._id\"\n          :group=\"group\"\n          :deleteGroup=\"emitDelete\"\n          @updateGroup=\"updateGroup\"\n          @emitForceRender=\"emitForceRender\"\n        />\n      </draggable>\n    </ul>\n    \n  </section>\n</template>\n<script>\nimport groupPreview from '@/cmps/group-preview.vue'\nimport draggable from 'vuedraggable'\n\nexport default {\n  name: 'group-list',\n  props: {\n    groups: Array\n  },\n  data() {\n    return {\n      clonedGroups: null\n    }\n  },\n  created() {\n    this.clonedGroups = JSON.parse(JSON.stringify(this.groups))\n  },\n  components: {\n    groupPreview,\n    draggable\n  },\n  methods: {\n    emitDelete(groupId) {\n      this.$emit('deleteGroup', groupId)\n    },\n    emitForceRender() {\n      this.$emit('forceRender')\n    },\n\n    updateGroup(group) {\n      this.$emit('updateGroup', group)\n    },\n    emitUpdateGroups() {\n      this.$emit('updateGroups', this.clonedGroups)\n    }\n  }\n}\n</script>\n"],"sourceRoot":"src/cmps"}]}